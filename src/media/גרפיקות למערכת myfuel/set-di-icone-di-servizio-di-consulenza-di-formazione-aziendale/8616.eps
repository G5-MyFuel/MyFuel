%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1605.i105.026.P.m005.c23.business training and consulting service set.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Agor
%%CreationDate: 5/20/2016
%%BoundingBox: 0 0 424 407
%%HiResBoundingBox: 0 0 423.3556 406.3783
%%CropBox: 0 0 423.3556 406.3783
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-05-20T11:53:46+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-05-20T11:53:46+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-05-20T11:53:46+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>248</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA+AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBq2vaNpEYk1K8itQ32Fdvib/AFUFWb6BlWXPDGPUacjB&#xA;pcuY1CJk838o6v5f8u3l3cx6xa3GktbslvYRepJdq4uZHiii5ojMpWQsand2PRQDkcnaeAxvi3Tp&#xA;/Z/VwnRjUT9m/f3fpZf5csPMtzq0uvavPJawToyWuh82KwqSvF5N+JkIU1FNq/QKdPDIZ+JM0Dyj&#xA;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&#xA;9rayrM8EMBjd/TPIKHZ2AqRvt0xV71ir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:1ab1818c-f9a9-fa4c-be5a-cc9d2d6fd8ca</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:1ab1818c-f9a9-fa4c-be5a-cc9d2d6fd8ca</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:66473756-cb27-dd4d-8bc4-d41558a80f92</stRef:instanceID>
            <stRef:documentID>xmp.did:66473756-cb27-dd4d-8bc4-d41558a80f92</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e8d8247f-9714-2641-86a7-86d076f249b9</stEvt:instanceID>
                  <stEvt:when>2016-05-18T14:01:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1ab1818c-f9a9-fa4c-be5a-cc9d2d6fd8ca</stEvt:instanceID>
                  <stEvt:when>2016-05-20T11:53:46+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -406.378 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 406.378 li
423.356 406.378 li
423.356 0 li
cp
clp
161.858 53.0355 mo
117.238 53.0355 li
117.238 20.1178 li
161.858 20.1178 li
161.858 53.0355 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.964706 .964706 .964706 rgb
f
161.858 20.1178 mo
117.238 20.1178 li
117.238 53.0355 li
161.858 53.0355 li
161.858 20.1178 li
cp
160.233 21.7434 mo
160.233 51.41 li
118.863 51.41 li
118.863 21.7434 li
160.233 21.7434 li
cp
.529412 .529412 .529412 rgb
f
125.195 46.5131 mo
124.387 46.0609 li
128.59 38.5531 li
133.793 37.2564 li
136.424 32.2348 li
142.16 31.6736 li
145.117 33.6242 li
147.811 30.5433 li
154.564 26.2594 li
155.06 27.0419 li
148.364 31.2891 li
145.285 34.8449 li
141.924 32.6269 li
137.012 33.1077 li
134.421 38.0542 li
129.203 39.355 li
125.195 46.5131 li
cp
.811765 .270588 .0941176 rgb
f
125.071 46.6556 mo
124.51 45.9184 li
129.7 41.9723 li
135.18 41.2871 li
138.713 36.3912 li
143.078 36.7938 li
145.078 39.4391 li
150.266 35.2619 li
154.666 33.7952 li
154.959 34.6735 li
150.639 36.1135 li
144.918 40.7625 li
142.586 37.6784 li
139.154 37.3619 li
135.696 42.1563 li
130.062 42.8606 li
125.071 46.6556 li
cp
0 .356863 .419608 rgb
f
152.539 46.6746 mo
124.403 46.6746 li
124.403 27.0786 li
124.791 27.0786 li
124.791 46.287 li
152.539 46.287 li
152.539 46.6746 li
cp
.341176 .341176 .337255 rgb
f
123.784 27.261 mo
124.597 24.2298 li
125.409 27.261 li
123.784 27.261 li
cp
f
152.426 47.2561 mo
155.319 46.4808 li
152.426 45.7055 li
152.426 47.2561 li
cp
f
165.237 64.2898 mo
165.926 60.9695 166.781 51.617 167.677 48.8771 cv
168.341 46.8494 168.403 46.5813 169.827 44.9891 cv
170.464 44.2745 171.233 43.6959 172.09 43.267 cv
172.12 43.2501 li
172.569 43.0206 173.046 42.8367 173.533 42.7018 cv
174.298 42.4809 175.101 42.3811 175.895 42.4092 cv
180.738 47.4474 180.036 53.2957 178.099 59.6899 cv
178.011 59.9931 177.917 60.2898 177.819 60.5898 cv
177.788 60.6887 li
177.728 60.8832 177.662 61.0778 177.599 61.2756 cv
176.763 63.867 175.773 66.5426 174.923 69.2818 cv
174.384 71.0102 173.526 71.7637 172.089 72.4102 cv
165.158 64.3049 li
165.237 64.2898 li
f
141.713 57.484 mo
141.267 56.5233 li
141.807 56.2028 li
141.832 56.3636 141.896 56.5177 141.993 56.6513 cv
142.124 56.8328 142.317 56.9781 142.554 57.052 cv
142.877 57.1538 143.2 57.2511 143.525 57.3459 cv
144.172 57.529 144.825 57.6913 145.484 57.8372 cv
145.616 57.8671 145.748 57.893 145.88 57.9207 cv
147.087 58.9154 li
147.04 59.1073 li
147.054 59.1424 150.989 65.8226 151.383 66.2899 cv
152.371 68.8042 li
152.361 68.4795 148.693 67.4437 148.671 67.4148 cv
147.28 67.3759 144.312 65.6076 144.168 64.3616 cv
144.116 63.9108 142.178 62.4823 142.178 62.4823 cv
140.851 57.7417 li
141.709 57.4836 li
141.713 57.484 li
cp
.94902 .780392 .6 rgb
f
143.47 63.1531 mo
144.546 62.7688 li
134.939 38.8216 li
134.715 38.9016 li
143.47 63.1531 li
cp
.341176 .341176 .337255 rgb
f
140 58.0729 mo
140.263 58.724 140.903 59.0793 141.431 58.8664 cv
141.958 58.6535 142.172 57.953 141.909 57.3018 cv
141.646 56.6506 141.006 56.2953 140.478 56.5083 cv
139.951 56.7212 139.737 57.4217 140 58.0729 cv
cp
1 .823529 .631373 rgb
f
141.623 61.0768 mo
141.852 61.1003 142.548 61.0919 142.548 61.0919 cv
143.224 61.1014 143.779 60.621 143.787 60.0188 cv
143.787 59.9968 li
143.796 59.3946 143.255 58.8987 142.579 58.8891 cv
141.654 58.8741 li
139.8 58.9481 139.905 61.1102 141.623 61.0768 cv
cp
f
142.096 63.2584 mo
143.668 63.2806 li
144.343 63.2902 144.898 62.8045 144.907 62.1958 cv
144.907 62.1735 li
144.916 61.5649 144.375 61.0637 143.699 61.0542 cv
142.128 61.032 li
140.775 61.0602 140.575 63.0347 142.096 63.2584 cv
cp
f
142.957 65.2451 mo
144.218 65.2629 li
144.76 65.2706 145.206 64.8371 145.214 64.2947 cv
145.214 64.2748 li
145.222 63.7324 144.788 63.2865 144.246 63.2789 cv
142.985 63.261 li
141.738 63.2167 141.604 65.1034 142.957 65.2451 cv
cp
f
143.104 55.7768 mo
143.979 56.0549 146.209 56.5975 146.411 56.6281 cv
147.805 57.0901 150.302 58.9194 150.302 58.9194 cv
150.51 59.1803 151.802 62.7778 151.325 64.8585 cv
151.324 64.8609 151.506 64.9962 151.783 65.2043 cv
151.783 65.2043 150.023 66.7267 149.885 66.6586 cv
148.83 66.1403 147.691 65.4129 147.3 64.1091 cv
147.272 64.0153 147.258 63.9186 147.224 63.8286 cv
146.703 62.4736 146.975 59.8597 146.961 59.8233 cv
147.008 59.6315 li
145.801 58.6367 li
145.669 58.6091 145.536 58.5831 145.405 58.5533 cv
144.746 58.4074 144.093 58.2451 143.446 58.062 cv
143.121 57.9672 142.798 57.8698 142.475 57.7681 cv
142.237 57.6941 142.045 57.5488 141.914 57.3673 cv
141.817 57.2337 141.753 57.0797 141.728 56.9189 cv
141.704 56.7624 141.716 56.5997 141.772 56.4432 cv
141.778 56.4223 li
141.971 55.8856 142.56 55.6068 143.104 55.7768 cv
cp
f
153.447 70.002 mo
155.313 63.0369 li
151.434 61.8961 li
149.428 68.9253 li
153.447 70.002 li
.929412 .929412 .929412 rgb
f
150.882 69.7559 mo
150.91 69.7837 151.021 69.8207 151.197 69.8855 cv
153.115 70.5154 163.146 72.9514 167.666 73.924 cv
168.824 74.1741 169.62 74.3223 169.824 74.3223 cv
170.195 74.3131 170.537 74.3038 170.862 74.276 cv
168.398 67.6162 li
167.166 64.2725 li
164.22 63.763 156.051 62.8645 152.837 61.9568 cv
151.892 65.1246 151.382 67.5606 150.882 69.7559 cv
.341176 .341176 .337255 rgb
f
152.781 68.7191 mo
152.781 69.041 153.042 69.302 153.364 69.302 cv
153.686 69.302 153.947 69.041 153.947 68.7191 cv
153.947 68.3972 153.686 68.1362 153.364 68.1362 cv
153.042 68.1362 152.781 68.3972 152.781 68.7191 cv
cp
1 1 1 rgb
f
154.73 69.302 mo
154.73 69.6239 154.991 69.8849 155.313 69.8849 cv
155.635 69.8849 155.896 69.6239 155.896 69.302 cv
155.896 68.98 155.635 68.7191 155.313 68.7191 cv
154.991 68.7191 154.73 68.98 154.73 69.302 cv
f
gsave
167.913 66.3014 mo
167.166 64.2725 li
169.033 56.6538 li
168.695 59.6074 168.307 62.9395 167.913 66.3014 cv
clp
167.166 56.6538 mo
169.033 56.6538 li
169.033 66.3014 li
167.166 66.3014 li
cp
.294118 .294118 .290196 rgb
f
grestore
167.038 73.7873 mo
162.278 72.7403 153.03 70.4877 151.197 69.8855 cv
165.517 70.9878 li
167.166 64.2725 li
167.913 66.3014 li
167.618 68.8285 167.32 71.3725 167.038 73.7873 cv
.294118 .294118 .290196 rgb
f
200.638 87.4197 mo
165.517 87.4197 li
165.98 82.0226 174.685 43.615 174.685 43.615 cv
178.504 43.007 li
189.991 41.16 li
189.991 41.16 200.715 82.5323 200.638 87.4197 cv
1 1 1 rgb
f
187.599 39.4514 mo
186.653 29.8797 li
182.568 30.362 177.094 30.9123 176.123 30.841 cv
176.123 30.841 176.755 37.8053 176.765 40.8193 cv
176.123 48.6576 185.185 48.3636 187.599 39.4514 cv
cp
.94902 .780392 .6 rgb
f
189.991 41.16 mo
199.691 45.7676 li
199.969 48.8584 200.135 51.9824 200.414 55.3377 cv
201.62 70.0862 202.239 82.5323 202.162 87.4197 cv
183.773 87.4197 li
183.977 68.2297 184.61 49.9984 189.481 41.242 cv
189.991 41.16 li
.341176 .341176 .337255 rgb
f
170.1 46.4134 mo
170.689 46.0561 li
174.685 43.615 li
175.233 43.5277 li
174.088 87.4197 li
165.517 87.4197 li
165.98 82.0226 170.035 49.1562 170.1 46.4134 cv
f
180.699 50.0964 mo
178.226 49.8409 li
177.408 44.9236 li
181.559 45.0819 li
180.699 50.0964 li
cp
.913725 .305882 .105882 rgb
f
179.163 44.9658 mo
175.753 48.8771 li
175.233 46.5004 174.551 44.5469 174.822 43.101 cv
176.788 40.9659 li
176.588 42.616 177.42 44.4194 179.163 44.9658 cv
cp
.854902 .854902 .854902 rgb
f
179.163 44.9658 mo
183.377 49.8409 li
186.253 47.0164 189.241 43.88 189.992 41.1606 cv
187.497 38.4246 li
187.5 40.8739 182.42 45.098 179.163 44.9658 cv
cp
f
180.699 50.0964 mo
178.226 49.8409 li
176.962 72.5373 li
179.483 76.5003 li
182.182 73.3021 li
180.699 50.0964 li
cp
.811765 .270588 .0941176 rgb
f
184.218 69.7277 mo
186.322 62.2314 191.515 48.4112 191.515 48.4112 cv
191.515 48.4112 188.209 46.6944 188.442 46.4322 cv
192.073 46.5606 li
191.417 41.8375 li
188.084 39.0681 li
185.457 47.7486 183.998 60.1432 184.218 69.7277 cv
cp
.235294 .235294 .231373 rgb
f
174.52 69.4962 mo
172.416 61.9998 171.079 47.9579 171.079 47.9579 cv
171.079 47.9579 174.202 46.8072 173.969 46.5451 cv
171.335 46.225 li
173.358 42.7669 li
176.123 41.6878 li
175.233 50.35 174.741 59.9117 174.52 69.4962 cv
cp
f
188.226 32.1619 mo
188.964 30.2667 188.943 29.4436 188.978 27.385 cv
188.567 18.0142 183.21 19.3889 179.735 19.432 cv
175.676 19.6601 171.869 22.4505 171.729 28.6921 cv
171.942 29.3017 172.194 29.801 172.194 29.801 cv
170.898 33.3032 li
170.685 33.8801 171.034 34.5119 171.636 34.6388 cv
172.536 34.8727 li
172.561 35.5018 172.517 38.1974 172.517 38.1974 cv
172.594 39.7842 173.312 42.2494 175.426 42.0305 cv
181.512 41.3942 183.795 38.52 183.299 33.1622 cv
184.779 32.9689 187.685 33.5527 188.226 32.1619 cv
cp
1 .823529 .631373 rgb
f
187.245 36.4054 mo
182.438 37.7658 184.402 30.5751 184.402 30.5751 cv
184.402 30.5751 183.1 32.0317 182.595 32.6758 cv
181.565 32.6758 181.464 32.8096 180.532 32.7484 cv
180.135 26.5962 181.578 21.8974 172.815 23.8567 cv
171.081 23.579 172.618 17.9565 180.651 18.2991 cv
185.34 18.499 189.26 20.8684 189.928 25.5139 cv
190.347 28.4338 190.577 32.3135 187.245 36.4054 cv
cp
.235294 .235294 .231373 rgb
f
185.477 30.6598 mo
185.49 32.1288 184.265 33.8354 183.305 33.8438 cv
182.345 33.852 182.254 32.6189 182.226 31.1501 cv
182.208 30.1786 182.136 28.841 183.187 28.5249 cv
184.107 28.2482 185.458 28.5052 185.477 30.6598 cv
cp
1 .823529 .631373 rgb
f
202.059 81.4528 mo
201.848 75.5524 201.338 66.933 200.562 57.1802 cv
201.641 57.4073 li
202.059 81.4528 li
.822745 .822745 .821176 rgb
f
183.773 87.4197 mo
174.088 87.4197 li
174.157 84.759 li
182.045 78.3852 li
183.954 76.9656 li
183.863 80.3821 183.811 83.8848 183.773 87.4197 cv
.823529 .823529 .819608 rgb
f
202.162 87.4197 mo
183.773 87.4197 li
183.773 87.4197 li
183.811 83.8848 183.863 80.3821 183.954 76.9656 cv
194.926 68.8042 li
193.018 55.592 li
200.562 57.1802 li
201.338 66.933 201.848 75.5524 202.059 81.4528 cv
202.162 87.4197 li
.294118 .294118 .290196 rgb
f
174.088 87.4197 mo
170.864 87.4197 li
174.157 84.759 li
174.088 87.4197 li
f
181.549 79.0624 mo
181.552 79.0402 li
181.641 78.4313 181.172 77.9128 180.531 77.8557 cv
178.074 77.6091 175.73 77.1067 173.535 76.3911 cv
172.962 76.212 172.349 76.5103 172.135 77.0755 cv
172.127 77.0961 li
171.914 77.6608 172.208 78.2904 172.816 78.4841 cv
175.118 79.2465 177.573 79.7877 180.143 80.0653 cv
180.819 80.132 181.461 79.6708 181.549 79.0624 cv
cp
.94902 .780392 .6 rgb
f
186.398 83.5217 mo
185.336 77.6945 li
180.015 78.6646 li
181.078 84.4917 li
186.398 83.5217 li
cp
1 .823529 .631373 rgb
f
178.489 79.0855 mo
178.485 79.0654 li
178.385 78.5161 177.859 78.152 177.309 78.2521 cv
169.264 79.7191 li
168.715 79.8192 168.351 80.3457 168.451 80.895 cv
168.454 80.9152 li
168.554 81.4644 169.081 81.8286 169.63 81.7284 cv
177.676 80.2614 li
178.225 80.1613 178.589 79.6348 178.489 79.0855 cv
cp
.94902 .780392 .6 rgb
f
175.985 81.6111 mo
175.982 81.591 li
175.881 81.0416 175.355 80.6776 174.806 80.7777 cv
171.1 81.4534 li
170.551 81.5535 170.187 82.08 170.287 82.6294 cv
170.29 82.6494 li
170.391 83.1988 170.917 83.5628 171.466 83.4627 cv
175.172 82.787 li
175.721 82.6869 176.085 82.1604 175.985 81.6111 cv
cp
f
177.39 83.373 mo
177.387 83.3529 li
177.287 82.8036 176.76 82.4395 176.211 82.5396 cv
173.104 83.106 li
172.555 83.2062 172.191 83.7327 172.291 84.282 cv
172.295 84.3021 li
172.395 84.8515 172.922 85.2155 173.471 85.1154 cv
176.577 84.549 li
177.126 84.4488 177.491 83.9223 177.39 83.373 cv
cp
f
177.736 85.2689 mo
177.733 85.251 li
177.644 84.7632 177.176 84.4397 176.688 84.5287 cv
173.93 85.0317 li
173.442 85.1207 173.118 85.5883 173.207 86.0762 cv
173.211 86.094 li
173.3 86.5819 173.767 86.9053 174.255 86.8163 cv
177.014 86.3133 li
177.502 86.2243 177.825 85.7568 177.736 85.2689 cv
cp
f
183.171 82.1668 mo
182.813 80.2074 li
182.519 78.591 180.97 77.5197 179.353 77.8144 cv
176.96 78.2508 li
178.384 86.0635 li
180.778 85.627 li
182.394 85.3323 183.465 83.7831 183.171 82.1668 cv
cp
1 .823529 .631373 rgb
f
178.747 85.9973 mo
176.967 86.3218 li
176.479 86.4107 176.012 86.0874 175.923 85.5995 cv
175.92 85.5816 li
175.831 85.0938 176.154 84.6261 176.642 84.5372 cv
176.318 84.5962 li
175.769 84.6963 175.242 84.3323 175.142 83.783 cv
175.139 83.7629 li
175.038 83.2135 175.403 82.687 175.952 82.5868 cv
175.652 82.6415 li
175.103 82.7417 174.576 82.3776 174.476 81.8283 cv
174.473 81.8081 li
174.372 81.2588 174.737 80.7323 175.286 80.6322 cv
174.737 80.7323 174.21 80.3682 174.11 79.8189 cv
174.106 79.7988 li
174.006 79.2495 174.37 78.7229 174.92 78.6228 cv
177.323 78.1846 li
178.747 85.9973 li
cp
f
187.681 83.6204 mo
185.441 76.7665 li
181.568 77.929 li
183.726 84.9129 li
187.681 83.6204 li
cp
.929412 .929412 .929412 rgb
f
197.189 69.5087 mo
197.189 69.5087 190.43 73.474 183.078 77.4759 cv
185.489 85.3151 li
195.215 82.9471 208.721 77.0561 207.968 72.7339 cv
206.88 66.495 205.284 57.7768 203.881 51.3918 cv
203.477 49.5527 202.254 47.5873 200.84 46.4322 cv
198.98 44.9131 196.796 45.488 195.167 47.2778 cv
193.537 49.0677 192.523 51.4746 192.71 53.9496 cv
192.898 56.4245 197.189 69.5087 197.189 69.5087 cv
cp
.341176 .341176 .337255 rgb
f
186.671 83.5975 mo
186.847 83.8671 187.208 83.9433 187.477 83.7675 cv
187.747 83.5917 187.823 83.2305 187.647 82.9608 cv
187.472 82.6911 187.11 82.615 186.841 82.7908 cv
186.571 82.9666 186.495 83.3278 186.671 83.5975 cv
cp
1 1 1 rgb
f
188.622 83.0215 mo
188.798 83.2912 189.159 83.3673 189.429 83.1915 cv
189.698 83.0157 189.774 82.6545 189.599 82.3848 cv
189.423 82.1152 189.062 82.039 188.792 82.2148 cv
188.522 82.3906 188.446 82.7518 188.622 83.0215 cv
cp
f
153.41 178.052 mo
153.44 178.04 li
161.541 175.278 li
161.793 175.173 161.971 174.974 162.065 174.735 cv
162.157 174.502 162.162 174.234 162.053 173.985 cv
162.048 173.967 li
161.833 173.466 161.8 173.018 161.298 173.232 cv
159.986 173.903 154.431 175.675 152.854 176.176 cv
152.047 176.408 151.905 177.054 152.11 177.519 cv
152.115 177.537 li
152.33 178.038 152.909 178.267 153.41 178.052 cv
cp
1 .823529 .631373 rgb
f
152.068 180.547 mo
152.311 181.033 152.903 181.231 153.389 180.988 cv
160.55 177.412 li
161.036 177.169 161.234 176.577 160.991 176.091 cv
160.982 176.073 li
160.739 175.587 160.148 175.389 159.661 175.632 cv
152.5 179.208 li
152.014 179.451 151.817 180.042 152.059 180.529 cv
152.068 180.547 li
cp
f
161.848 177.795 mo
161.839 177.778 li
161.579 177.3 160.981 177.124 160.503 177.384 cv
154.135 180.852 li
153.658 181.112 153.481 181.711 153.742 182.188 cv
153.751 182.205 li
154.011 182.683 154.609 182.859 155.087 182.599 cv
161.454 179.131 li
161.932 178.871 162.108 178.273 161.848 177.795 cv
cp
f
162.618 179.364 mo
162.608 179.349 li
162.341 178.946 161.799 178.836 161.396 179.103 cv
157.018 182.001 li
156.615 182.267 156.505 182.81 156.771 183.213 cv
156.781 183.227 li
157.048 183.63 157.59 183.74 157.993 183.474 cv
162.371 180.576 li
162.774 180.309 162.884 179.767 162.618 179.364 cv
cp
f
167.283 177.758 mo
171.247 176.356 li
169.806 171.702 li
166.411 173.092 li
165.859 172.214 160.943 172.874 160.943 172.874 cv
160.122 173.112 159.317 173.766 158.163 174.432 cv
158.65 177.196 160.078 179.56 161.445 181.189 cv
161.445 181.189 163.326 180.589 163.944 180.361 cv
166.192 179.532 166.903 178.557 167.283 177.758 cv
cp
.94902 .780392 .6 rgb
f
156.325 172.013 mo
156.325 172.034 li
156.327 172.608 156.79 172.894 157.363 172.951 cv
158.092 173.024 159.806 172.924 160.68 172.865 cv
160.664 172.896 162.112 176.651 164.782 176.35 cv
164.792 176.347 li
170.976 174.997 li
169.478 171.222 li
165.796 172.379 li
164.865 170.954 162.377 170.707 161.955 170.698 cv
161.12 170.68 159.386 171.129 157.675 170.994 cv
156.474 170.9 156.323 171.438 156.325 172.013 cv
cp
1 .823529 .631373 rgb
f
184.266 163.946 mo
184.994 160.436 185.898 150.55 186.845 147.654 cv
187.547 145.511 187.612 145.227 189.118 143.545 cv
189.791 142.789 190.604 142.178 191.51 141.724 cv
191.541 141.706 li
192.017 141.464 192.52 141.269 193.035 141.127 cv
193.844 140.893 194.692 140.788 195.532 140.817 cv
200.651 146.143 199.91 152.325 197.861 159.084 cv
197.769 159.404 197.669 159.718 197.566 160.035 cv
197.533 160.139 li
197.47 160.345 197.4 160.551 197.333 160.76 cv
196.449 163.499 195.403 166.327 194.504 169.222 cv
193.935 171.049 193.028 171.846 191.509 172.529 cv
184.183 163.962 li
184.266 163.946 li
.341176 .341176 .337255 rgb
f
171.773 178.162 mo
169.747 170.814 li
165.601 171.849 li
167.533 179.331 li
171.773 178.162 li
.929412 .929412 .929412 rgb
f
169.303 179.31 mo
169.343 179.32 169.464 179.294 169.66 179.259 cv
171.745 178.808 182.193 175.661 186.834 174.129 cv
188.023 173.738 188.828 173.447 189.014 173.338 cv
189.347 173.131 189.654 172.939 189.935 172.741 cv
188.743 165.158 li
184.266 163.946 li
181.308 165.058 170.328 170.262 166.912 171.154 cv
167.746 174.548 168.585 177.041 169.303 179.31 cv
.341176 .341176 .337255 rgb
f
170.479 177.349 mo
170.652 177.642 171.029 177.74 171.323 177.568 cv
171.616 177.396 171.714 177.018 171.542 176.725 cv
171.37 176.431 170.992 176.333 170.699 176.505 cv
170.405 176.678 170.307 177.055 170.479 177.349 cv
1 1 1 rgb
f
172.568 176.837 mo
172.74 177.131 173.118 177.229 173.411 177.057 cv
173.705 176.884 173.803 176.507 173.631 176.213 cv
173.459 175.92 173.081 175.822 172.788 175.994 cv
172.494 176.166 172.396 176.544 172.568 176.837 cv
f
187.249 164.754 mo
186.345 164.509 li
188.743 151.761 li
188.743 151.763 li
188.344 155.354 187.807 159.983 187.249 164.754 cv
.294118 .294118 .290196 rgb
f
169.66 179.259 mo
185.159 170.814 li
186.345 164.509 li
187.249 164.754 li
186.872 167.985 186.485 171.279 186.126 174.361 cv
181.208 175.958 171.644 178.829 169.66 179.259 cv
f
221.685 188.395 mo
184.562 188.395 li
185.052 182.69 194.253 142.092 194.253 142.092 cv
198.29 141.449 li
210.431 139.497 li
210.431 139.497 221.767 183.229 221.685 188.395 cv
1 1 1 rgb
f
207.903 137.691 mo
206.904 127.574 li
202.586 128.083 196.799 128.665 195.773 128.59 cv
195.773 128.59 196.44 135.951 196.452 139.137 cv
195.773 147.422 205.352 147.111 207.903 137.691 cv
cp
.94902 .780392 .6 rgb
f
210.431 139.497 mo
220.685 144.367 li
220.979 147.634 221.154 150.937 221.449 154.483 cv
222.724 170.073 223.378 183.229 223.297 188.395 cv
203.859 188.395 li
204.075 168.11 204.744 148.839 209.892 139.584 cv
210.431 139.497 li
.341176 .341176 .337255 rgb
f
189.406 145.05 mo
190.029 144.672 li
194.253 142.092 li
194.832 142 li
193.622 188.395 li
184.562 188.395 li
185.052 182.69 189.338 147.949 189.406 145.05 cv
f
200.61 148.943 mo
197.996 148.673 li
197.131 143.475 li
201.518 143.643 li
200.61 148.943 li
cp
.913725 .305882 .105882 rgb
f
198.986 143.52 mo
195.382 147.654 li
194.832 145.142 194.111 143.077 194.397 141.549 cv
196.475 139.292 li
196.264 141.036 197.144 142.942 198.986 143.52 cv
cp
.854902 .854902 .854902 rgb
f
198.986 143.52 mo
203.441 148.673 li
206.481 145.687 209.639 142.372 210.433 139.498 cv
207.796 136.606 li
207.799 139.195 202.429 143.66 198.986 143.52 cv
cp
f
200.61 148.943 mo
197.996 148.673 li
196.659 172.664 li
199.325 176.853 li
202.177 173.472 li
200.61 148.943 li
cp
.811765 .270588 .0941176 rgb
f
204.33 169.694 mo
206.554 161.77 212.043 147.162 212.043 147.162 cv
212.043 147.162 208.548 145.347 208.794 145.07 cv
212.632 145.206 li
211.939 140.213 li
208.416 137.286 li
205.639 146.461 204.097 159.563 204.33 169.694 cv
cp
.235294 .235294 .231373 rgb
f
194.079 169.449 mo
191.855 161.525 190.441 146.683 190.441 146.683 cv
190.441 146.683 193.742 145.466 193.496 145.189 cv
190.712 144.851 li
192.85 141.196 li
195.773 140.055 li
194.832 149.211 194.312 159.318 194.079 169.449 cv
cp
f
208.669 130.571 mo
209.667 128.667 209.741 127.8 210.021 125.642 cv
210.691 115.75 204.902 116.564 201.246 116.2 cv
196.956 115.963 192.156 117.381 191.747 124.986 cv
191.899 125.652 192.105 126.206 192.105 126.206 cv
190.441 128.942 li
190.149 129.523 190.168 130.77 191.421 131.312 cv
191.34 134.209 li
191.34 136.922 192.889 139.394 195.136 139.413 cv
200.437 138.757 203.266 136.729 203.375 131.043 cv
204.953 131.014 207.936 131.969 208.669 130.571 cv
cp
1 .823529 .631373 rgb
f
209.437 122.109 mo
203.53 121.844 li
202.179 121.784 201.026 122.799 200.91 124.146 cv
200.803 125.391 200.765 126.834 200.661 128.248 cv
201.633 128.421 204.838 128.455 204.838 128.455 cv
204.838 128.455 203.415 134.352 207.617 133.944 cv
211.125 133.454 210.752 125.429 210.556 123.173 cv
210.506 122.587 210.025 122.136 209.437 122.109 cv
cp
.235294 .235294 .231373 rgb
f
205.958 128.67 mo
205.798 130.215 204.311 131.863 203.301 131.759 cv
202.291 131.655 202.341 130.349 202.485 128.803 cv
202.58 127.78 202.662 126.367 203.803 126.158 cv
204.802 125.976 206.191 126.405 205.958 128.67 cv
cp
1 .823529 .631373 rgb
f
223.187 182.083 mo
222.964 175.847 222.426 166.738 221.606 156.431 cv
222.746 156.671 li
223.187 182.083 li
.822745 .822745 .821176 rgb
f
203.859 188.395 mo
193.622 188.395 li
193.632 187.987 li
203.878 186.764 li
203.871 187.307 203.865 187.85 203.859 188.395 cv
.823529 .823529 .819608 rgb
f
223.297 188.395 mo
203.859 188.395 li
203.859 188.395 li
203.865 187.85 203.871 187.307 203.878 186.764 cv
214.226 185.529 li
216.444 173.517 li
213.632 154.752 li
221.606 156.431 li
222.426 166.738 222.964 175.847 223.187 182.083 cv
223.297 188.395 li
.294118 .294118 .290196 rgb
f
193.622 188.395 mo
190.214 188.395 li
193.632 187.987 li
193.622 188.395 li
f
229.434 172.871 mo
228.284 166.277 226.596 157.061 225.114 150.312 cv
224.687 148.368 223.394 146.291 221.9 145.07 cv
219.933 143.464 217.625 144.072 215.903 145.964 cv
214.18 147.856 213.108 150.4 213.306 153.016 cv
213.397 154.215 218.754 173.168 218.754 173.168 cv
218.754 173.168 216.047 186.865 215.68 188.395 cv
225.539 188.419 li
225.682 188.005 229.502 173.264 229.434 172.871 cv
cp
.341176 .341176 .337255 rgb
f
165.127 160.779 mo
162.849 162.675 li
161.623 161.249 160.438 159.789 159.197 158.375 cv
161.404 156.538 li
161.258 156.022 li
161.07 155.106 161.24 154.16 161.773 153.425 cv
161.913 153.232 163.902 150.971 163.993 150.864 cv
163.996 150.862 li
164.891 151.997 li
167.396 149.913 li
169.456 152.195 170.735 153.886 172.448 156.123 cv
169.798 158.727 li
167.775 160.653 166.597 161.027 165.127 160.779 cv
cp
.94902 .780392 .6 rgb
f
165.982 153.306 mo
165.505 153.718 164.698 153.681 164.286 153.204 cv
164.149 153.045 li
163.951 152.815 163.853 152.517 163.875 152.215 cv
163.897 151.913 164.038 151.632 164.268 151.435 cv
172.651 145.007 li
173.097 144.623 173.77 144.672 174.154 145.118 cv
174.256 145.228 li
174.615 145.644 174.568 146.272 174.152 146.631 cv
165.982 153.306 li
cp
f
168.66 153.93 mo
168.43 154.132 168.136 154.243 167.843 154.238 cv
167.55 154.233 167.283 154.112 167.101 153.903 cv
166.976 153.76 li
166.605 153.333 166.683 152.66 167.15 152.247 cv
169.335 150.322 li
169.549 150.133 169.824 150.029 170.098 150.034 cv
170.371 150.039 170.621 150.152 170.791 150.347 cv
171.047 150.642 li
171.37 151.013 171.303 151.6 170.895 151.96 cv
168.66 153.93 li
cp
1 .823529 .631373 rgb
f
169.908 155.764 mo
169.429 156.174 168.736 156.156 168.36 155.723 cv
168.235 155.579 li
168.054 155.371 167.972 155.094 168.007 154.808 cv
168.042 154.521 168.191 154.25 168.42 154.053 cv
170.173 152.55 li
170.62 152.167 171.267 152.184 171.618 152.588 cv
171.876 152.885 li
172.034 153.066 172.105 153.308 172.075 153.558 cv
172.044 153.807 171.915 154.044 171.714 154.215 cv
169.908 155.764 li
cp
f
171.19 157.205 mo
170.823 157.521 170.262 157.472 169.937 157.097 cv
169.829 156.972 li
169.504 156.597 169.538 156.037 169.905 155.721 cv
171.25 154.565 li
171.592 154.271 172.116 154.316 172.419 154.666 cv
172.642 154.923 li
172.925 155.25 172.896 155.738 172.575 156.013 cv
171.19 157.205 li
cp
f
166.86 153.242 mo
165.679 153.219 li
165.486 153.214 165.299 153.297 165.17 153.445 cv
164.912 153.749 li
164.912 153.749 166.53 156.66 163.547 158.644 cv
165.127 160.779 li
163.125 162.99 li
161.78 161.445 160.496 159.851 159.143 158.312 cv
160.475 157.289 li
161.404 156.538 li
161.258 156.022 li
161.07 155.106 161.24 154.16 161.773 153.425 cv
161.913 153.232 163.902 150.971 163.993 150.864 cv
163.996 150.862 li
164.145 150.733 164.34 150.66 164.543 150.667 cv
166.438 150.711 li
167.712 150.741 li
168.113 150.749 168.434 151.08 168.429 151.479 cv
168.427 151.719 li
168.423 152.13 168.255 152.522 167.962 152.806 cv
167.666 153.093 167.271 153.25 166.86 153.242 cv
cp
f
152.089 163.97 mo
151.361 160.461 150.457 150.575 149.509 147.679 cv
148.808 145.535 148.743 145.252 147.237 143.569 cv
146.564 142.814 145.75 142.202 144.844 141.749 cv
144.813 141.731 li
144.338 141.488 143.834 141.294 143.32 141.151 cv
142.511 140.918 141.663 140.812 140.823 140.842 cv
135.703 146.167 136.445 152.349 138.494 159.108 cv
138.586 159.429 138.686 159.742 138.789 160.059 cv
138.822 160.164 li
138.885 160.37 138.955 160.575 139.021 160.784 cv
139.906 163.523 140.951 166.352 141.851 169.247 cv
142.42 171.074 143.327 171.87 144.846 172.554 cv
152.172 163.986 li
152.089 163.97 li
0 .356863 .419608 rgb
f
162.013 164.824 mo
157.497 158.684 li
160.878 156.069 li
165.556 162.219 li
162.013 164.824 li
.929412 .929412 .929412 rgb
f
164.443 163.596 mo
164.427 163.634 164.332 163.713 164.183 163.844 cv
162.538 165.202 153.598 171.458 149.521 174.154 cv
148.477 174.845 147.75 175.298 147.549 175.376 cv
147.181 175.509 146.84 175.632 146.51 175.729 cv
146.375 168.225 li
146.302 164.459 li
149.006 162.824 156.704 158.798 159.52 156.668 cv
161.668 159.424 163.107 161.627 164.443 163.596 cv
0 .356863 .419608 rgb
f
162.175 163.305 mo
162.299 163.622 162.142 163.979 161.825 164.103 cv
161.508 164.227 161.151 164.07 161.027 163.753 cv
160.903 163.436 161.06 163.079 161.377 162.955 cv
161.694 162.831 162.051 162.988 162.175 163.305 cv
1 1 1 rgb
f
160.48 164.629 mo
160.604 164.945 160.448 165.303 160.131 165.427 cv
159.814 165.55 159.456 165.394 159.332 165.077 cv
159.209 164.76 159.365 164.403 159.682 164.279 cv
159.999 164.155 160.356 164.312 160.48 164.629 cv
f
148.895 162.973 mo
148.686 161.18 148.482 159.423 148.289 157.752 cv
149.524 162.622 li
149.309 162.741 149.099 162.859 148.895 162.973 cv
.0235294 .309804 .356863 rgb
f
150.153 173.734 mo
149.747 170.259 149.311 166.544 148.895 162.973 cv
149.099 162.859 149.309 162.741 149.524 162.622 cv
151.396 170.008 li
164.183 163.844 li
162.618 165.136 154.455 170.858 150.153 173.734 cv
f
114.669 188.419 mo
151.793 188.419 li
151.303 182.714 142.102 142.117 142.102 142.117 cv
138.065 141.474 li
125.924 139.522 li
125.924 139.522 114.588 183.253 114.669 188.419 cv
1 1 1 rgb
f
128.452 137.716 mo
129.451 127.598 li
133.769 128.108 139.556 128.689 140.582 128.614 cv
140.582 128.614 139.914 135.976 139.903 139.161 cv
140.582 147.447 131.003 147.136 128.452 137.716 cv
cp
.94902 .780392 .6 rgb
f
125.924 139.522 mo
115.67 144.392 li
115.376 147.659 115.2 150.961 114.906 154.508 cv
113.631 170.097 112.976 183.253 113.058 188.419 cv
132.496 188.419 li
132.28 168.135 131.611 148.864 126.463 139.608 cv
125.924 139.522 li
0 .356863 .419608 rgb
f
146.948 145.075 mo
146.326 144.697 li
142.102 142.117 li
141.523 142.024 li
142.733 188.419 li
151.793 188.419 li
151.303 182.714 147.017 147.974 146.948 145.075 cv
f
135.745 148.968 mo
138.359 148.697 li
139.224 143.5 li
134.836 143.667 li
135.745 148.968 li
cp
.913725 .305882 .105882 rgb
f
137.369 143.544 mo
140.973 147.679 li
141.522 145.166 142.243 143.102 141.957 141.573 cv
139.879 139.316 li
140.091 141.061 139.211 142.967 137.369 143.544 cv
cp
.854902 .854902 .854902 rgb
f
137.369 143.544 mo
132.914 148.697 li
129.874 145.712 126.716 142.397 125.922 139.522 cv
128.559 136.63 li
128.556 139.219 133.926 143.684 137.369 143.544 cv
cp
f
135.745 148.968 mo
138.359 148.697 li
139.695 172.688 li
137.03 176.877 li
134.178 173.497 li
135.745 148.968 li
cp
.811765 .270588 .0941176 rgb
f
132.025 169.718 mo
129.801 161.795 124.312 147.186 124.312 147.186 cv
124.312 147.186 127.806 145.372 127.561 145.094 cv
123.722 145.23 li
124.416 140.238 li
127.939 137.31 li
130.716 146.486 132.258 159.587 132.025 169.718 cv
cp
0 .435294 .509804 rgb
f
142.276 169.474 mo
144.5 161.55 145.913 146.707 145.913 146.707 cv
145.913 146.707 142.613 145.491 142.859 145.214 cv
145.643 144.875 li
143.505 141.22 li
140.582 140.079 li
141.523 149.236 142.043 159.343 142.276 169.474 cv
cp
f
127.788 130.01 mo
127.008 128.007 127.031 127.137 126.994 124.961 cv
127.429 115.056 133.09 116.509 136.764 116.555 cv
141.054 116.796 145.078 119.745 145.227 126.343 cv
145.002 126.987 144.735 127.515 144.735 127.515 cv
146.104 131.217 li
146.33 131.827 145.961 132.494 145.325 132.628 cv
144.374 132.876 li
144.347 133.541 144.393 136.39 144.393 136.39 cv
144.312 138.067 143.553 140.673 141.319 140.442 cv
134.885 139.769 132.473 136.731 132.997 131.068 cv
131.432 130.863 128.361 131.48 127.788 130.01 cv
cp
1 .823529 .631373 rgb
f
128.826 134.496 mo
133.907 135.934 131.831 128.333 131.831 128.333 cv
131.831 128.333 133.208 129.873 133.741 130.554 cv
134.83 130.554 134.936 130.695 135.921 130.63 cv
136.341 124.127 134.816 119.161 144.078 121.232 cv
145.911 120.938 144.286 114.995 135.795 115.357 cv
130.839 115.568 126.695 118.073 125.99 122.983 cv
125.547 126.07 125.303 130.171 128.826 134.496 cv
cp
.235294 .235294 .231373 rgb
f
130.694 128.423 mo
130.681 129.975 131.975 131.779 132.99 131.788 cv
134.006 131.797 134.102 130.493 134.131 128.941 cv
134.15 127.914 134.226 126.5 133.115 126.166 cv
132.143 125.874 130.714 126.145 130.694 128.423 cv
cp
1 .823529 .631373 rgb
f
113.167 182.111 mo
113.609 156.695 li
114.749 156.455 li
113.929 166.764 113.39 175.875 113.167 182.111 cv
.822745 .822745 .821176 rgb
f
146.14 188.419 mo
114.669 188.419 li
114.669 188.419 114.669 188.419 114.669 188.419 cv
132.496 188.419 li
132.456 184.683 132.401 180.98 132.305 177.369 cv
134.322 178.869 li
142.66 185.607 li
142.733 188.419 li
146.14 188.419 li
.823529 .823529 .819608 rgb
f
132.496 188.419 mo
114.669 188.419 li
113.058 188.419 li
113.167 182.111 li
113.39 175.875 113.929 166.764 114.749 156.455 cv
122.723 154.776 li
120.707 168.742 li
132.305 177.369 li
132.401 180.98 132.456 184.683 132.496 188.419 cv
.0235294 .309804 .356863 rgb
f
146.14 188.419 mo
142.733 188.419 li
142.66 185.607 li
146.14 188.419 li
f
134.846 179.585 mo
134.843 179.562 li
134.749 178.918 135.245 178.37 135.922 178.31 cv
138.52 178.049 140.998 177.518 143.317 176.762 cv
143.924 176.572 144.571 176.888 144.797 177.485 cv
144.805 177.507 li
145.031 178.104 144.72 178.769 144.078 178.974 cv
141.645 179.78 139.049 180.352 136.333 180.645 cv
135.618 180.716 134.94 180.228 134.846 179.585 cv
cp
.94902 .780392 .6 rgb
f
129.721 184.299 mo
130.844 178.139 li
136.468 179.165 li
135.345 185.324 li
129.721 184.299 li
cp
1 .823529 .631373 rgb
f
138.081 179.61 mo
138.085 179.589 li
138.191 179.008 138.747 178.623 139.328 178.729 cv
147.832 180.279 li
148.413 180.385 148.798 180.942 148.692 181.522 cv
148.688 181.544 li
148.582 182.124 148.025 182.509 147.445 182.403 cv
138.941 180.853 li
138.36 180.747 137.975 180.19 138.081 179.61 cv
cp
.94902 .780392 .6 rgb
f
140.728 182.279 mo
140.731 182.258 li
140.837 181.677 141.394 181.293 141.975 181.398 cv
145.891 182.113 li
146.472 182.219 146.857 182.775 146.751 183.356 cv
146.747 183.377 li
146.641 183.958 146.085 184.342 145.504 184.237 cv
141.587 183.522 li
141.007 183.417 140.622 182.86 140.728 182.279 cv
cp
f
139.242 184.142 mo
139.246 184.121 li
139.352 183.54 139.909 183.155 140.489 183.261 cv
143.773 183.86 li
144.353 183.965 144.738 184.522 144.632 185.103 cv
144.628 185.124 li
144.522 185.705 143.966 186.089 143.385 185.983 cv
140.102 185.385 li
139.521 185.279 139.136 184.722 139.242 184.142 cv
cp
f
138.877 186.146 mo
138.88 186.127 li
138.974 185.611 139.469 185.269 139.984 185.363 cv
142.9 185.895 li
143.416 185.989 143.758 186.483 143.664 186.999 cv
143.66 187.018 li
143.566 187.534 143.072 187.875 142.556 187.781 cv
139.64 187.25 li
139.125 187.156 138.783 186.661 138.877 186.146 cv
cp
f
133.132 182.867 mo
133.51 180.796 li
133.822 179.087 135.459 177.955 137.168 178.266 cv
139.698 178.727 li
138.192 186.986 li
135.662 186.524 li
133.953 186.213 132.821 184.575 133.132 182.867 cv
cp
1 .823529 .631373 rgb
f
137.808 186.916 mo
139.689 187.259 li
140.205 187.353 140.699 187.011 140.793 186.495 cv
140.797 186.476 li
140.891 185.961 140.549 185.466 140.033 185.372 cv
140.375 185.435 li
140.956 185.541 141.513 185.156 141.619 184.575 cv
141.622 184.554 li
141.728 183.973 141.343 183.417 140.763 183.311 cv
141.079 183.369 li
141.66 183.474 142.217 183.09 142.323 182.509 cv
142.326 182.488 li
142.432 181.907 142.047 181.35 141.467 181.245 cv
142.047 181.35 142.604 180.966 142.71 180.385 cv
142.714 180.364 li
142.82 179.783 142.435 179.227 141.854 179.121 cv
139.314 178.657 li
137.808 186.916 li
cp
f
128.365 184.403 mo
130.733 177.159 li
134.826 178.387 li
132.545 185.769 li
128.365 184.403 li
cp
.929412 .929412 .929412 rgb
f
118.315 169.487 mo
118.315 169.487 125.46 173.678 133.231 177.908 cv
130.681 186.195 li
120.401 183.692 106.125 177.465 106.921 172.896 cv
108.071 166.301 109.758 157.086 111.241 150.337 cv
111.668 148.393 112.96 146.315 114.455 145.094 cv
116.421 143.489 118.73 144.096 120.452 145.988 cv
122.175 147.88 123.247 150.424 123.049 153.04 cv
122.851 155.656 118.315 169.487 118.315 169.487 cv
cp
0 .356863 .419608 rgb
f
129.433 184.379 mo
129.247 184.664 128.865 184.745 128.58 184.559 cv
128.295 184.373 128.215 183.991 128.4 183.706 cv
128.586 183.421 128.968 183.341 129.253 183.526 cv
129.538 183.712 129.618 184.094 129.433 184.379 cv
cp
1 1 1 rgb
f
127.37 183.77 mo
127.184 184.055 126.803 184.136 126.518 183.95 cv
126.233 183.764 126.152 183.382 126.338 183.097 cv
126.524 182.812 126.906 182.732 127.191 182.918 cv
127.476 183.103 127.556 183.485 127.37 183.77 cv
cp
f
307.484 30.3608 mo
301.991 30.3608 li
301.991 42.7475 li
307.484 42.7475 li
307.484 30.3608 li
cp
0 .356863 .419608 rgb
f
314.35 28.7229 mo
308.857 28.7229 li
308.857 42.7475 li
314.35 42.7475 li
314.35 28.7229 li
cp
f
321.215 18.6907 mo
315.723 18.6907 li
315.723 42.7475 li
321.215 42.7475 li
321.215 18.6907 li
cp
f
328.081 15.6196 mo
322.589 15.6196 li
322.589 42.7475 li
328.081 42.7475 li
328.081 15.6196 li
cp
1 .733333 0 rgb
f
238.312 34.5464 mo
246.275 26.6677 li
246.335 15.4659 li
243.44 15.5441 240.724 16.7023 238.657 18.7472 cv
236.499 20.8819 235.302 23.7291 235.286 26.7644 cv
235.27 29.674 236.342 32.4228 238.312 34.5464 cv
cp
.913725 .305882 .105882 rgb
f
247.085 15.4699 mo
247.026 26.4519 li
250.036 26.468 li
258.008 26.5107 li
257.93 23.6155 256.773 20.9014 254.727 18.8329 cv
252.681 16.7646 249.979 15.5787 247.085 15.4699 cv
cp
1 .733333 0 rgb
f
247.553 27.2049 mo
254.904 34.6349 li
256.81 32.6235 257.9 30.0303 258.004 27.261 cv
247.553 27.2049 li
cp
.341176 .341176 .337255 rgb
f
246.646 27.3555 mo
254.37 35.1626 li
252.263 37.1168 249.536 38.1886 246.65 38.1886 cv
246.588 38.1884 li
243.678 38.1728 240.941 37.0718 238.839 35.0796 cv
246.646 27.3555 li
cp
246.335 15.4659 mo
246.275 26.6677 li
238.312 34.5464 li
236.342 32.4228 235.27 29.674 235.286 26.7644 cv
235.302 23.7291 236.499 20.8819 238.657 18.7472 cv
240.724 16.7023 243.44 15.5441 246.335 15.4659 cv
cp
250.036 26.468 mo
247.026 26.4519 li
247.085 15.4699 li
249.979 15.5787 252.681 16.7646 254.727 18.8329 cv
256.773 20.9014 257.93 23.6155 258.008 26.5107 cv
250.036 26.468 li
cp
247.553 27.2049 mo
258.004 27.261 li
257.9 30.0303 256.81 32.6235 254.904 34.6349 cv
247.553 27.2049 li
cp
258.763 26.8898 mo
258.78 23.6542 257.536 20.6055 255.26 18.3054 cv
252.985 16.0051 249.949 14.7289 246.714 14.7116 cv
246.648 14.7114 li
243.437 14.7114 240.412 15.9553 238.129 18.2138 cv
235.829 20.4893 234.553 23.5246 234.535 26.7604 cv
234.518 29.9959 235.762 33.0446 238.038 35.3449 cv
240.313 37.6449 243.349 38.9212 246.584 38.9387 cv
246.65 38.9389 li
246.65 38.9389 li
249.86 38.9389 252.886 37.6949 255.169 35.4364 cv
257.469 33.1609 258.745 30.1256 258.763 26.8898 cv
cp
1 1 1 rgb
f
246.65 38.1886 mo
249.536 38.1886 252.263 37.1168 254.37 35.1626 cv
246.646 27.3555 li
238.839 35.0796 li
240.941 37.0718 243.678 38.1728 246.588 38.1884 cv
246.65 38.1886 li
cp
0 .356863 .419608 rgb
f
235.196 42.1207 mo
237.759 42.1207 li
237.759 40.37 li
235.196 40.37 li
235.196 42.1207 li
cp
.913725 .305882 .105882 rgb
f
238.885 41.6283 mo
245.707 41.6283 li
245.707 40.8624 li
238.885 40.8624 li
238.885 41.6283 li
cp
.341176 .341176 .337255 rgb
f
238.885 44.7544 mo
245.707 44.7544 li
245.707 43.9885 li
238.885 43.9885 li
238.885 44.7544 li
cp
f
235.196 45.2468 mo
237.759 45.2468 li
237.759 43.4961 li
235.196 43.4961 li
235.196 45.2468 li
cp
0 .356863 .419608 rgb
f
247.137 42.1207 mo
249.701 42.1207 li
249.701 40.37 li
247.137 40.37 li
247.137 42.1207 li
cp
1 .733333 0 rgb
f
250.826 41.6283 mo
258.102 41.6283 li
258.102 40.8624 li
250.826 40.8624 li
250.826 41.6283 li
cp
.341176 .341176 .337255 rgb
f
250.826 44.7544 mo
258.102 44.7544 li
258.102 43.9885 li
250.826 43.9885 li
250.826 44.7544 li
cp
f
247.137 45.2468 mo
249.701 45.2468 li
249.701 43.4961 li
247.137 43.4961 li
247.137 45.2468 li
cp
f
284.534 7.14852 mo
284.534 7.24721 284.484 7.33181 284.4 7.39526 cv
284.308 7.46576 284.203 7.50101 284.076 7.49396 cv
283.949 7.49396 283.843 7.45871 283.751 7.39526 cv
283.667 7.32476 283.624 7.24017 283.624 7.14147 cv
283.646 4.94192 li
283.646 4.84323 283.695 4.76568 283.78 4.69518 cv
283.871 4.63173 283.977 4.59648 284.104 4.59648 cv
284.231 4.60353 284.336 4.63173 284.428 4.70223 cv
284.513 4.77273 284.555 4.85733 284.555 4.95602 cv
284.534 7.14852 li
cp
285.013 4.29334 mo
284.774 4.09595 284.477 4.0043 284.132 3.99725 cv
283.787 3.99725 283.498 4.0889 283.251 4.27219 cv
283.004 4.45549 282.877 4.68108 282.877 4.94897 cv
282.856 7.14852 li
282.849 7.40936 282.969 7.63495 283.216 7.8253 cv
283.455 8.0086 283.751 8.10729 284.09 8.10729 cv
284.435 8.11434 284.724 8.02269 284.971 7.84645 cv
285.218 7.66315 285.345 7.43756 285.345 7.16967 cv
285.366 4.97717 li
285.366 4.70928 285.253 4.48369 285.013 4.29334 cv
cp
0 .356863 .419608 rgb
f
280.142 3.15127 mo
280.142 3.24997 280.092 3.33456 280.008 3.39801 cv
279.916 3.46851 279.81 3.49671 279.684 3.49671 cv
279.557 3.49671 279.451 3.46146 279.359 3.39096 cv
279.275 3.32751 279.232 3.24292 279.232 3.14422 cv
279.254 .944676 li
279.254 .845978 279.303 .76843 279.387 .697932 cv
279.479 .634484 279.585 .599235 279.712 .599235 cv
279.839 .599235 279.944 .634484 280.036 .704982 cv
280.121 .77548 280.163 .860078 280.163 .958776 cv
280.142 3.15127 li
cp
280.621 .296092 mo
280.382 .0986975 280.085 .00704982 279.74 0 cv
279.395 0 279.105 .0845978 278.859 .274943 cv
278.612 .458238 278.485 .683833 278.485 .951726 cv
278.464 3.15127 li
278.457 3.41211 278.577 3.63771 278.823 3.82805 cv
279.063 4.0184 279.359 4.11709 279.698 4.11709 cv
280.043 4.12414 280.332 4.0325 280.586 3.84215 cv
280.833 3.65886 280.96 3.43326 280.96 3.17242 cv
280.981 .979925 li
280.988 .712032 280.868 .486438 280.621 .296092 cv
cp
f
284.063 .0620384 mo
278.889 8.15037 li
279.772 8.15925 li
284.938 .0707845 li
284.063 .0620384 li
cp
f
266.332 17.2858 mo
265.427 15.1406 li
276.763 10.3611 li
287.73 11.3994 li
296.048 3.62107 li
297.638 5.32135 li
288.554 13.8158 li
277.127 12.734 li
266.332 17.2858 li
cp
.913725 .305882 .105882 rgb
f
298.205 7.17094 mo
299.893 1.61843 li
294.24 2.93153 li
298.205 7.17094 li
cp
f
266.121 75.4183 mo
257.643 73.19 li
258.72 66.1585 260.897 58.3671 263.701 50.1436 cv
272.178 52.3719 li
266.121 75.4183 li
.929412 .929412 .929412 rgb
f
297.015 75.4183 mo
305.492 73.19 li
304.416 66.1585 302.239 58.3671 299.435 50.1436 cv
290.957 52.3719 li
297.015 75.4183 li
f
269.979 73.4132 mo
265.87 80.3476 li
260.582 78.6095 255.57 75.3786 251.043 70.6246 cv
249.809 69.3225 248.605 67.9098 247.444 66.3805 cv
249.489 61.2579 li
255.422 63.7946 260.963 66.7305 265.926 70.2746 cv
267.326 71.2695 268.677 72.3137 269.979 73.4132 cv
f
315.689 66.3805 mo
314.522 67.916 313.318 69.3348 312.084 70.6369 cv
312.072 70.6431 li
307.551 75.3909 302.551 78.6095 297.269 80.3476 cv
294.616 75.8823 li
293.154 73.4132 li
293.921 72.7682 294.701 72.1418 295.5 71.5276 cv
296.133 71.0484 296.771 70.5817 297.423 70.1271 cv
302.324 66.6445 307.797 63.7577 313.65 61.2579 cv
315.689 66.3805 li
f
266.036 86.7926 mo
265.375 80.7437 266.917 70.4554 265.604 64.6268 cv
264.901 61.4753 264.622 57.4422 263.701 50.164 cv
267.616 48.5361 272.765 46.2972 273.611 45.4923 cv
275.263 46.1362 279.862 46.3106 281.565 46.4969 cv
281.568 46.4966 li
281.571 46.4969 li
283.274 46.3106 287.872 46.1362 289.524 45.4923 cv
290.371 46.2972 295.519 48.5361 299.435 50.164 cv
298.514 57.4422 298.235 61.4753 297.532 64.6268 cv
296.219 70.4554 297.761 80.7437 297.1 86.7926 cv
266.036 86.7926 li
f
280.449 54.6815 mo
279.661 50.937 li
281.568 50.8856 li
283.475 50.937 li
282.687 54.6815 li
280.449 54.6815 li
cp
0 .356863 .419608 rgb
f
238.05 59.7251 mo
237.369 59.2591 li
236.462 58.4215 li
235.584 55.974 li
235.461 55.6312 235.147 55.4122 234.804 55.3938 cv
234.519 54.5992 li
234.355 54.1428 233.853 53.9056 233.396 54.0694 cv
233.38 54.0754 li
233.268 54.1153 233.171 54.1759 233.088 54.2504 cv
232.818 54.1079 232.484 54.0977 232.194 54.2525 cv
232.177 54.2616 li
231.713 54.5097 231.537 55.0872 231.785 55.5515 cv
233.546 58.8472 li
233.565 58.8749 li
233.622 58.9599 li
233.678 59.0312 li
233.74 59.093 li
233.82 59.1613 li
233.845 59.1821 li
236.92 61.3052 li
237.353 61.6044 237.946 61.4957 238.246 61.0625 cv
238.257 61.0466 li
238.556 60.6134 238.483 60.0242 238.05 59.7251 cv
cp
.960784 .752941 .54902 rgb
f
245.601 59.8912 mo
242.762 58.9936 li
242.581 58.9547 242.408 58.8862 242.249 58.7909 cv
239.331 57.0405 li
238.88 56.7677 238.294 56.9115 238.021 57.3617 cv
238.011 57.3782 li
237.739 57.8284 237.882 58.4146 238.333 58.6875 cv
240.208 59.8239 li
240.208 59.8239 245.865 59.948 245.601 59.8912 cv
cp
f
245.803 59.9607 mo
243.46 59.0798 237.955 59.6734 237.955 59.6734 cv
234.775 58.2578 li
232.57 55.5422 li
232.238 55.1335 231.638 55.0712 231.229 55.4031 cv
231.214 55.4152 li
230.805 55.7471 230.743 56.3474 231.075 56.7561 cv
233.787 59.9288 li
233.787 59.9288 236.129 61.523 236.904 61.9554 cv
237.049 62.0367 237.269 62.1146 237.487 62.2083 cv
238.388 62.5956 240.937 63.6117 243.253 63.8307 cv
246.263 64.6291 li
247.803 61.2515 li
245.803 59.9607 li
cp
1 .811765 .623529 rgb
f
244.756 65.3261 mo
246.742 60.2629 li
249.43 61.3172 li
247.443 66.3805 li
244.756 65.3261 li
cp
.854902 .854902 .854902 rgb
f
246.162 65.3457 mo
246.409 65.4427 246.689 65.3209 246.786 65.0735 cv
246.883 64.8261 246.761 64.5469 246.513 64.4499 cv
246.266 64.3528 245.987 64.4747 245.89 64.7221 cv
245.793 64.9694 245.915 65.2486 246.162 65.3457 cv
cp
1 1 1 rgb
f
325.085 59.7251 mo
325.767 59.2591 li
326.673 58.4215 li
327.552 55.974 li
327.675 55.6312 327.989 55.4122 328.331 55.3938 cv
328.616 54.5992 li
328.78 54.1428 329.283 53.9056 329.739 54.0694 cv
329.756 54.0754 li
329.867 54.1153 329.965 54.1759 330.047 54.2504 cv
330.318 54.1079 330.652 54.0977 330.942 54.2525 cv
330.959 54.2616 li
331.423 54.5097 331.598 55.0872 331.35 55.5515 cv
329.59 58.8472 li
329.571 58.8749 li
329.514 58.9599 li
329.458 59.0312 li
329.395 59.093 li
329.315 59.1613 li
329.291 59.1821 li
326.216 61.3052 li
325.783 61.6044 325.189 61.4957 324.89 61.0625 cv
324.879 61.0466 li
324.58 60.6134 324.652 60.0242 325.085 59.7251 cv
cp
.960784 .752941 .54902 rgb
f
317.535 59.8912 mo
320.374 58.9936 li
320.555 58.9547 320.728 58.8862 320.887 58.7909 cv
323.805 57.0405 li
324.255 56.7677 324.841 56.9115 325.114 57.3617 cv
325.124 57.3782 li
325.397 57.8284 325.253 58.4146 324.803 58.6875 cv
322.928 59.8239 li
322.928 59.8239 317.27 59.948 317.535 59.8912 cv
cp
f
317.333 59.9607 mo
319.676 59.0798 325.181 59.6734 325.181 59.6734 cv
328.361 58.2578 li
330.566 55.5422 li
330.898 55.1335 331.498 55.0712 331.907 55.4031 cv
331.922 55.4152 li
332.33 55.7471 332.393 56.3474 332.061 56.7561 cv
329.348 59.9288 li
329.348 59.9288 327.007 61.523 326.232 61.9554 cv
326.086 62.0367 325.867 62.1146 325.649 62.2083 cv
324.747 62.5956 322.198 63.6117 319.883 63.8307 cv
316.873 64.6291 li
315.333 61.2515 li
317.333 59.9607 li
cp
1 .811765 .623529 rgb
f
318.38 65.3261 mo
316.393 60.2629 li
313.706 61.3172 li
315.692 66.3805 li
318.38 65.3261 li
cp
.854902 .854902 .854902 rgb
f
316.974 65.3457 mo
316.726 65.4427 316.447 65.3209 316.35 65.0735 cv
316.253 64.8261 316.375 64.5469 316.622 64.4499 cv
316.87 64.3528 317.149 64.4747 317.246 64.7221 cv
317.343 64.9694 317.221 65.2486 316.974 65.3457 cv
cp
1 1 1 rgb
f
280.449 54.6815 mo
278.594 74.1623 li
281.568 76.7937 li
284.541 74.1623 li
282.687 54.6815 li
280.449 54.6815 li
cp
0 .435294 .509804 rgb
f
276.134 41.1732 mo
276.168 42.8252 li
276.168 42.8337 li
276.194 44.5959 li
276.194 44.6043 li
276.211 45.3922 li
276.312 51.0514 li
279.667 50.9837 li
281.48 50.9498 li
281.489 50.9498 li
281.633 50.9413 li
283.293 50.9074 li
286.741 50.8396 li
286.894 45.3837 li
286.911 44.6891 li
286.961 42.9354 li
286.961 42.9269 li
287.004 41.4782 li
276.134 41.1732 li
cp
.94902 .780392 .6 rgb
f
281.489 22.0753 mo
286.355 22.0556 290.236 25.2573 289.875 31.0254 cv
289.833 31.6937 289.758 32.3349 289.626 33.0067 cv
290.709 32.3935 291.658 33.4644 291.277 35.1047 cv
291.009 36.2612 290.446 37.8142 289.805 38.0477 cv
289.037 38.3276 288.803 37.8492 288.758 37.8344 cv
288.415 39.5011 288.277 40.9898 287.683 41.874 cv
286.979 42.9204 286.438 43.7076 285.933 44.3003 cv
284.789 45.6439 283.839 45.977 281.654 45.9909 cv
281.641 45.9909 li
281.629 45.9911 li
279.444 46.005 278.49 45.684 277.329 44.355 cv
276.817 43.7689 276.265 42.9886 275.548 41.9513 cv
274.943 41.0748 274.785 39.588 274.421 37.9257 cv
274.377 37.9411 274.149 38.4225 273.377 38.1523 cv
272.734 37.927 272.151 36.3813 271.867 35.2283 cv
271.466 33.593 272.401 32.51 273.492 33.1095 cv
273.352 32.4395 273.268 31.7992 273.218 31.1315 cv
272.783 25.3685 276.623 22.1177 281.489 22.0753 cv
cp
1 .823529 .631373 rgb
f
288.499 23.7482 mo
290.369 25.9262 290.956 28.3506 290.227 32.8324 cv
289.495 33.244 289.108 33.7895 288.829 36.016 cv
288.299 36.166 288.068 36.2006 287.585 36.3661 cv
290.492 24.491 285.892 24.2828 284.629 24.0371 cv
283.601 23.8373 279.4 23.864 278.375 24.0769 cv
277.115 24.3387 272.518 24.6054 275.576 36.4426 cv
275.09 36.2832 274.86 36.2516 274.327 36.1083 cv
274.019 33.8856 273.626 33.3451 272.889 32.9428 cv
272.103 28.4706 272.897 26.218 274.501 23.8373 cv
276.727 20.5327 285.157 19.8557 288.499 23.7482 cv
cp
.235294 .235294 .231373 rgb
f
278.587 22.0961 mo
277.969 22.1016 277.422 22.3339 276.88 22.6309 cv
276.13 23.0419 274.214 25.8184 274.614 26.4723 cv
276.236 29.1226 281.261 29.8792 284.806 29.9788 cv
284.417 29.6791 283.749 29.081 283.618 28.5152 cv
285.532 29.3609 287.734 29.5376 289.758 29.0079 cv
289.125 27.2736 288.448 25.4716 287.1 24.2101 cv
286.004 23.1852 284.549 22.6106 283.074 22.3402 cv
281.598 22.0698 280.087 22.0825 278.587 22.0961 cv
cp
f
276.33 54.1683 mo
274.439 51.5005 273.304 48.7109 273.064 45.7765 cv
276.186 44.0398 li
276.76 46.7404 278.693 49.3303 281.568 50.8981 cv
276.33 54.1683 li
cp
.854902 .854902 .854902 rgb
f
286.806 54.1683 mo
288.696 51.5005 289.832 48.7109 290.072 45.7765 cv
286.95 44.0398 li
286.376 46.7404 284.443 49.3303 281.568 50.8981 cv
286.806 54.1683 li
cp
f
283.811 86.7944 mo
266.098 86.7944 li
266.097 86.7938 266.097 86.7932 266.097 86.7926 cv
283.806 86.7926 li
283.808 86.7932 283.81 86.7937 283.811 86.7944 cv
265.897 80.5179 mo
265.87 80.3476 li
260.582 78.6095 255.57 75.3786 251.043 70.6246 cv
251.043 70.6246 li
255.57 75.3786 260.582 78.6095 265.87 80.3476 cv
265.903 80.2919 li
265.901 80.3674 265.899 80.4427 265.897 80.5179 cv
.954817 .954817 .954418 rgb
f
266.147 70.4327 mo
266.073 70.3798 266 70.3272 265.926 70.2746 cv
265.952 69.5109 265.985 68.5852 266.023 67.5701 cv
266.096 68.4778 266.134 69.4382 266.147 70.4327 cv
.886274 .886274 .886274 rgb
f
265.87 80.3476 mo
260.582 78.6095 255.57 75.3786 251.043 70.6246 cv
254.964 73.0568 259.149 75.3241 262.122 75.3241 cv
263.91 75.3241 265.259 74.5057 265.852 72.412 cv
265.852 72.412 265.876 71.5828 265.926 70.2746 cv
265.926 70.2746 li
266 70.3272 266.073 70.3798 266.147 70.4327 cv
266.19 73.5815 265.991 77.0704 265.903 80.2919 cv
265.87 80.3476 li
f
283.806 86.7926 mo
266.097 86.7926 li
266.024 86.1353 265.968 81.7718 265.932 80.7776 cv
265.932 80.7347 li
265.897 80.5179 li
265.899 80.4427 265.901 80.3674 265.903 80.2919 cv
265.991 77.0704 266.19 73.5815 266.147 70.4327 cv
266.134 69.4382 266.096 68.4778 266.023 67.5701 cv
266.218 62.3069 266.534 54.6367 266.73 54.6367 cv
266.798 56.1046 266.865 57.5726 266.933 59.0344 cv
267.129 63.211 267.35 67.4921 268.978 71.3372 cv
269.273 72.0373 269.629 72.7192 270.035 73.3763 cv
271.767 76.1772 274.445 78.4374 277.626 78.9779 cv
274.727 78.5726 271.834 78.1672 268.935 77.768 cv
272.852 81.366 278.74 85.078 283.806 86.7926 cv
f
297.25 81.0075 mo
297.245 80.7685 297.239 80.5281 297.232 80.2858 cv
297.269 80.3476 li
302.551 78.6095 307.551 75.3909 312.072 70.6431 cv
312.072 70.6431 li
307.551 75.3909 302.551 78.6095 297.269 80.3476 cv
297.269 80.7776 li
297.263 80.8369 297.256 80.9144 297.25 81.0075 cv
.954817 .954817 .954418 rgb
f
296.988 70.4332 mo
297.004 69.2729 297.053 68.1588 297.152 67.1209 cv
297.259 68.0778 297.351 69.0819 297.423 70.1271 cv
297.277 70.2285 297.133 70.3306 296.988 70.4332 cv
.886274 .886274 .886274 rgb
f
297.269 80.3476 mo
297.232 80.2858 li
297.144 77.066 296.946 73.5802 296.988 70.4332 cv
297.133 70.3306 297.277 70.2285 297.423 70.1271 cv
297.423 70.1271 li
297.49 71.0976 297.539 72.111 297.564 73.149 cv
298.247 74.6939 299.475 75.3157 301.033 75.3158 cv
303.998 75.3161 308.162 73.0667 312.072 70.6431 cv
307.551 75.3909 302.551 78.6095 297.269 80.3476 cv
f
296.95 86.7698 mo
288.615 86.7698 li
291.753 85.7072 293.584 79.3527 294.616 75.8823 cv
295.027 74.5065 295.31 73.0324 295.5 71.5276 cv
296.298 65.2195 295.445 58.4448 295.297 56.5161 cv
295.408 57.4928 296.523 61.4822 297.152 67.1209 cv
297.053 68.1588 297.004 69.2729 296.988 70.4332 cv
296.946 73.5802 297.144 77.066 297.232 80.2858 cv
297.239 80.5281 297.245 80.7685 297.25 81.0075 cv
297.168 82.2076 297.069 86.0003 296.95 86.7698 cv
f
391.309 19.9381 mo
388.734 19.7903 li
387.686 22.2752 li
385.767 22.9441 li
383.402 21.6488 li
381.476 23.3654 li
382.492 25.8633 li
381.608 27.6934 li
379.02 28.4499 li
378.872 31.0254 li
381.357 32.0731 li
382.026 33.9922 li
380.73 36.3574 li
382.447 38.2831 li
384.945 37.2668 li
386.775 38.1508 li
387.532 40.7393 li
390.107 40.8871 li
391.155 38.4022 li
393.074 37.7333 li
395.439 39.0286 li
397.365 37.312 li
396.349 34.8141 li
397.233 32.984 li
399.821 32.2275 li
399.969 29.652 li
397.484 28.6043 li
396.815 26.6852 li
398.11 24.32 li
396.394 22.3943 li
393.896 23.4105 li
392.066 22.5265 li
391.309 19.9381 li
cp
.913725 .305882 .105882 rgb
f
380.366 26.5573 mo
379.386 23.7474 li
376.276 23.7279 li
374.716 21.978 li
375.052 18.8858 li
372.373 17.5915 li
370.16 19.777 li
367.82 19.6427 li
365.871 17.2183 li
363.061 18.1977 li
363.041 21.3081 li
361.292 22.868 li
358.199 22.5317 li
356.905 25.2111 li
359.091 27.4243 li
358.956 29.7646 li
356.532 31.7133 li
357.511 34.5232 li
360.622 34.5427 li
362.182 36.2926 li
361.845 39.3848 li
364.525 40.6791 li
366.738 38.4936 li
369.078 38.6279 li
371.027 41.0523 li
373.837 40.0729 li
373.856 36.9625 li
375.606 35.4026 li
378.698 35.739 li
379.993 33.0595 li
377.807 30.8463 li
377.941 28.506 li
380.366 26.5573 li
cp
0 .356863 .419608 rgb
f
362.03 28.767 mo
361.827 32.3119 364.536 35.3506 368.081 35.554 cv
371.626 35.7574 374.664 33.0486 374.868 29.5036 cv
375.071 25.9587 372.362 22.92 368.817 22.7166 cv
365.272 22.5132 362.234 25.222 362.03 28.767 cv
cp
1 1 1 rgb
f
383.519 30 mo
383.332 33.2595 385.822 36.0534 389.082 36.2404 cv
392.341 36.4274 395.135 33.9368 395.322 30.6774 cv
395.509 27.4179 393.018 24.624 389.759 24.437 cv
386.5 24.25 383.706 26.7406 383.519 30 cv
cp
f
380.604 18.148 mo
380.631 13.927 li
381.335 14.6055 381.828 15.3656 381.821 16.3643 cv
381.817 17.0666 381.571 17.8673 380.604 18.148 cv
cp
378.102 7.75137 mo
378.106 7.05401 378.336 6.26028 379.232 5.96182 cv
379.205 10.1016 li
378.549 9.44473 378.096 8.70781 378.102 7.75137 cv
cp
384.29 16.2215 mo
384.305 13.949 382.608 12.7176 380.967 11.527 cv
380.859 11.4486 380.754 11.3708 380.647 11.2929 cv
380.682 5.90154 li
381.775 6.14283 382.026 7.02058 382.021 7.77646 cv
382.019 8.07315 li
384.313 8.08784 li
384.313 7.95049 li
384.331 5.29064 382.488 4.48135 380.692 4.32084 cv
380.702 2.72875 li
379.252 2.71946 li
379.242 4.3142 li
377.462 4.46443 375.648 5.26443 375.631 7.89488 cv
375.617 10.1666 377.314 11.3981 378.954 12.5887 cv
379.188 12.7599 li
379.153 18.188 li
378.039 17.945 377.781 17.0822 377.786 16.3384 cv
377.791 15.5647 li
375.496 15.55 li
375.492 16.1652 li
375.475 18.8139 377.328 19.6282 379.143 19.7933 cv
379.135 21.0239 li
380.585 21.0331 li
380.593 19.8027 li
382.409 19.6614 384.273 18.8714 384.29 16.2215 cv
cp
0 .356863 .419608 rgb
f
386.035 88.7688 mo
386.148 81.4315 386.701 63.2111 386.701 63.2111 cv
384.958 63.3392 375.125 62.3509 367.789 61.4847 cv
367.232 88.7688 li
386.035 88.7688 li
cp
.94902 .780392 .6 rgb
f
364.964 65.5835 mo
363.638 62.1798 363.677 60.7014 363.613 57.0042 cv
364.352 40.1744 373.972 42.6434 380.214 42.7208 cv
387.504 43.1304 394.341 48.142 394.593 59.3518 cv
394.211 60.4467 393.758 61.3433 393.758 61.3433 cv
396.084 67.6332 li
396.468 68.6694 395.841 69.8041 394.76 70.0319 cv
393.144 70.4521 li
393.099 71.582 393.177 76.4231 393.177 76.4231 cv
393.039 79.2731 391.75 83.7004 387.953 83.3073 cv
377.022 82.1646 372.923 77.0026 373.813 67.38 cv
371.155 67.0329 365.936 68.0813 364.964 65.5835 cv
cp
1 .823529 .631373 rgb
f
366.727 73.2047 mo
375.36 75.648 371.832 62.7336 371.832 62.7336 cv
371.832 62.7336 374.171 65.3497 375.078 66.5065 cv
376.927 66.5065 377.108 66.7467 378.782 66.6368 cv
379.496 55.5875 376.905 47.1486 392.642 50.6675 cv
395.756 50.1686 392.995 40.0709 378.568 40.6861 cv
370.147 41.0452 363.107 45.3005 361.908 53.6437 cv
361.155 58.8878 360.741 65.8558 366.727 73.2047 cv
cp
.235294 .235294 .231373 rgb
f
369.901 62.8857 mo
369.879 65.524 372.077 68.5891 373.802 68.6042 cv
375.527 68.619 375.69 66.4044 375.74 63.7664 cv
375.773 62.0215 375.901 59.6191 374.014 59.0514 cv
372.362 58.5546 369.935 59.0161 369.901 62.8857 cv
cp
1 .823529 .631373 rgb
f
363.605 28.8573 mo
363.451 31.5326 365.496 33.8257 368.171 33.9792 cv
370.846 34.1327 373.139 32.0885 373.293 29.4133 cv
373.446 26.7381 371.402 24.4449 368.727 24.2914 cv
366.052 24.1379 363.758 26.1821 363.605 28.8573 cv
cp
.913725 .305882 .105882 rgb
f
385.018 30.0861 mo
384.878 32.5175 386.736 34.6018 389.168 34.7413 cv
391.599 34.8808 393.684 33.0228 393.823 30.5913 cv
393.963 28.1599 392.105 26.0756 389.673 25.9361 cv
387.242 25.7966 385.157 27.6546 385.018 30.0861 cv
cp
0 .356863 .419608 rgb
f
64.1367 53.8109 mo
59.3275 50.2365 li
56.4924 48.1147 li
55.0748 47.0623 li
52.9789 48.7321 li
52.2136 49.3409 li
52.692 45.6969 li
53.6835 42.2097 li
53.7183 42.088 li
49.683 41.0095 li
48.909 40.8007 48.0915 40.7834 47.3176 40.9661 cv
41.0994 42.3923 li
30.7331 35.0173 li
21.6706 49.0798 li
34.7765 56.2106 li
37.4903 60.2029 li
38.2296 61.2987 39.2037 62.2205 40.3342 62.9162 cv
48.8524 68.9497 li
57.2426 66.9399 64.7346 60.665 65.0068 54.4185 cv
64.6269 54.1317 64.2421 53.8505 64.1367 53.8109 cv
cp
.921569 .721569 .52549 rgb
f
70.7027 58.907 mo
70.6157 58.8114 70.5201 58.7244 70.4158 58.6374 cv
69.2069 57.5853 li
65.8412 55.0546 li
65.7466 54.9857 65.379 54.6994 65.0068 54.4185 cv
64.6401 55.9602 63.581 57.0888 61.4766 57.594 cv
61.2637 59.4052 59.7873 60.5979 57.3397 61.3152 cv
56.9301 63.0988 55.5223 64.2859 53.2751 64.9714 cv
52.5927 67.1581 50.5239 68.7524 48.8524 68.9497 cv
52.7965 71.7433 li
56.5011 74.361 58.5275 70.6997 57.397 69.5083 cv
57.8143 69.8127 li
61.3887 72.5174 63.8584 68.6299 61.9365 66.2819 cv
64.7282 68.9952 68.4242 65.4122 66.3805 62.4814 cv
66.5023 62.5858 66.624 62.6813 66.7371 62.7597 cv
66.8762 62.8642 li
69.9113 64.899 72.6855 61.0466 70.7027 58.907 cv
cp
.878431 .690196 .501961 rgb
f
42.1826 59.4422 mo
43.4168 58.7866 43.8859 57.2546 43.2303 56.0203 cv
43.0119 55.6092 li
42.6971 55.0165 42.1597 54.5731 41.5179 54.3766 cv
40.8762 54.1802 40.1827 54.2467 39.5899 54.5615 cv
35.069 56.9632 li
33.9166 57.5754 33.4786 59.0059 34.0908 60.1583 cv
34.5401 61.0041 li
35.1116 62.08 36.4471 62.4889 37.523 61.9174 cv
42.1826 59.4422 li
cp
1 .811765 .623529 rgb
f
46.7662 63.2371 mo
47.3696 62.9283 47.8239 62.3903 48.0273 61.7436 cv
48.2307 61.097 48.1661 60.3958 47.8481 59.7972 cv
47.63 59.3867 li
46.9814 58.1658 45.4731 57.6914 44.2424 58.3212 cv
38.4939 61.2631 li
37.9305 61.5515 37.5063 62.0538 37.3164 62.6576 cv
37.1265 63.2614 37.1868 63.9161 37.4837 64.4751 cv
37.9317 65.3183 li
38.4971 66.3826 39.8119 66.7961 40.8847 66.2471 cv
46.7662 63.2371 li
cp
f
50.4004 67.5281 mo
51.655 66.8617 52.1318 65.3044 51.4654 64.0498 cv
51.2434 63.6319 li
50.9234 63.0294 50.3771 62.5787 49.7248 62.379 cv
49.0725 62.1793 48.3675 62.2469 47.765 62.5669 cv
43.1695 65.0081 li
41.9981 65.6304 41.5529 67.0845 42.1752 68.256 cv
42.6319 69.1158 li
42.9109 69.641 43.3871 70.0338 43.9557 70.2079 cv
44.5243 70.382 45.1389 70.3231 45.664 70.0441 cv
50.4004 67.5281 li
cp
f
54.1518 70.6035 mo
55.1153 70.0916 55.4497 68.836 54.899 67.7991 cv
54.7155 67.4538 li
54.1648 66.4168 52.9372 65.9911 51.9736 66.503 cv
48.4445 68.3778 li
47.5449 68.8556 47.2325 70.0281 47.7469 70.9961 cv
48.1245 71.7067 li
48.6045 72.6108 49.6745 72.9818 50.5147 72.5357 cv
54.1518 70.6035 li
cp
f
74.4093 35.8004 mo
65.7254 41.7464 li
65.7254 41.7464 59.0492 40.6008 58.3015 40.8269 cv
53.6835 42.2097 li
50.6745 43.1054 li
50.0396 43.2966 49.5439 43.7664 49.3177 44.3838 cv
46.5522 52.0542 li
46.1957 53.0196 46.6914 54.0892 47.6566 54.4545 cv
48.2219 54.6718 li
49.2134 55.0457 50.3092 55.011 51.2658 54.5762 cv
52.2311 54.1326 52.9703 53.3326 53.3355 52.3413 cv
54.3793 49.4887 li
54.5531 49.0104 54.9272 48.6451 55.3967 48.48 cv
56.3707 48.1495 li
56.4924 48.1147 li
56.4924 48.1147 70.6157 58.8114 70.7027 58.9071 cv
73.7548 55.6344 li
82.4926 50.2464 li
74.4093 35.8004 li
cp
f
30.9926 57.594 mo
25.0483 53.83 li
34.8783 36.7801 li
41.1071 41.3791 li
30.9926 57.594 li
cp
.929412 .929412 .929412 rgb
f
11.3259 19.1368 mo
11.3259 47.7464 li
17.7439 51.7953 24.0244 55.6344 24.0244 55.6344 cv
34.8806 36.7773 li
34.8806 36.7773 22.1175 27.1747 11.3259 19.1368 cv
cp
.341176 .341176 .337255 rgb
f
75.8399 56.6142 mo
81.7842 52.8502 li
71.9542 35.8004 li
65.7254 40.3993 li
75.8399 56.6142 li
cp
.929412 .929412 .929412 rgb
f
95.5066 18.157 mo
95.5066 46.7666 li
89.0887 50.8155 82.8082 54.6546 82.8082 54.6546 cv
71.9519 35.7976 li
71.9519 35.7976 84.7151 26.1949 95.5066 18.157 cv
cp
0 .356863 .419608 rgb
f
23.1033 49.7048 mo
23.1033 50.4641 22.4877 51.0798 21.7283 51.0798 cv
20.9689 51.0798 20.3533 50.4641 20.3533 49.7048 cv
20.3533 48.9454 20.9689 48.3298 21.7283 48.3298 cv
22.4877 48.3298 23.1033 48.9454 23.1033 49.7048 cv
cp
1 1 1 rgb
f
19.1033 46.9548 mo
19.1033 47.7141 18.4877 48.3298 17.7283 48.3298 cv
16.9689 48.3298 16.3533 47.7141 16.3533 46.9548 cv
16.3533 46.1954 16.9689 45.5798 17.7283 45.5798 cv
18.4877 45.5798 19.1033 46.1954 19.1033 46.9548 cv
cp
f
82.8676 49.7048 mo
82.8676 50.4641 83.4832 51.0798 84.2426 51.0798 cv
85.002 51.0798 85.6176 50.4641 85.6176 49.7048 cv
85.6176 48.9454 85.002 48.3298 84.2426 48.3298 cv
83.4832 48.3298 82.8676 48.9454 82.8676 49.7048 cv
cp
f
86.8676 46.9548 mo
86.8676 47.7141 87.4832 48.3298 88.2426 48.3298 cv
89.002 48.3298 89.6176 47.7141 89.6176 46.9548 cv
89.6176 46.1954 89.002 45.5798 88.2426 45.5798 cv
87.4832 45.5798 86.8676 46.1954 86.8676 46.9548 cv
cp
f
52.9483 36.5479 mo
52.5342 36.5479 52.1983 36.2119 52.1983 35.7979 cv
52.1983 30.3911 li
52.1983 29.9771 52.5342 29.6411 52.9483 29.6411 cv
53.3623 29.6411 53.6983 29.9771 53.6983 30.3911 cv
53.6983 35.7979 li
53.6983 36.2119 53.3623 36.5479 52.9483 36.5479 cv
cp
.615686 .615686 .611765 rgb
f
52.9483 82.7818 mo
52.5342 82.7818 52.1983 82.4458 52.1983 82.0318 cv
52.1983 76.625 li
52.1983 76.211 52.5342 75.875 52.9483 75.875 cv
53.3623 75.875 53.6983 76.211 53.6983 76.625 cv
53.6983 82.0318 li
53.6983 82.4458 53.3623 82.7818 52.9483 82.7818 cv
cp
f
71.2061 75.2193 mo
71.0142 75.2193 70.8223 75.146 70.6758 74.9995 cv
66.8526 71.1763 li
66.5596 70.8833 66.5596 70.4087 66.8526 70.1157 cv
67.1455 69.8228 67.6202 69.8228 67.9131 70.1157 cv
71.7364 73.939 li
72.0293 74.232 72.0293 74.7066 71.7364 74.9995 cv
71.5899 75.146 71.398 75.2193 71.2061 75.2193 cv
cp
f
34.6905 75.2193 mo
34.4986 75.2193 34.3067 75.146 34.1602 74.9995 cv
33.8672 74.7066 33.8672 74.232 34.1602 73.939 cv
37.9834 70.1157 li
38.2764 69.8228 38.751 69.8228 39.044 70.1157 cv
39.337 70.4087 39.337 70.8833 39.044 71.1763 cv
35.2207 74.9995 li
35.0743 75.146 34.8824 75.2193 34.6905 75.2193 cv
cp
f
62.6089 80.9068 mo
62.312 80.9068 62.0308 80.7295 61.9131 80.4375 cv
59.8872 75.4156 li
59.732 75.0313 59.918 74.5943 60.3018 74.4395 cv
60.687 74.2827 61.1231 74.4697 61.2779 74.854 cv
63.3037 79.876 li
63.459 80.2603 63.273 80.6973 62.8892 80.8521 cv
62.7969 80.8892 62.7022 80.9068 62.6089 80.9068 cv
cp
f
45.3145 38.0381 mo
45.0176 38.0381 44.7364 37.8609 44.6187 37.5689 cv
42.5928 32.5469 li
42.4375 32.1626 42.6236 31.7256 43.0074 31.5708 cv
43.3921 31.4146 43.8287 31.6016 43.9834 31.9854 cv
46.0093 37.0073 li
46.1646 37.3916 45.9786 37.8286 45.5948 37.9834 cv
45.5025 38.0205 45.4078 38.0381 45.3145 38.0381 cv
cp
f
29.0035 66.6216 mo
28.7066 66.6216 28.4253 66.4444 28.3077 66.1524 cv
28.1524 65.7681 28.3384 65.3311 28.7222 65.1763 cv
33.7442 63.1504 li
34.1289 62.9932 34.5655 63.1807 34.7203 63.565 cv
34.8755 63.9492 34.6895 64.3863 34.3057 64.541 cv
29.2837 66.5669 li
29.1914 66.604 29.0967 66.6216 29.0035 66.6216 cv
cp
f
76.7105 67.0625 mo
76.6128 67.0625 76.5132 67.0435 76.4175 67.003 cv
71.4444 64.8887 li
71.063 64.7266 70.8858 64.2862 71.0474 63.9048 cv
71.21 63.5239 71.6514 63.3477 72.0313 63.5078 cv
77.0044 65.6221 li
77.3858 65.7842 77.563 66.2246 77.4014 66.606 cv
77.2798 66.8916 77.0025 67.0625 76.7105 67.0625 cv
cp
f
42.8467 80.7241 mo
42.7491 80.7241 42.6495 80.7051 42.5537 80.6646 cv
42.1724 80.5025 41.9952 80.062 42.1568 79.6807 cv
44.2705 74.7075 li
44.4331 74.3272 44.8726 74.1504 45.2544 74.3106 cv
45.6358 74.4727 45.813 74.9131 45.6514 75.2945 cv
43.5376 80.2676 li
43.4161 80.5528 43.1387 80.7241 42.8467 80.7241 cv
cp
f
60.9346 38.1719 mo
60.837 38.1719 60.7373 38.1529 60.6416 38.1123 cv
60.2603 37.9502 60.083 37.5098 60.2447 37.1284 cv
62.3589 32.1553 li
62.522 31.7749 62.962 31.5967 63.3428 31.7583 cv
63.7242 31.9204 63.9014 32.3609 63.7398 32.7422 cv
61.6255 37.7154 li
61.5039 38.001 61.2266 38.1719 60.9346 38.1719 cv
cp
f
21.5189 179.122 mo
11.6279 176.522 li
12.8838 168.318 15.4242 159.228 18.6951 149.634 cv
28.5861 152.234 li
21.5189 179.122 li
.929412 .929412 .929412 rgb
f
57.5624 179.122 mo
67.4534 176.522 li
66.1975 168.318 63.6571 159.228 60.3862 149.634 cv
50.4952 152.234 li
57.5624 179.122 li
f
67.4566 176.213 mo
67.4208 176.294 li
67.3043 176.563 li
66.9549 177.36 66.5876 178.139 66.2024 178.919 cv
66.2024 178.928 li
65.7634 179.824 65.3065 180.719 64.8317 181.598 cv
63.6222 183.846 62.2963 186.05 60.8629 188.218 cv
49.3149 188.218 li
49.3238 188.191 li
49.4403 187.842 49.5567 187.492 49.6822 187.143 cv
51.0618 183.237 52.8177 179.725 54.9321 176.643 cv
54.9321 176.634 li
55.3979 175.953 55.8907 175.282 56.3834 174.645 cv
56.6523 174.305 56.921 173.974 57.1897 173.651 cv
57.3062 173.517 57.4227 173.391 57.5302 173.257 cv
58.1841 172.495 58.865 171.77 59.5728 171.08 cv
67.4029 176.177 li
67.4566 176.213 li
f
58.1662 166.529 mo
57.6824 168.679 57.5302 170.945 57.5302 173.257 cv
57.5212 175.183 57.6198 177.136 57.7093 179.089 cv
57.781 180.702 57.8527 182.323 57.8617 183.918 cv
57.8617 183.927 li
57.8617 185.378 57.8168 186.812 57.6646 188.218 cv
21.4168 188.218 li
21.2286 186.444 21.2018 184.617 21.2375 182.762 cv
21.2645 181.544 21.3182 180.316 21.372 179.089 cv
21.4615 177.136 21.5601 175.183 21.5511 173.257 cv
21.5422 170.945 21.3989 168.688 20.9151 166.529 cv
20.0909 162.855 19.7683 158.152 18.6933 149.659 cv
18.7291 149.641 li
23.2892 147.742 29.2738 145.144 30.2592 144.203 cv
31.2178 144.579 33.0455 144.821 34.8731 144.991 cv
36.7097 145.162 38.5462 145.269 39.5406 145.377 cv
41.5295 145.162 46.8959 144.956 48.8221 144.203 cv
49.8076 145.144 55.7921 147.742 60.3523 149.641 cv
60.3881 149.659 li
59.313 158.152 58.9905 162.855 58.1662 166.529 cv
f
38.2348 154.928 mo
37.3155 150.559 li
39.5406 150.499 li
41.7658 150.559 li
40.8465 154.928 li
38.2348 154.928 li
cp
0 .356863 .419608 rgb
f
38.2348 154.928 mo
36.0715 177.656 li
39.5406 180.726 li
43.0098 177.656 li
40.8465 154.928 li
38.2348 154.928 li
cp
0 .435294 .509804 rgb
f
42.3717 188.218 mo
23.0742 188.218 li
23.0652 188.182 li
23.0652 188.218 li
21.4168 188.218 li
21.2742 186.874 21.2243 185.499 21.224 184.104 cv
21.2239 183.659 21.2289 183.211 21.2375 182.762 cv
21.9274 182.502 22.4471 181.866 22.7696 180.729 cv
22.7696 180.729 22.8144 176.867 22.8591 174.86 cv
22.8681 174.529 22.8771 174.251 22.886 174.045 cv
22.8949 173.884 li
23.0742 168.661 23.5132 157.005 23.764 157.005 cv
23.8357 158.609 23.9073 160.204 23.988 161.798 cv
24.0865 163.859 24.194 165.937 24.445 167.989 cv
24.7316 170.479 25.2422 172.907 26.2098 175.201 cv
26.5323 175.971 26.9264 176.706 27.3655 177.423 cv
29.2558 180.478 32.1674 182.941 35.6346 183.533 cv
32.9111 183.147 30.1786 182.762 27.4461 182.395 cv
27.0161 182.332 26.5951 182.27 26.165 182.216 cv
26.7384 182.744 27.3566 183.21 28.0015 183.613 cv
32.1495 186.22 37.5966 186.606 42.3717 188.218 cv
.886274 .886274 .886274 rgb
f
60.8629 188.218 mo
57.6646 188.218 li
57.8168 186.812 57.8617 185.378 57.8617 183.927 cv
57.8617 183.918 li
57.8617 183.918 li
57.8617 183.927 li
58.1559 184.211 58.5029 184.341 58.895 184.341 cv
60.6399 184.341 63.2836 181.781 66.2024 178.928 cv
65.7634 179.824 65.3065 180.719 64.8317 181.598 cv
63.6222 183.846 62.2963 186.05 60.8629 188.218 cv
f
57.6646 188.218 mo
56.688 188.218 li
56.688 188.191 li
47.6126 188.191 li
48.3741 187.94 49.064 187.582 49.6822 187.143 cv
51.8681 185.62 53.2747 183.094 54.1436 180.155 cv
54.4751 179.035 54.735 177.853 54.9321 176.643 cv
54.9321 176.634 li
55.0038 176.231 55.0575 175.828 55.1113 175.416 cv
55.2904 173.965 55.3979 172.495 55.4427 171.053 cv
55.6219 165.66 55.0127 160.714 54.8873 159.057 cv
55.0307 160.293 56.6342 165.919 57.1897 173.651 cv
57.2076 173.884 li
57.2434 174.377 57.2704 176.159 57.2793 178.05 cv
57.3062 180.227 57.3241 182.538 57.342 183.147 cv
57.4854 183.479 57.6646 183.739 57.8617 183.918 cv
57.8617 183.927 li
57.8617 185.378 57.8168 186.812 57.6646 188.218 cv
57.6646 188.218 li
f
33.2015 139.168 mo
33.241 141.096 li
33.241 141.105 li
33.2707 143.161 li
33.2707 143.171 li
33.2905 144.09 li
33.4091 150.693 li
37.3232 150.614 li
39.4384 150.574 li
39.4482 150.574 li
39.6163 150.564 li
41.5536 150.525 li
45.5764 150.446 li
45.7543 144.081 li
45.7741 143.27 li
45.8334 141.224 li
45.8334 141.214 li
45.8828 139.524 li
33.2015 139.168 li
cp
.94902 .780392 .6 rgb
f
39.4487 116.887 mo
45.1261 116.864 49.6538 120.599 49.2324 127.329 cv
49.1836 128.108 49.0955 128.857 48.9422 129.64 cv
50.2059 128.925 51.3129 130.174 50.8687 132.088 cv
50.5556 133.437 49.8985 135.249 49.1507 135.522 cv
48.2543 135.848 47.9816 135.29 47.9299 135.273 cv
47.5297 137.217 47.3679 138.954 46.6747 139.986 cv
45.8544 141.207 45.2221 142.125 44.6333 142.816 cv
43.2984 144.384 42.19 144.773 39.6411 144.789 cv
39.6264 144.789 li
39.6119 144.789 li
37.0629 144.805 35.9498 144.431 34.5949 142.88 cv
33.9974 142.197 33.3534 141.286 32.5176 140.076 cv
31.8113 139.053 31.6274 137.319 31.2025 135.379 cv
31.151 135.397 30.8854 135.959 29.9849 135.644 cv
29.2338 135.381 28.5537 133.577 28.2234 132.232 cv
27.7549 130.324 28.8459 129.061 30.1186 129.76 cv
29.9553 128.979 29.8577 128.232 29.799 127.453 cv
29.2919 120.729 33.7715 116.936 39.4487 116.887 cv
cp
1 .823529 .631373 rgb
f
47.627 118.838 mo
49.8084 121.38 50.4941 124.208 49.6429 129.437 cv
48.789 129.917 48.3383 130.554 48.0126 133.151 cv
47.3933 133.326 47.1248 133.367 46.5606 133.56 cv
49.952 119.705 44.5857 119.462 43.1119 119.176 cv
41.9129 118.942 37.011 118.974 35.815 119.222 cv
34.3451 119.527 28.9823 119.839 32.5498 133.649 cv
31.9833 133.463 31.7142 133.426 31.0928 133.259 cv
30.734 130.666 30.2752 130.035 29.4153 129.566 cv
28.4976 124.348 29.4249 121.72 31.2961 118.942 cv
33.8934 115.087 43.7283 114.297 47.627 118.838 cv
cp
.235294 .235294 .231373 rgb
f
36.0632 116.911 mo
35.3424 116.918 34.7032 117.188 34.0711 117.535 cv
33.1967 118.014 30.9613 121.254 31.4281 122.017 cv
33.3203 125.109 39.1824 125.991 43.3187 126.108 cv
42.8642 125.758 42.0856 125.06 41.9323 124.4 cv
44.1654 125.387 46.7346 125.593 49.0965 124.975 cv
48.3575 122.952 47.5675 120.849 45.9946 119.377 cv
44.7166 118.182 43.0191 117.511 41.2976 117.196 cv
39.576 116.88 37.8133 116.895 36.0632 116.911 cv
cp
f
33.4298 154.329 mo
31.2241 151.217 29.8991 147.962 29.6194 144.539 cv
33.2613 142.512 li
33.9311 145.663 36.1862 148.685 39.5406 150.514 cv
33.4298 154.329 li
cp
.854902 .854902 .854902 rgb
f
45.6515 154.329 mo
47.8572 151.217 49.1822 147.962 49.4619 144.539 cv
45.82 142.512 li
45.1502 145.663 42.8951 148.685 39.5406 150.514 cv
45.6515 154.329 li
cp
f
30.174 135.611 mo
29.3958 135.764 li
28.282 135.995 27.1396 130.436 28.2964 130.196 cv
29.0746 130.043 li
29.9886 129.868 31.0425 135.444 30.174 135.611 cv
cp
.341176 .341176 .337255 rgb
f
29.4052 132.737 mo
29.628 133.62 29.3115 134.461 28.6983 134.616 cv
28.0852 134.771 27.4076 134.18 27.1848 133.297 cv
26.9621 132.414 27.2785 131.572 27.8917 131.417 cv
28.5048 131.263 29.1825 131.854 29.4052 132.737 cv
cp
f
48.7955 135.611 mo
49.5737 135.764 li
50.6875 135.995 51.8299 130.436 50.6731 130.196 cv
49.8949 130.043 li
48.9809 129.868 47.927 135.444 48.7955 135.611 cv
cp
f
49.5643 132.737 mo
49.3415 133.62 49.658 134.461 50.2712 134.616 cv
50.8843 134.771 51.5619 134.18 51.7847 133.297 cv
52.0074 132.414 51.691 131.572 51.0779 131.417 cv
50.4647 131.263 49.7871 131.854 49.5643 132.737 cv
cp
f
37.5005 141.484 mo
29.7786 141.484 29.0679 134.115 29.0619 134.04 cv
29.8302 133.975 li
29.8547 134.256 30.4968 140.898 37.7671 140.71 cv
37.7844 141.481 li
37.6891 141.484 37.5939 141.484 37.5005 141.484 cv
cp
f
42.3717 141.099 mo
42.3717 141.72 41.8681 142.224 41.2468 142.224 cv
38.5472 142.224 li
37.926 142.224 37.4223 141.72 37.4223 141.099 cv
37.4223 140.478 37.926 139.974 38.5472 139.974 cv
41.2468 139.974 li
41.8681 139.974 42.3717 140.478 42.3717 141.099 cv
cp
f
38.8695 130.421 mo
38.8695 131.931 li
38.8695 133.455 37.6363 134.689 36.1115 134.689 cv
35.364 134.689 li
33.8317 134.689 32.5835 133.448 32.5835 131.916 cv
32.5835 130.57 li
32.5835 130.01 33.0394 129.554 33.6 129.554 cv
38.01 129.554 li
38.4884 129.554 38.8695 129.942 38.8695 130.421 cv
cp
38.1221 131.931 mo
38.1221 130.421 li
38.01 130.301 li
33.6 130.301 li
33.4505 130.301 33.3309 130.421 33.3309 130.57 cv
33.3309 131.916 li
33.3309 133.037 34.2428 133.941 35.364 133.941 cv
36.1115 133.941 li
37.2251 133.941 38.1221 133.044 38.1221 131.931 cv
cp
f
40.2117 130.421 mo
40.2117 131.931 li
40.2117 133.455 41.445 134.689 42.9698 134.689 cv
43.7172 134.689 li
45.2495 134.689 46.4977 133.448 46.4977 131.916 cv
46.4977 130.57 li
46.4977 130.01 46.0418 129.554 45.4813 129.554 cv
41.0713 129.554 li
40.5929 129.554 40.2117 129.942 40.2117 130.421 cv
cp
40.9591 131.931 mo
40.9591 130.421 li
41.0713 130.301 li
45.4813 130.301 li
45.6307 130.301 45.7503 130.421 45.7503 130.57 cv
45.7503 131.916 li
45.7503 133.037 44.8384 133.941 43.7172 133.941 cv
42.9698 133.941 li
41.8561 133.941 40.9591 133.044 40.9591 131.931 cv
cp
f
32.9551 131.154 mo
30.689 131.154 li
30.464 130.406 li
32.9551 130.406 li
32.9551 131.154 li
cp
f
46.1262 131.154 mo
48.3923 131.154 li
48.6173 130.406 li
46.1262 130.406 li
46.1262 131.154 li
cp
f
38.6913 131.154 mo
38.6913 130.406 li
40.39 130.406 li
40.39 131.154 li
38.6913 131.154 li
cp
f
34.3321 130.675 mo
33.7048 131.33 li
33.7048 131.916 li
33.7048 132.179 33.7725 132.424 33.8828 132.645 cv
35.77 130.675 li
34.3321 130.675 li
cp
.964706 .964706 .964706 rgb
f
41.9168 130.675 mo
41.2895 131.33 li
41.2895 131.916 li
41.2895 132.179 41.3572 132.424 41.4674 132.645 cv
43.3547 130.675 li
41.9168 130.675 li
cp
f
36.238 188.218 mo
24.6899 188.218 li
18.6933 186.35 11.6963 176.383 11.6605 176.294 cv
11.6247 176.213 li
11.6784 176.177 li
19.5085 171.08 li
20.2163 171.77 35.7094 186.615 36.238 188.218 cv
cp
.929412 .929412 .929412 rgb
f
42.4052 181.929 mo
41.7685 182.166 41.1375 182.331 40.5246 182.42 cv
39.5452 182.562 38.4091 182.682 37.3678 182.688 cv
37.1619 182.689 38.5204 183.965 38.9881 184.028 cv
39.7328 184.128 40.05 184.179 40.7921 184.061 cv
41.5342 183.943 42.7283 183.909 43.173 183.303 cv
43.48 182.885 43.4962 182.186 43.1998 181.979 cv
43.0171 181.851 42.6139 181.851 42.4052 181.929 cv
cp
.94902 .780392 .6 rgb
f
37.3678 182.688 mo
42.3972 184.079 li
47.3195 187.021 li
38.3042 186.796 li
36.8293 187.518 35.1292 187.206 33.3606 187.268 cv
32.1591 187.31 31.3486 186.038 31.9255 184.983 cv
32.8882 183.224 35.1108 183.16 37.3678 182.688 cv
cp
1 .823529 .631373 rgb
f
44.9786 184.466 mo
49.6822 162.994 li
49.91 161.954 50.9381 161.11 51.9785 161.11 cv
80.5873 161.11 li
81.6277 161.11 82.2864 161.954 82.0585 162.994 cv
77.3549 184.466 li
77.127 185.506 76.0989 186.35 75.0586 186.35 cv
46.4498 186.35 li
45.4094 186.35 44.7507 185.506 44.9786 184.466 cv
cp
.235294 .235294 .231373 rgb
f
47.4606 186.35 mo
76.0694 186.35 li
77.1098 186.35 78.1379 185.506 78.3657 184.466 cv
83.0693 162.994 li
83.2972 161.954 82.6385 161.11 81.5981 161.11 cv
52.9893 161.11 li
51.9489 161.11 50.9208 161.954 50.6929 162.994 cv
45.9894 184.466 li
45.7615 185.506 46.4202 186.35 47.4606 186.35 cv
cp
.341176 .341176 .337255 rgb
f
63.2964 173.73 mo
63.063 174.796 63.7377 175.66 64.8035 175.66 cv
65.8692 175.66 66.9225 174.796 67.1559 173.73 cv
67.3893 172.664 66.7147 171.8 65.6489 171.8 cv
64.5832 171.8 63.53 172.664 63.2964 173.73 cv
cp
1 1 1 rgb
f
27.0454 188.218 mo
34.8101 188.218 li
74.2775 188.218 li
74.2775 186.35 li
27.0454 186.35 li
27.0454 188.218 li
cp
.341176 .341176 .337255 rgb
f
45.056 186.35 mo
74.2775 186.35 li
74.2775 188.218 li
45.056 188.218 li
45.056 186.35 li
cp
.235294 .235294 .231373 rgb
f
44.4028 266.306 mo
44.4028 266.728 43.5349 267.07 42.4641 267.07 cv
41.3934 267.07 40.5255 266.728 40.5255 266.306 cv
40.5255 265.884 41.3934 265.542 42.4641 265.542 cv
43.5349 265.542 44.4028 265.884 44.4028 266.306 cv
cp
f
47.1434 265.178 mo
37.7848 265.178 li
37.7848 257.963 li
47.1434 257.963 li
47.1434 265.178 li
cp
.776471 .776471 .776471 rgb
f
52.3058 245.175 mo
52.3058 239.111 47.2673 234.275 41.3197 234.975 cv
37.0171 235.481 33.4501 238.996 32.7565 243.455 cv
32.2083 246.979 33.3816 250.24 35.5373 252.469 cv
36.9224 253.9 37.7849 255.79 37.7849 257.824 cv
37.7849 257.963 li
47.1434 257.963 li
47.1434 257.872 li
47.1434 255.842 47.9662 253.927 49.3556 252.505 cv
51.1763 250.642 52.3058 248.046 52.3058 245.175 cv
cp
1 .733333 0 rgb
f
44.4028 266.335 mo
40.5255 266.335 li
37.7848 265.178 li
47.1434 265.178 li
44.4028 266.335 li
cp
.615686 .615686 .611765 rgb
f
39.163 244.215 mo
39.6841 244.215 39.9314 244.655 40.15 245.043 cv
40.3744 245.441 40.5314 245.683 40.8174 245.683 cv
41.102 245.683 41.2583 245.441 41.4827 245.043 cv
41.7006 244.655 41.9479 244.215 42.4684 244.215 cv
42.9888 244.215 43.2361 244.655 43.454 245.043 cv
43.6784 245.441 43.8347 245.683 44.1193 245.683 cv
44.4039 245.683 44.5601 245.441 44.7845 245.043 cv
45.0025 244.655 45.2497 244.215 45.7701 244.215 cv
46.2899 244.215 46.5365 244.655 46.7544 245.043 cv
46.978 245.441 47.1343 245.683 47.4189 245.683 cv
47.52 245.683 47.6024 245.765 47.6024 245.867 cv
47.6024 245.968 47.52 246.05 47.4189 246.05 cv
46.8992 246.05 46.6526 245.611 46.4346 245.223 cv
46.211 244.824 46.0547 244.582 45.7701 244.582 cv
45.4849 244.582 45.3286 244.824 45.1042 245.223 cv
44.8863 245.611 44.6389 246.05 44.1193 246.05 cv
43.5996 246.05 43.3522 245.611 43.1343 245.223 cv
42.9099 244.824 42.7536 244.582 42.4684 244.582 cv
42.1831 244.582 42.0268 244.824 41.8024 245.223 cv
41.5845 245.611 41.3372 246.05 40.8174 246.05 cv
40.2963 246.05 40.049 245.611 39.8303 245.223 cv
39.6059 244.824 39.4489 244.582 39.163 244.582 cv
38.8776 244.582 38.7206 244.824 38.4963 245.223 cv
38.2776 245.611 38.0303 246.05 37.5092 246.05 cv
37.4081 246.05 37.3257 245.968 37.3257 245.867 cv
37.3257 245.765 37.4081 245.683 37.5092 245.683 cv
37.7952 245.683 37.9522 245.441 38.1766 245.042 cv
38.3952 244.655 38.6425 244.215 39.163 244.215 cv
cp
1 1 1 rgb
f
42.8082 251.69 mo
42.1201 251.69 li
41.497 251.69 40.9919 252.096 40.9919 252.598 cv
40.9919 257.963 li
43.9363 257.963 li
43.9363 252.598 li
43.9363 252.096 43.4313 251.69 42.8082 251.69 cv
cp
f
41.5507 252.594 mo
41.348 252.484 li
37.1228 246 li
37.0489 245.887 37.0811 245.737 37.1929 245.664 cv
37.3037 245.591 37.4543 245.623 37.5282 245.734 cv
41.7533 252.219 li
41.8272 252.331 41.795 252.481 41.6832 252.554 cv
41.5507 252.594 li
cp
f
43.3773 252.594 mo
43.2448 252.554 li
43.133 252.481 43.1008 252.331 43.1747 252.219 cv
47.3998 245.734 li
47.4737 245.623 47.6243 245.592 47.735 245.664 cv
47.8468 245.737 47.879 245.887 47.8051 246 cv
43.58 252.484 li
43.3773 252.594 li
cp
f
43.202 280.179 mo
40.5904 279.851 li
36.7982 278.797 li
30.7385 273.137 li
29.8896 272.344 28.679 272.181 27.6817 272.628 cv
25.7145 270.79 li
24.5845 269.735 22.8127 269.795 21.7571 270.925 cv
21.7187 270.966 li
21.4615 271.242 21.2731 271.556 21.1478 271.887 cv
20.1731 271.878 19.2111 272.335 18.6148 273.197 cv
18.5798 273.248 li
17.6246 274.628 17.9694 276.522 19.3499 277.477 cv
29.148 284.256 li
29.2411 284.308 li
29.3328 284.367 29.4288 284.417 29.5271 284.466 cv
29.7897 284.586 li
29.8765 284.62 29.9664 284.645 30.0572 284.671 cv
30.1659 284.701 30.274 284.729 30.3843 284.747 cv
30.4843 284.77 li
42.2994 286.309 li
43.9642 286.525 45.4895 285.352 45.7061 283.687 cv
45.7141 283.626 li
45.9308 281.961 44.8669 280.396 43.202 280.179 cv
cp
.94902 .780392 .6 rgb
f
68.1344 271.354 mo
62.8993 270.204 li
61.0124 269.927 59.091 269.994 57.228 270.403 cv
52.3438 271.474 li
51.7409 271.606 51.1204 271.638 50.5071 271.569 cv
39.2417 270.294 li
37.4996 270.089 35.9212 271.335 35.7161 273.077 cv
35.7087 273.141 li
35.5036 274.883 36.7496 276.461 38.4918 276.666 cv
46.0614 277.557 li
38.7085 280.178 li
30.3007 280.656 li
19.8635 275.47 li
18.2927 274.69 16.3866 275.33 15.606 276.901 cv
15.5774 276.959 li
14.7969 278.53 15.4376 280.436 17.0085 281.216 cv
29.616 287.087 li
29.616 287.087 35.7294 288.308 38.6751 288.549 cv
39.2292 288.594 40.0019 288.527 40.7928 288.51 cv
44.0616 288.438 53.1933 287.996 60.5161 285.46 cv
68.4458 283.721 li
68.1344 271.354 li
cp
1 .823529 .631373 rgb
f
76.8732 270.176 mo
76.9701 290.606 li
68.0609 290.606 li
68.1157 270.176 li
76.8732 270.176 li
cp
.929412 .929412 .929412 rgb
f
92.3795 269.378 mo
92.3795 292.269 li
73.2869 292.269 li
73.2869 269.378 li
92.3795 269.378 li
cp
.341176 .341176 .337255 rgb
f
82.1916 274.544 mo
81.8788 273.609 82.3837 272.597 83.3195 272.284 cv
84.2552 271.971 85.2672 272.476 85.5798 273.411 cv
85.8926 274.347 85.3878 275.359 84.4522 275.672 cv
83.5164 275.985 82.5042 275.48 82.1916 274.544 cv
cp
.929412 .929412 .929412 rgb
f
76.4488 274.544 mo
76.1361 273.609 76.6409 272.596 77.5766 272.284 cv
78.5122 271.971 79.5242 272.476 79.8372 273.412 cv
80.1498 274.347 79.6449 275.359 78.7092 275.672 cv
77.7735 275.985 76.7616 275.48 76.4488 274.544 cv
cp
f
52.8638 228.411 mo
53.0982 228.005 52.9594 227.486 52.553 227.251 cv
52.1467 227.017 51.6279 227.156 51.3935 227.562 cv
49.0873 231.557 li
48.854 231.961 48.996 232.475 49.4019 232.705 cv
49.4167 232.714 li
49.818 232.942 50.3268 232.805 50.5576 232.405 cv
52.8638 228.411 li
cp
1 .733333 0 rgb
f
59.628 235.797 mo
60.034 235.562 60.1733 235.043 59.9387 234.637 cv
59.7041 234.231 59.1851 234.092 58.7792 234.326 cv
54.7848 236.633 li
54.3849 236.863 54.2483 237.372 54.4765 237.774 cv
54.4849 237.788 li
54.715 238.194 55.2295 238.336 55.6335 238.103 cv
59.628 235.797 li
cp
f
61.7932 243.877 mo
57.1573 243.877 li
56.6947 243.877 56.321 244.253 56.3211 244.715 cv
56.3211 244.737 li
56.321 245.199 56.6947 245.575 57.1573 245.575 cv
61.7932 245.575 li
62.2619 245.575 62.642 245.195 62.642 244.726 cv
62.642 244.257 62.2619 243.877 61.7932 243.877 cv
cp
f
58.7792 255.126 mo
59.1851 255.36 59.7041 255.221 59.9387 254.815 cv
60.1733 254.409 60.034 253.89 59.628 253.655 cv
55.6335 251.349 li
55.2295 251.116 54.715 251.258 54.4849 251.664 cv
54.4765 251.678 li
54.2483 252.08 54.3849 252.589 54.7848 252.819 cv
58.7792 255.126 li
cp
f
25.3003 253.655 mo
24.8943 253.89 24.755 254.409 24.9895 254.815 cv
25.2242 255.221 25.7431 255.36 26.1491 255.126 cv
30.1435 252.819 li
30.5434 252.589 30.6799 252.08 30.4518 251.678 cv
30.4434 251.664 li
30.2133 251.258 29.6988 251.116 29.2948 251.349 cv
25.3003 253.655 li
cp
f
28.6072 244.715 mo
28.6073 244.253 28.2336 243.877 27.7709 243.877 cv
23.1351 243.877 li
22.6663 243.877 22.2863 244.257 22.2863 244.726 cv
22.2863 245.195 22.6663 245.575 23.1351 245.575 cv
27.7709 245.575 li
28.2336 245.575 28.6073 245.199 28.6072 244.737 cv
28.6072 244.715 li
cp
f
26.1491 234.326 mo
25.7431 234.092 25.2242 234.231 24.9895 234.637 cv
24.755 235.043 24.8943 235.562 25.3003 235.797 cv
29.2948 238.103 li
29.6988 238.336 30.2133 238.194 30.4434 237.788 cv
30.4518 237.774 li
30.6799 237.372 30.5434 236.863 30.1435 236.633 cv
26.1491 234.326 li
cp
f
33.5348 227.562 mo
33.3004 227.156 32.7816 227.017 32.3752 227.251 cv
31.9688 227.486 31.8301 228.005 32.0644 228.411 cv
34.3706 232.405 li
34.6015 232.805 35.1102 232.942 35.5116 232.714 cv
35.5264 232.705 li
35.9323 232.475 36.0742 231.961 35.841 231.557 cv
33.5348 227.562 li
cp
f
42.4747 230.869 mo
42.9374 230.869 43.313 230.495 43.313 230.033 cv
43.313 225.397 li
43.313 224.928 42.9333 224.548 42.4641 224.548 cv
41.995 224.548 41.6152 224.928 41.6152 225.397 cv
41.6152 230.033 li
41.6152 230.495 41.9908 230.869 42.4535 230.869 cv
42.4747 230.869 li
cp
f
368.158 121.166 mo
367.713 119.216 li
399.102 112.058 li
406.124 116.212 li
416.294 100.77 li
417.964 101.869 li
406.747 118.904 li
398.77 114.185 li
368.158 121.166 li
cp
.913725 .305882 .105882 rgb
f
414.316 101.365 mo
421.027 95.4003 li
418.199 103.922 li
414.316 101.365 li
cp
f
421.793 123.076 mo
421.712 126.038 li
419.831 126.017 417.952 125.944 416.07 125.941 cv
416.149 123.071 li
415.665 122.84 li
414.853 122.376 414.255 121.624 414.055 120.738 cv
414.003 120.505 413.618 117.518 413.598 117.379 cv
413.598 117.376 li
415.043 117.454 li
415.132 114.196 li
418.206 114.156 420.321 114.313 423.131 114.504 cv
423.336 118.213 li
423.446 121.004 422.949 122.136 421.793 123.076 cv
cp
.94902 .780392 .6 rgb
f
416.746 117.499 mo
416.74 118.129 416.179 118.71 415.549 118.704 cv
415.339 118.702 li
415.036 118.699 414.747 118.576 414.535 118.36 cv
414.323 118.144 414.205 117.853 414.208 117.55 cv
414.918 107.01 li
414.924 106.422 415.406 105.949 415.994 105.955 cv
416.144 105.951 li
416.693 105.956 417.134 106.406 417.129 106.955 cv
416.746 117.499 li
cp
f
418.982 115.9 mo
418.983 116.206 418.872 116.5 418.675 116.717 cv
418.477 116.933 418.21 117.054 417.933 117.053 cv
417.743 117.052 li
417.177 117.048 416.723 116.545 416.722 115.922 cv
416.719 113.01 li
416.719 112.724 416.823 112.45 417.007 112.247 cv
417.191 112.045 417.441 111.932 417.699 111.933 cv
418.09 111.936 li
418.583 111.939 418.979 112.377 418.979 112.921 cv
418.982 115.9 li
cp
1 .823529 .631373 rgb
f
421.184 116.174 mo
421.176 116.805 420.705 117.313 420.131 117.309 cv
419.94 117.308 li
419.665 117.307 419.403 117.185 419.211 116.97 cv
419.019 116.755 418.913 116.464 418.917 116.161 cv
418.946 113.852 li
418.954 113.264 419.394 112.789 419.929 112.792 cv
420.322 112.795 li
420.562 112.796 420.791 112.902 420.958 113.09 cv
421.126 113.277 421.218 113.531 421.214 113.795 cv
421.184 116.174 li
cp
f
423.113 116.163 mo
423.107 116.647 422.701 117.037 422.204 117.033 cv
422.039 117.032 li
421.543 117.028 421.145 116.632 421.15 116.148 cv
421.17 114.375 li
421.175 113.923 421.555 113.56 422.018 113.563 cv
422.358 113.566 li
422.791 113.569 423.138 113.914 423.133 114.336 cv
423.113 116.163 li
cp
f
417.277 116.797 mo
416.48 117.669 li
416.349 117.81 416.288 118.006 416.314 118.2 cv
416.372 118.595 li
416.372 118.595 419.626 119.302 419.145 122.852 cv
421.793 123.076 li
422.13 126.04 li
420.082 126.029 418.037 125.941 415.988 125.94 cv
416.099 124.264 li
416.149 123.071 li
415.665 122.84 li
414.853 122.376 414.255 121.624 414.055 120.738 cv
414.003 120.505 413.618 117.518 413.598 117.379 cv
413.598 117.376 li
413.6 117.179 413.674 116.984 413.813 116.836 cv
415.098 115.442 li
415.963 114.506 li
416.233 114.209 416.693 114.187 416.99 114.454 cv
417.168 114.615 li
417.475 114.889 417.658 115.274 417.678 115.682 cv
417.697 116.093 417.555 116.493 417.277 116.797 cv
cp
f
420.936 146.644 mo
420.436 148.014 404.915 153.884 401.276 155.244 cv
400.806 155.424 400.526 155.534 400.516 155.534 cv
400.405 155.554 400.236 155.554 400.026 155.544 cv
399.336 155.494 398.236 155.304 397.446 155.244 cv
396.866 155.194 396.296 155.114 395.726 154.994 cv
393.646 154.564 391.636 153.614 389.686 151.944 cv
389.616 151.104 389.666 150.254 389.846 149.434 cv
389.966 148.914 390.136 148.394 390.346 147.914 cv
390.366 147.874 li
390.756 146.944 391.326 146.094 392.046 145.384 cv
392.516 144.894 392.856 143.554 393.176 143.284 cv
393.936 142.654 412.136 139.284 412.136 139.264 cv
412.196 139.314 li
418.426 144.544 li
419.306 145.284 li
420.936 146.644 li
0 .356863 .419608 rgb
f
422.773 128.086 mo
415.18 127.422 li
415.449 123.156 li
423.156 123.705 li
422.773 128.086 li
.929412 .929412 .929412 rgb
f
423.356 126.034 mo
423.296 126.664 423.225 127.354 423.156 128.084 cv
422.706 132.934 422.096 139.544 421.536 143.624 cv
421.366 144.864 421.345 145.814 420.936 146.644 cv
419.246 145.554 li
418.636 145.154 li
415.006 142.074 li
412.126 139.644 li
412.146 139.544 412.166 139.434 412.196 139.314 cv
412.286 138.794 412.416 138.164 412.566 137.464 cv
413.376 133.614 414.686 128.504 414.896 125.624 cv
418.386 125.824 420.996 125.744 423.356 126.034 cv
0 .356863 .419608 rgb
f
421.74 126.961 mo
422.059 127.077 422.224 127.431 422.108 127.751 cv
421.991 128.07 421.638 128.235 421.318 128.119 cv
420.998 128.003 420.833 127.649 420.95 127.329 cv
421.066 127.009 421.42 126.845 421.74 126.961 cv
cp
1 1 1 rgb
f
421.614 129.108 mo
421.934 129.224 422.099 129.578 421.982 129.897 cv
421.866 130.217 421.512 130.382 421.193 130.266 cv
420.873 130.149 420.708 129.796 420.824 129.476 cv
420.941 129.156 421.294 128.991 421.614 129.108 cv
cp
f
368.624 192.024 mo
397.202 192.024 li
396.713 186.319 396.057 145.721 396.057 145.721 cv
392.019 145.079 li
379.878 143.126 li
379.878 143.126 368.543 186.858 368.624 192.024 cv
f
382.407 141.32 mo
383.406 131.203 li
387.724 131.713 393.511 132.294 394.537 132.219 cv
394.537 132.219 393.869 139.58 393.858 142.766 cv
394.537 151.051 384.958 150.741 382.407 141.32 cv
cp
.94902 .780392 .6 rgb
f
379.878 143.126 mo
369.625 147.997 li
369.33 151.264 369.155 154.566 368.861 158.113 cv
367.585 173.702 366.931 186.858 367.013 192.024 cv
386.45 192.024 li
386.234 171.74 385.565 152.469 380.417 143.213 cv
379.878 143.126 li
0 .356863 .419608 rgb
f
404.266 191.924 mo
396.696 192.024 li
395.786 157.184 li
395.726 154.994 li
395.486 145.634 li
396.056 145.724 li
400.285 148.304 li
400.906 148.684 li
400.915 149.264 401.026 151.124 401.186 153.774 cv
401.216 154.244 401.246 154.734 401.276 155.244 cv
401.306 155.714 401.336 156.204 401.366 156.714 cv
401.396 157.194 401.426 157.694 401.466 158.204 cv
401.736 162.504 402.086 167.714 402.416 172.764 cv
402.416 172.794 li
402.486 173.684 402.546 174.564 402.596 175.434 cv
402.646 176.174 402.706 176.924 402.766 177.654 cv
403.286 184.094 404.096 189.944 404.266 191.924 cv
f
389.699 152.572 mo
392.313 152.302 li
393.178 147.105 li
388.791 147.272 li
389.699 152.572 li
cp
.913725 .305882 .105882 rgb
f
391.323 147.149 mo
394.928 151.284 li
395.477 148.771 396.198 146.706 395.912 145.178 cv
393.834 142.921 li
394.046 144.665 393.166 146.572 391.323 147.149 cv
cp
.854902 .854902 .854902 rgb
f
391.323 147.149 mo
386.869 152.302 li
383.829 149.317 380.671 146.001 379.877 143.127 cv
382.514 140.235 li
382.511 142.824 387.88 147.289 391.323 147.149 cv
cp
f
389.699 152.572 mo
392.313 152.302 li
393.65 176.293 li
390.985 180.482 li
388.132 177.101 li
389.699 152.572 li
cp
.811765 .270588 .0941176 rgb
f
385.98 173.323 mo
383.756 165.399 378.266 150.791 378.266 150.791 cv
378.266 150.791 381.761 148.976 381.515 148.699 cv
377.677 148.835 li
378.371 143.842 li
381.894 140.915 li
384.671 150.091 386.213 163.192 385.98 173.323 cv
cp
0 .435294 .509804 rgb
f
396.231 173.078 mo
398.455 165.155 399.495 149.095 399.495 149.095 cv
399.495 149.095 396.194 147.878 396.44 147.601 cv
399.224 147.263 li
396.204 142.445 li
393.716 141.784 li
394.657 150.94 395.998 162.947 396.231 173.078 cv
cp
f
379.749 136.028 mo
378.484 134.29 378.285 133.442 377.694 131.348 cv
375.592 121.659 381.437 121.622 385.001 120.73 cv
389.211 119.871 393.854 121.698 395.678 128.04 cv
395.624 128.721 395.501 129.299 395.501 129.299 cv
397.768 132.53 li
398.141 133.062 397.955 133.802 397.373 134.094 cv
396.517 134.575 li
396.66 135.225 397.431 137.969 397.431 137.969 cv
397.779 139.611 397.709 142.324 395.49 142.67 cv
389.097 143.658 385.99 141.334 385.054 135.724 cv
383.49 135.925 380.677 137.304 379.749 136.028 cv
cp
1 .823529 .631373 rgb
f
381.894 140.102 mo
387.174 140.198 383.231 133.377 383.231 133.377 cv
383.231 133.377 384.954 134.515 385.643 135.038 cv
386.696 134.76 386.835 134.87 387.771 134.556 cv
386.521 128.161 383.781 123.746 393.266 123.39 cv
394.963 122.639 391.878 117.306 383.76 119.819 cv
379.021 121.285 375.651 124.763 376.22 129.691 cv
376.577 132.788 377.386 136.816 381.894 140.102 cv
cp
.235294 .235294 .231373 rgb
f
382.154 133.753 mo
382.537 135.258 384.248 136.673 385.232 136.423 cv
386.216 136.172 385.977 134.888 385.609 133.379 cv
385.367 132.381 385.08 130.994 383.921 130.954 cv
382.906 130.919 381.594 131.545 382.154 133.753 cv
cp
1 .823529 .631373 rgb
f
400.095 192.024 mo
396.704 192.024 li
397.202 192.024 li
397.202 192.022 397.202 192.02 397.202 192.017 cv
399.751 191.984 li
400.095 192.024 li
367.122 185.716 mo
367.563 160.3 li
368.704 160.06 li
367.884 170.369 367.345 179.479 367.122 185.716 cv
.822745 .822745 .821176 rgb
f
397.202 192.024 mo
396.704 192.024 li
397.202 192.017 li
397.202 192.02 397.202 192.022 397.202 192.024 cv
396.696 192.024 mo
386.45 192.024 li
386.444 191.49 386.438 190.958 386.432 190.426 cv
396.685 191.625 li
396.696 192.024 li
.823529 .823529 .819608 rgb
f
386.45 192.024 mo
367.013 192.024 li
367.122 185.716 li
367.345 179.479 367.884 170.369 368.704 160.06 cv
376.678 158.381 li
373.662 175.203 li
379.877 189.659 li
386.432 190.426 li
386.438 190.958 386.444 191.49 386.45 192.024 cv
386.45 192.024 li
.0235294 .309804 .356863 rgb
f
396.704 192.024 mo
396.696 192.024 li
396.696 192.024 li
396.685 191.625 li
399.751 191.984 li
397.202 192.017 li
396.704 192.024 li
f
360.876 176.501 mo
362.026 169.906 363.713 160.691 365.196 153.942 cv
365.623 151.998 366.915 149.92 368.41 148.699 cv
370.376 147.093 372.684 147.701 374.407 149.593 cv
376.129 151.485 377.201 154.029 377.004 156.645 cv
376.819 159.081 372.142 174.31 371.6 175.972 cv
377.912 192.024 li
366.35 192.024 li
366.271 191.701 360.822 176.81 360.876 176.501 cv
cp
0 .356863 .419608 rgb
f
404.248 106.373 mo
404.275 102.152 li
404.98 102.831 405.472 103.591 405.466 104.59 cv
405.461 105.292 405.215 106.093 404.248 106.373 cv
cp
401.746 95.9768 mo
401.751 95.2794 401.98 94.4857 402.876 94.1872 cv
402.85 98.327 li
402.193 97.6701 401.74 96.9332 401.746 95.9768 cv
cp
407.935 104.447 mo
407.949 102.174 406.252 100.943 404.612 99.7523 cv
404.504 99.674 404.399 99.5962 404.292 99.5183 cv
404.327 94.1269 li
405.419 94.3682 405.67 95.246 405.665 96.0019 cv
405.663 96.2985 li
407.957 96.3132 li
407.958 96.1759 li
407.975 93.516 406.133 92.7067 404.337 92.5462 cv
404.347 90.9541 li
402.897 90.9449 li
402.887 92.5396 li
401.107 92.6898 399.293 93.4898 399.276 96.1203 cv
399.261 98.392 400.958 99.6235 402.599 100.814 cv
402.833 100.985 li
402.798 106.413 li
401.683 106.17 401.426 105.308 401.431 104.564 cv
401.436 103.79 li
399.141 103.775 li
399.137 104.391 li
399.12 107.039 400.973 107.854 402.788 108.019 cv
402.78 109.249 li
404.23 109.259 li
404.238 108.028 li
406.054 107.887 407.918 107.097 407.935 104.447 cv
cp
f
401.276 155.244 mo
401.246 154.734 401.216 154.244 401.186 153.774 cv
419.166 145.914 li
419.246 145.554 li
420.936 146.644 li
420.436 148.014 404.915 153.884 401.276 155.244 cv
401.276 155.244 li
.0235294 .309804 .356863 rgb
f
420.936 146.644 mo
420.936 146.644 li
419.246 145.554 li
419.306 145.284 li
423.156 128.084 li
422.706 132.934 422.096 139.544 421.536 143.624 cv
421.366 144.864 421.345 145.814 420.936 146.644 cv
f
402.776 177.904 mo
400.026 155.544 li
399.876 154.344 li
401.186 153.774 li
401.216 154.244 401.246 154.734 401.276 155.244 cv
401.276 155.244 li
401.276 155.244 li
401.276 155.244 li
401.306 155.714 401.336 156.204 401.366 156.714 cv
401.396 157.194 401.426 157.694 401.466 158.204 cv
401.736 162.504 402.086 167.714 402.416 172.764 cv
402.416 172.794 li
402.416 172.794 li
402.486 173.684 402.546 174.564 402.596 175.434 cv
402.646 176.174 402.706 176.924 402.766 177.654 cv
402.776 177.904 li
f
50.2761 354.499 mo
49.2761 354.499 li
49.2761 324.913 li
50.2761 324.913 li
50.2761 354.499 li
cp
.854902 .854902 .854902 rgb
f
37.4534 384.056 mo
11.0891 372.465 li
11.4914 371.549 li
37.8557 383.14 li
37.4534 384.056 li
f
41.5237 369.679 mo
19.9719 343.066 li
20.7493 342.438 li
42.301 369.05 li
41.5237 369.679 li
cp
f
62.0988 384.056 mo
61.6965 383.14 li
88.0608 371.549 li
88.4631 372.465 li
62.0988 384.056 li
f
58.0286 369.679 mo
57.2512 369.05 li
78.803 342.438 li
79.5803 343.066 li
58.0286 369.679 li
cp
f
65.146 386.335 mo
64.576 392.275 65.666 400.735 65.096 405.995 cv
65.096 406.015 li
34.026 406.015 li
34.026 405.995 li
34.0161 405.955 34.0161 405.885 34.0061 405.785 cv
33.876 404.555 33.846 403.155 33.856 401.665 cv
33.8661 399.455 33.9861 397.045 34.0661 394.645 cv
34.1661 391.615 34.216 388.605 33.9461 386.075 cv
33.8661 385.285 33.7461 384.535 33.5961 383.855 cv
32.896 380.695 32.6161 376.665 31.696 369.385 cv
31.726 369.375 li
35.636 367.745 40.7561 365.525 41.6061 364.715 cv
43.256 365.355 47.856 365.535 49.556 365.725 cv
49.5661 365.725 li
49.826 365.695 50.156 365.665 50.5361 365.635 cv
52.606 365.465 56.1161 365.255 57.516 364.715 cv
58.366 365.525 63.516 367.755 67.4261 369.385 cv
66.5061 376.665 66.226 380.695 65.5261 383.855 cv
65.356 384.615 65.236 385.445 65.146 386.335 cv
.929412 .929412 .929412 rgb
f
48.441 373.905 mo
47.6531 370.16 li
49.5603 370.109 li
51.4675 370.16 li
50.6796 373.905 li
48.441 373.905 li
cp
.913725 .305882 .105882 rgb
f
48.441 373.905 mo
46.5869 393.386 li
49.5603 396.017 li
52.5338 393.386 li
50.6796 373.905 li
48.441 373.905 li
cp
.811765 .270588 .0941176 rgb
f
34.116 394.645 mo
36.1661 405.995 li
36.1661 406.015 li
26.536 406.015 li
26.536 405.995 li
25.636 392.415 li
26.716 385.385 28.886 377.595 31.696 369.365 cv
31.726 369.375 li
40.1661 371.595 li
35.976 387.545 li
34.116 394.645 li
.929412 .929412 .929412 rgb
f
50.5361 405.995 mo
26.536 405.995 li
25.636 392.415 li
26.716 385.385 28.886 377.595 31.696 369.365 cv
31.726 369.375 li
35.636 367.745 40.7561 365.525 41.6061 364.715 cv
43.256 365.355 50.541 389.58 50.541 389.58 cv
50.8535 394.142 50.5361 405.995 50.5361 405.995 cv
.341176 .341176 .337255 rgb
f
49.9994 405.995 mo
72.5981 405.995 li
73.4981 392.415 li
72.4181 385.385 70.2482 377.595 67.4381 369.365 cv
67.4081 369.375 li
63.4982 367.745 58.3781 365.525 57.5281 364.715 cv
55.8781 365.355 49.7752 389.58 49.7752 389.58 cv
49.4627 394.142 49.9994 405.995 49.9994 405.995 cv
f
51.804 406.018 mo
34.0284 406.018 li
34.0283 406.017 34.0281 406.016 34.028 406.015 cv
36.1661 406.015 li
51.7952 406.015 li
51.798 406.016 51.8012 406.017 51.804 406.018 cv
.822745 .822745 .821176 rgb
f
51.7952 406.015 mo
36.1661 406.015 li
36.1661 405.995 li
49.9994 405.995 li
49.9994 405.995 li
51.7363 405.995 li
51.7561 406.001 51.7754 406.008 51.7952 406.015 cv
.764706 .764706 .764706 rgb
f
36.1661 406.015 mo
34.028 406.015 li
34.0274 406.009 34.0267 406.002 34.0261 405.995 cv
36.1661 405.995 li
36.1661 406.015 li
f
49.9994 405.995 mo
36.1661 405.995 li
34.0261 405.995 li
33.9479 405.14 33.6174 394.125 33.666 392.83 cv
33.8319 388.106 34.4893 373.86 34.7227 373.86 cv
34.7902 375.328 34.8579 376.796 34.9254 378.258 cv
35.1219 382.434 35.343 386.715 36.9708 390.56 cv
37.2656 391.261 37.6218 391.942 38.0272 392.6 cv
39.7592 395.4 42.4372 397.661 45.6189 398.201 cv
42.7198 397.796 39.8269 397.391 36.9277 396.991 cv
40.3815 400.163 45.3671 403.425 49.9706 405.327 cv
49.9884 405.754 49.9994 405.995 49.9994 405.995 cv
.294118 .294118 .290196 rgb
f
51.7363 405.995 mo
49.9994 405.995 li
49.9994 405.995 li
49.9994 405.995 49.9884 405.754 49.9706 405.327 cv
50.5671 405.573 51.1568 405.797 51.7363 405.995 cv
f
66.2174 405.993 mo
56.6072 405.993 li
59.7458 404.93 61.5762 398.576 62.6081 395.106 cv
63.0196 393.73 63.3022 392.256 63.4926 390.751 cv
64.291 384.443 63.4372 377.668 63.2899 375.739 cv
63.4189 376.882 64.9236 382.146 65.4151 389.35 cv
65.4826 390.321 66.3464 405.164 66.2174 405.993 cv
f
44.1269 360.397 mo
44.1608 362.049 li
44.1608 362.057 li
44.1862 363.819 li
44.1862 363.828 li
44.2031 364.616 li
44.3048 370.275 li
47.6597 370.207 li
49.4727 370.173 li
49.4811 370.173 li
49.6252 370.165 li
51.2856 370.131 li
54.7337 370.063 li
54.8862 364.607 li
54.9031 363.912 li
54.954 362.159 li
54.954 362.15 li
54.9963 360.702 li
44.1269 360.397 li
cp
.94902 .780392 .6 rgb
f
49.4816 340.132 mo
54.3478 340.112 58.2286 343.314 57.8674 349.082 cv
57.8255 349.75 57.75 350.392 57.6186 351.063 cv
58.7018 350.45 59.6506 351.521 59.2699 353.161 cv
59.0015 354.318 58.4383 355.871 57.7974 356.104 cv
57.0291 356.384 56.7953 355.906 56.7509 355.891 cv
56.408 357.558 56.2693 359.046 55.6751 359.931 cv
54.972 360.977 54.4301 361.764 53.9254 362.357 cv
52.7812 363.701 51.8311 364.034 49.6464 364.048 cv
49.6339 364.048 li
49.6214 364.048 li
47.4366 364.062 46.4825 363.741 45.3212 362.412 cv
44.8091 361.826 44.2571 361.045 43.5407 360.008 cv
42.9353 359.131 42.7777 357.645 42.4135 355.982 cv
42.3693 355.998 42.1417 356.479 41.3699 356.209 cv
40.7261 355.984 40.1432 354.438 39.86 353.285 cv
39.4585 351.65 40.3936 350.567 41.4844 351.166 cv
41.3445 350.496 41.2609 349.856 41.2105 349.188 cv
40.7758 343.425 44.6155 340.174 49.4816 340.132 cv
cp
1 .823529 .631373 rgb
f
56.4914 341.805 mo
58.3611 343.983 58.9488 346.407 58.2192 350.889 cv
57.4873 351.301 57.101 351.846 56.8218 354.073 cv
56.2911 354.223 56.0609 354.257 55.5773 354.423 cv
58.4842 342.548 53.8846 342.339 52.6213 342.094 cv
51.5937 341.894 47.3921 341.921 46.367 342.134 cv
45.1071 342.395 40.5105 342.662 43.5683 354.499 cv
43.0827 354.34 42.8521 354.308 42.3195 354.165 cv
42.012 351.942 41.6187 351.402 40.8817 350.999 cv
40.095 346.527 40.8899 344.275 42.4937 341.894 cv
44.7199 338.589 53.1497 337.912 56.4914 341.805 cv
cp
.235294 .235294 .231373 rgb
f
46.5798 340.153 mo
45.9619 340.158 45.414 340.39 44.8722 340.688 cv
44.1227 341.098 42.2067 343.875 42.6069 344.529 cv
44.2287 347.179 49.2532 347.936 52.7986 348.035 cv
52.409 347.736 51.7417 347.138 51.6103 346.572 cv
53.5243 347.417 55.7264 347.594 57.7509 347.065 cv
57.1175 345.33 56.4404 343.528 55.0921 342.267 cv
53.9968 341.242 52.5418 340.667 51.0662 340.397 cv
49.5907 340.126 48.0798 340.139 46.5798 340.153 cv
cp
f
44.3226 373.392 mo
42.432 370.724 41.2963 367.934 41.0566 365 cv
44.1782 363.263 li
44.7522 365.964 46.6852 368.554 49.5603 370.121 cv
44.3226 373.392 li
cp
.854902 .854902 .854902 rgb
f
54.7981 373.392 mo
56.6887 370.724 57.8243 367.934 58.0641 365 cv
54.9425 363.263 li
54.3684 365.964 52.4355 368.554 49.5603 370.121 cv
54.7981 373.392 li
cp
f
50.536 389.575 mo
50.396 389.385 50.266 389.195 50.1261 389.005 cv
50.0061 388.845 49.896 388.695 49.776 388.535 cv
45.1961 382.245 38.9761 373.925 38.9761 373.925 cv
38.9761 373.925 42.4761 372.105 42.2261 371.835 cv
38.386 371.965 li
39.096 366.135 li
42.6061 364.045 li
45.156 372.475 47.6961 379.625 49.9461 387.475 cv
50.0661 387.885 50.1861 388.305 50.2961 388.725 cv
50.3761 389.005 50.456 389.285 50.536 389.575 cv
cp
.235294 .235294 .231373 rgb
f
60.146 373.925 mo
60.146 373.925 54.4961 381.805 50.2961 388.725 cv
50.2361 388.815 50.1761 388.915 50.1261 389.005 cv
50.0061 388.845 49.896 388.695 49.776 388.535 cv
49.826 388.175 49.886 387.825 49.9461 387.475 cv
51.386 378.925 53.9761 372.435 56.516 364.045 cv
60.026 366.135 li
60.7361 371.965 li
56.896 371.835 li
56.646 372.105 60.146 373.925 60.146 373.925 cv
cp
f
50.8848 393.798 mo
50.8848 394.23 50.535 394.58 50.1036 394.58 cv
49.6721 394.58 49.3223 394.23 49.3223 393.798 cv
49.3223 393.367 49.6721 393.017 50.1036 393.017 cv
50.535 393.017 50.8848 393.367 50.8848 393.798 cv
cp
f
50.8848 401.486 mo
50.8848 401.917 50.535 402.267 50.1036 402.267 cv
49.6721 402.267 49.3223 401.917 49.3223 401.486 cv
49.3223 401.054 49.6721 400.705 50.1036 400.705 cv
50.535 400.705 50.8848 401.054 50.8848 401.486 cv
cp
f
62.5222 388.806 mo
56.1889 388.806 li
56.1889 387.27 li
62.5222 387.27 li
62.5222 388.806 li
cp
f
15.3624 366.043 mo
15.3514 366.047 li
14.4498 365.671 13.374 365.21 12.6197 364.845 cv
11.3485 364.088 li
11.3393 364.117 li
10.7702 363.801 li
10.7618 363.831 li
10.7744 363.395 li
10.7744 363.392 li
10.7875 362.943 li
10.8675 362.828 10.9461 362.715 11.0394 362.576 cv
11.2578 362.251 11.3088 361.704 11.4348 361.091 cv
11.4511 361.097 11.537 361.273 11.8194 361.17 cv
12.0549 361.084 12.2619 360.513 12.3605 360.088 cv
12.4747 359.597 12.2622 359.25 11.9644 359.26 cv
11.9744 359.253 li
12.2426 357.606 12.0266 356.715 11.3394 355.915 cv
10.1114 354.484 7.01337 354.733 6.19524 355.948 cv
5.60584 356.822 5.31374 357.65 5.60279 359.294 cv
5.61286 359.3 li
5.31502 359.295 5.10694 359.644 5.22737 360.134 cv
5.33139 360.557 5.54562 361.126 5.78221 361.208 cv
6.06585 361.308 6.14952 361.131 6.16579 361.125 cv
6.2996 361.736 6.35755 362.282 6.58004 362.604 cv
6.6611 362.722 6.72796 362.815 6.79889 362.915 cv
6.80789 363.354 li
6.80789 363.358 li
6.81428 363.801 li
6.24562 364.117 li
6.23653 364.088 li
4.94658 364.856 li
4.19354 365.219 3.13055 365.675 2.2381 366.047 cv
2.22709 366.043 li
1.19438 369.068 .396899 371.931 0 374.514 cv
.330732 379.505 li
.330732 379.512 li
3.08336 379.512 li
3.0841 379.512 li
3.0842 379.513 li
9.6168 379.513 li
9.6138 379.512 li
14.5017 379.512 li
14.5017 379.505 li
17.2587 379.505 li
17.5895 374.514 li
17.1926 371.931 16.3951 369.068 15.3624 366.043 cv
cp
0 .435294 .509804 rgb
f
26.0111 335.077 mo
26.0001 335.081 li
25.0985 334.705 24.0227 334.244 23.2684 333.879 cv
21.9972 333.122 li
21.988 333.151 li
21.4189 332.835 li
21.4105 332.865 li
21.4231 332.429 li
21.4231 332.426 li
21.4362 331.977 li
21.5162 331.862 21.5948 331.749 21.6881 331.61 cv
21.9065 331.285 21.9575 330.738 22.0835 330.125 cv
22.0998 330.131 22.1857 330.307 22.4681 330.204 cv
22.7036 330.118 22.9106 329.547 23.0092 329.122 cv
23.1234 328.631 22.9109 328.284 22.6131 328.294 cv
22.6231 328.287 li
22.8912 326.64 22.6752 325.749 21.9881 324.949 cv
20.7601 323.518 17.6621 323.767 16.8439 324.982 cv
16.2545 325.856 15.9624 326.684 16.2515 328.328 cv
16.2616 328.334 li
15.9637 328.329 15.7556 328.678 15.8761 329.168 cv
15.9801 329.591 16.1943 330.16 16.4309 330.242 cv
16.7145 330.342 16.7982 330.165 16.8145 330.159 cv
16.9483 330.77 17.0062 331.316 17.2287 331.638 cv
17.3098 331.756 17.3766 331.849 17.4476 331.949 cv
17.4566 332.388 li
17.4566 332.392 li
17.463 332.835 li
16.8943 333.151 li
16.8852 333.122 li
15.5953 333.89 li
14.8422 334.253 13.7792 334.709 12.8868 335.081 cv
12.8758 335.077 li
11.8431 338.102 11.0456 340.965 10.6487 343.548 cv
10.9794 348.539 li
10.9794 348.546 li
13.732 348.546 li
13.7328 348.546 li
13.7329 348.547 li
20.2655 348.547 li
20.2625 348.546 li
25.1504 348.546 li
25.1504 348.539 li
27.9074 348.539 li
28.2382 343.548 li
27.8413 340.965 27.0438 338.102 26.0111 335.077 cv
cp
f
85.1851 366.043 mo
85.1961 366.047 li
86.0976 365.671 87.1735 365.21 87.9277 364.845 cv
89.199 364.088 li
89.2081 364.117 li
89.7773 363.801 li
89.7857 363.831 li
89.7731 363.395 li
89.7731 363.392 li
89.7599 362.943 li
89.68 362.828 89.6013 362.715 89.508 362.576 cv
89.2896 362.251 89.2387 361.704 89.1127 361.091 cv
89.0964 361.097 89.0104 361.273 88.7281 361.17 cv
88.4925 361.084 88.2855 360.513 88.1869 360.088 cv
88.0728 359.597 88.2853 359.25 88.583 359.26 cv
88.5731 359.253 li
88.3049 357.606 88.5209 356.715 89.208 355.915 cv
90.4361 354.484 93.5341 354.733 94.3522 355.948 cv
94.9416 356.822 95.2337 357.65 94.9447 359.294 cv
94.9346 359.3 li
95.2325 359.295 95.4405 359.644 95.3201 360.134 cv
95.2161 360.557 95.0019 361.126 94.7653 361.208 cv
94.4816 361.308 94.3979 361.131 94.3817 361.125 cv
94.2479 361.736 94.1899 362.282 93.9674 362.604 cv
93.8864 362.722 93.8195 362.815 93.7486 362.915 cv
93.7396 363.354 li
93.7396 363.358 li
93.7332 363.801 li
94.3018 364.117 li
94.3109 364.088 li
95.6009 364.856 li
96.3539 365.219 97.4169 365.675 98.3094 366.047 cv
98.3204 366.043 li
99.3531 369.068 100.151 371.931 100.547 374.514 cv
100.217 379.505 li
100.217 379.512 li
97.4641 379.512 li
97.4634 379.512 li
97.4633 379.513 li
90.9307 379.513 li
90.9337 379.512 li
86.0458 379.512 li
86.0458 379.505 li
83.2888 379.505 li
82.958 374.514 li
83.3549 371.931 84.1524 369.068 85.1851 366.043 cv
cp
f
74.5364 335.077 mo
74.5474 335.081 li
75.449 334.705 76.5248 334.244 77.279 333.879 cv
78.5503 333.122 li
78.5594 333.151 li
79.1286 332.835 li
79.137 332.865 li
79.1244 332.429 li
79.1244 332.426 li
79.1112 331.977 li
79.0313 331.862 78.9527 331.749 78.8594 331.61 cv
78.641 331.285 78.59 330.738 78.464 330.125 cv
78.4477 330.131 78.3617 330.307 78.0794 330.204 cv
77.8439 330.118 77.6369 329.547 77.5382 329.122 cv
77.4241 328.631 77.6366 328.284 77.9344 328.294 cv
77.9244 328.287 li
77.6562 326.64 77.8722 325.749 78.5593 324.949 cv
79.7874 323.518 82.8854 323.767 83.7035 324.982 cv
84.2929 325.856 84.585 326.684 84.296 328.328 cv
84.2859 328.334 li
84.5838 328.329 84.7918 328.678 84.6714 329.168 cv
84.5674 329.591 84.3532 330.16 84.1166 330.242 cv
83.8329 330.342 83.7493 330.165 83.733 330.159 cv
83.5992 330.77 83.5412 331.316 83.3187 331.638 cv
83.2377 331.756 83.1708 331.849 83.0999 331.949 cv
83.0909 332.388 li
83.0909 332.392 li
83.0845 332.835 li
83.6532 333.151 li
83.6623 333.122 li
84.9522 333.89 li
85.7052 334.253 86.7682 334.709 87.6607 335.081 cv
87.6717 335.077 li
88.7044 338.102 89.5019 340.965 89.8988 343.548 cv
89.568 348.539 li
89.568 348.546 li
86.8154 348.546 li
86.8147 348.546 li
86.8146 348.547 li
80.282 348.547 li
80.285 348.546 li
75.3971 348.546 li
75.3971 348.539 li
72.6401 348.539 li
72.3093 343.548 li
72.7062 340.965 73.5037 338.102 74.5364 335.077 cv
cp
f
56.1347 319.776 mo
56.1237 319.779 li
55.2222 319.404 54.1464 318.943 53.3921 318.578 cv
52.1208 317.821 li
52.1117 317.85 li
51.5425 317.533 li
51.5341 317.564 li
51.5468 317.127 li
51.5468 317.124 li
51.5599 316.676 li
51.6399 316.561 51.7185 316.447 51.8118 316.309 cv
52.0302 315.984 52.0812 315.437 52.2071 314.824 cv
52.2235 314.83 52.3094 315.005 52.5918 314.903 cv
52.8273 314.817 53.0343 314.246 53.1329 313.821 cv
53.247 313.329 53.0345 312.983 52.7368 312.992 cv
52.7467 312.986 li
53.0149 311.339 52.7989 310.448 52.1118 309.647 cv
50.8837 308.217 47.7857 308.466 46.9676 309.68 cv
46.3782 310.555 46.0861 311.383 46.3751 313.026 cv
46.3852 313.033 li
46.0874 313.027 45.8793 313.376 45.9997 313.866 cv
46.1037 314.29 46.318 314.858 46.5546 314.941 cv
46.8382 315.04 46.9219 314.863 46.9381 314.858 cv
47.0719 315.469 47.1299 316.015 47.3524 316.337 cv
47.4334 316.454 47.5003 316.547 47.5712 316.647 cv
47.5802 317.087 li
47.5802 317.09 li
47.5866 317.533 li
47.018 317.85 li
47.0089 317.821 li
45.7189 318.589 li
44.9659 318.952 43.9029 319.407 43.0104 319.779 cv
42.9994 319.776 li
41.9667 322.8 41.1692 325.663 40.7723 328.247 cv
41.1031 333.237 li
41.1031 333.245 li
43.8557 333.245 li
43.8564 333.245 li
43.8565 333.246 li
50.3891 333.246 li
50.3862 333.245 li
55.274 333.245 li
55.274 333.237 li
58.031 333.237 li
58.3618 328.247 li
57.9649 325.663 57.1674 322.8 56.1347 319.776 cv
cp
f
141.618 349.489 mo
139.486 352.046 129.454 362.021 123.979 361.046 cv
121.673 359.703 li
117.867 355.538 120.755 352.247 125.368 350.092 cv
126.992 349.334 136.507 345.772 138.703 344.831 cv
138.957 344.722 139.215 344.612 139.469 344.502 cv
140.032 345.58 141.055 348.408 141.618 349.489 cv
cp
.929412 .929412 .929412 rgb
f
145.43 362.651 mo
137.413 378.04 li
127.713 370.525 119.897 363.126 119.913 356.21 cv
130.765 356.21 li
134.653 360.474 139.638 362.416 145.43 362.651 cv
f
171.603 394.147 mo
180.714 391.753 li
179.557 384.196 177.217 375.822 174.204 366.984 cv
165.093 369.379 li
171.603 394.147 li
f
191.673 384.434 mo
190.419 386.084 189.125 387.609 187.798 389.009 cv
187.785 389.015 li
182.927 394.118 177.553 397.577 171.876 399.445 cv
169.025 394.646 li
167.453 391.992 li
168.279 391.299 169.117 390.626 169.975 389.966 cv
170.655 389.451 171.342 388.949 172.041 388.461 cv
177.309 384.718 183.19 381.615 189.481 378.929 cv
191.673 384.434 li
f
171.745 385.228 mo
171.326 389.613 171.745 395.266 171.853 400.209 cv
171.907 402.477 171.885 404.594 171.692 406.367 cv
138.311 406.367 li
138.106 404.454 138.096 402.165 138.171 399.704 cv
138.278 395.061 138.633 389.86 138.289 385.701 cv
138.203 384.561 138.063 383.497 137.849 382.552 cv
137.279 380.026 136.967 376.952 136.441 372.31 cv
136.43 372.256 li
136.247 370.708 136.043 368.967 135.796 367.011 cv
140.009 365.259 145.544 362.852 146.446 361.981 cv
148.23 362.68 153.163 362.863 155.001 363.067 cv
155.915 362.97 157.613 362.863 159.3 362.712 cv
160.987 362.551 162.664 362.325 163.556 361.981 cv
164.459 362.852 169.994 365.259 174.206 367.011 cv
173.218 374.824 172.917 379.166 172.154 382.552 cv
171.971 383.368 171.842 384.271 171.745 385.228 cv
f
153.799 371.861 mo
152.952 367.837 li
155.002 367.781 li
157.052 367.837 li
156.205 371.861 li
153.799 371.861 li
cp
.235294 .235294 .231373 rgb
f
201.771 377.281 mo
202.503 376.781 li
203.478 375.881 li
204.422 373.25 li
204.554 372.882 204.892 372.646 205.26 372.626 cv
205.566 371.773 li
205.742 371.282 206.282 371.027 206.773 371.203 cv
206.791 371.21 li
206.91 371.252 207.015 371.318 207.104 371.398 cv
207.395 371.245 207.753 371.234 208.065 371.4 cv
208.083 371.41 li
208.582 371.676 208.771 372.297 208.504 372.796 cv
206.612 376.338 li
206.592 376.368 li
206.531 376.459 li
206.471 376.536 li
206.403 376.602 li
206.317 376.676 li
206.291 376.698 li
202.986 378.98 li
202.521 379.301 201.883 379.184 201.561 378.719 cv
201.549 378.702 li
201.228 378.236 201.306 377.603 201.771 377.281 cv
cp
.960784 .752941 .54902 rgb
f
193.656 377.46 mo
196.707 376.495 li
196.902 376.453 197.088 376.38 197.259 376.277 cv
200.395 374.396 li
200.879 374.103 201.509 374.258 201.802 374.742 cv
201.813 374.759 li
202.106 375.243 201.952 375.873 201.468 376.166 cv
199.452 377.388 li
199.452 377.388 193.372 377.521 193.656 377.46 cv
cp
f
193.439 377.535 mo
195.958 376.588 201.874 377.226 201.874 377.226 cv
205.292 375.705 li
207.661 372.786 li
208.018 372.347 208.663 372.28 209.102 372.637 cv
209.118 372.65 li
209.558 373.006 209.624 373.651 209.268 374.091 cv
206.353 377.5 li
206.353 377.5 203.836 379.214 203.003 379.678 cv
202.847 379.766 202.611 379.85 202.377 379.95 cv
201.408 380.367 198.668 381.458 196.18 381.694 cv
192.945 382.552 li
191.29 378.922 li
193.439 377.535 li
cp
1 .811765 .623529 rgb
f
194.564 383.301 mo
192.43 377.859 li
189.541 378.993 li
191.676 384.434 li
194.564 383.301 li
cp
.854902 .854902 .854902 rgb
f
193.053 383.322 mo
192.787 383.426 192.487 383.295 192.383 383.03 cv
192.279 382.764 192.41 382.464 192.676 382.359 cv
192.941 382.255 193.241 382.386 193.346 382.652 cv
193.45 382.918 193.319 383.218 193.053 383.322 cv
cp
1 1 1 rgb
f
153.799 371.861 mo
151.806 392.798 li
155.002 395.625 li
158.197 392.798 li
156.205 371.861 li
153.799 371.861 li
cp
.341176 .341176 .337255 rgb
f
149.162 357.343 mo
149.199 359.119 li
149.199 359.128 li
149.226 361.022 li
149.226 361.031 li
149.244 361.878 li
149.354 367.96 li
152.959 367.887 li
154.908 367.85 li
154.917 367.85 li
155.071 367.841 li
156.856 367.805 li
160.562 367.732 li
160.726 361.868 li
160.744 361.122 li
160.798 359.237 li
160.798 359.228 li
160.844 357.671 li
149.162 357.343 li
cp
.94902 .780392 .6 rgb
f
149.373 371.309 mo
147.341 368.442 146.12 365.444 145.863 362.291 cv
149.217 360.424 li
149.834 363.327 151.912 366.11 155.002 367.795 cv
149.373 371.309 li
cp
.854902 .854902 .854902 rgb
f
160.631 371.309 mo
162.663 368.442 163.883 365.444 164.141 362.291 cv
160.786 360.424 li
160.169 363.327 158.092 366.11 155.002 367.795 cv
160.631 371.309 li
cp
f
157.408 406.378 mo
138.375 406.378 li
138.375 406.367 li
138.375 406.367 li
157.376 406.367 li
157.376 406.367 li
157.408 406.378 li
.954817 .954817 .954418 rgb
f
157.376 406.367 mo
138.375 406.367 li
138.3 405.626 138.235 400.972 138.192 399.908 cv
138.192 399.865 li
138.171 399.704 li
138.245 396.512 138.436 393.056 138.436 389.856 cv
138.436 388.402 138.397 387 138.289 385.701 cv
138.203 384.561 138.063 383.497 137.849 382.552 cv
137.279 380.026 136.967 376.952 136.441 372.31 cv
136.881 375.029 139.837 385.905 141.47 389.763 cv
141.793 390.515 142.169 391.246 142.61 391.956 cv
144.469 394.965 147.349 397.394 150.767 397.974 cv
147.65 397.533 144.544 397.103 141.427 396.673 cv
145.63 400.532 151.949 404.519 157.376 406.367 cv
.886274 .886274 .886274 rgb
f
171.853 400.203 mo
171.847 399.928 171.84 399.65 171.832 399.37 cv
171.876 399.445 li
177.553 397.577 182.927 394.118 187.785 389.015 cv
187.785 389.015 li
182.927 394.118 177.553 397.577 171.876 399.445 cv
171.876 399.907 li
171.868 399.981 171.861 400.081 171.853 400.203 cv
.954817 .954817 .954418 rgb
f
171.569 388.794 mo
171.586 387.544 171.638 386.345 171.745 385.228 cv
171.746 385.22 171.747 385.212 171.748 385.204 cv
171.863 386.24 171.964 387.328 172.041 388.461 cv
171.883 388.571 171.726 388.682 171.569 388.794 cv
.886274 .886274 .886274 rgb
f
171.876 399.445 mo
171.832 399.37 li
171.736 395.914 171.523 392.172 171.569 388.794 cv
171.726 388.682 171.883 388.571 172.041 388.461 cv
172.041 388.461 li
172.114 389.504 172.167 390.593 172.193 391.708 cv
172.928 393.369 174.247 394.037 175.922 394.037 cv
179.108 394.038 183.584 391.62 187.785 389.015 cv
182.927 394.118 177.553 397.577 171.876 399.445 cv
f
171.533 406.347 mo
162.575 406.347 li
165.948 405.205 167.916 398.376 169.025 394.646 cv
169.467 393.167 169.771 391.583 169.975 389.966 cv
170.833 383.187 169.916 375.905 169.757 373.833 cv
169.876 374.881 171.072 379.157 171.748 385.204 cv
171.747 385.212 171.746 385.22 171.745 385.228 cv
171.638 386.345 171.586 387.544 171.569 388.794 cv
171.523 392.172 171.736 395.914 171.832 399.37 cv
171.84 399.65 171.847 399.928 171.853 400.203 cv
171.765 401.544 171.66 405.53 171.533 406.347 cv
f
149.738 335.748 mo
149.717 335.813 li
149.56 336.359 149.203 336.836 148.774 337.21 cv
148.324 337.601 147.799 337.889 147.267 338.154 cv
146.491 338.542 145.671 338.881 144.802 338.94 cv
144.48 338.96 144.15 338.94 143.831 338.864 cv
143.9 338.751 143.965 338.638 144.033 338.524 cv
144.432 337.865 144.843 337.179 145.43 336.698 cv
145.719 336.54 146.007 336.372 146.288 336.197 cv
146.913 335.823 147.517 335.418 148.101 334.982 cv
148.296 334.838 148.496 334.687 148.722 334.598 cv
148.952 334.512 149.223 334.498 149.433 334.622 cv
149.793 334.831 149.844 335.343 149.738 335.748 cv
cp
.94902 .780392 .6 rgb
f
149.079 333.723 mo
149.125 334.32 149.172 334.925 149.378 335.488 cv
149.584 336.05 149.973 336.573 150.525 336.804 cv
151.078 337.035 153.763 336.572 154.098 336.076 cv
152.574 335.957 150.142 335.529 149.079 333.723 cv
cp
.235294 .235294 .231373 rgb
f
155.302 337.48 mo
150.17 337.492 146.098 340.894 146.518 346.976 cv
146.566 347.68 146.65 348.356 146.793 349.064 cv
145.647 348.424 144.653 349.56 145.066 351.288 cv
145.357 352.506 145.961 354.14 146.639 354.382 cv
147.451 354.672 147.694 354.166 147.741 354.15 cv
148.114 355.906 148.27 357.475 148.903 358.403 cv
149.651 359.502 150.228 360.329 150.765 360.951 cv
151.981 362.36 152.985 362.705 155.289 362.705 cv
155.302 362.705 li
155.316 362.705 li
157.62 362.705 158.624 362.36 159.84 360.951 cv
160.376 360.329 160.953 359.502 161.702 358.403 cv
162.334 357.475 162.491 355.906 162.864 354.15 cv
162.91 354.166 163.154 354.672 163.966 354.382 cv
164.643 354.14 165.248 352.506 165.539 351.288 cv
165.951 349.56 164.958 348.424 163.811 349.064 cv
163.954 348.356 164.038 347.68 164.087 346.976 cv
164.507 340.894 160.435 337.492 155.302 337.48 cv
cp
1 .823529 .631373 rgb
f
147.92 339.291 mo
145.963 341.601 145.359 344.162 146.159 348.884 cv
146.933 349.313 147.345 349.886 147.654 352.232 cv
148.215 352.387 148.458 352.422 148.969 352.593 cv
145.823 340.088 150.673 339.837 152.004 339.57 cv
153.087 339.352 157.518 339.352 158.601 339.57 cv
159.932 339.837 164.781 340.088 161.636 352.593 cv
162.147 352.422 162.39 352.387 162.951 352.232 cv
163.26 349.886 163.671 349.313 164.446 348.884 cv
165.245 344.162 164.392 341.791 162.684 339.291 cv
160.314 335.821 151.419 335.163 147.92 339.291 cv
cp
.235294 .235294 .231373 rgb
f
157 335.057 mo
156.852 335.632 156.642 335.899 156.538 336.038 cv
157.387 335.823 159.095 334.568 159.739 334.531 cv
158.148 338.928 153.844 343.626 149.876 344.414 cv
150.295 343.915 150.713 343.415 151.132 342.915 cv
149.054 343.529 146.975 344.143 144.897 344.757 cv
145.603 343.329 146.309 341.901 147.016 340.473 cv
146.268 340.744 145.52 341.015 144.771 341.286 cv
146.757 337.738 150.495 335.649 154.098 336.076 cv
153.906 335.899 153.555 335.466 153.299 335.231 cv
154.176 335.318 154.458 335.249 155.38 335.841 cv
155.846 335.428 156.452 335.266 157 335.057 cv
cp
f
156.212 341.262 mo
157.424 342.229 158.827 342.863 160.279 343.101 cv
159.99 342.706 159.702 342.31 159.414 341.914 cv
161.218 342.214 163.022 342.515 164.826 342.815 cv
164.519 341.257 163.836 339.803 162.876 338.667 cv
163.283 338.681 163.691 338.695 164.099 338.709 cv
162.04 336.467 158.533 335.844 156.093 337.478 cv
155.52 337.862 155.127 338.626 155.109 339.4 cv
155.091 340.189 155.655 340.818 156.212 341.262 cv
cp
f
154.753 337.642 mo
154.622 338.051 154.094 338.133 153.665 338.164 cv
152.402 338.25 151.145 338.483 149.937 338.864 cv
149.213 339.091 148.461 339.403 148.042 340.035 cv
147.847 340.326 147.737 340.67 147.641 341.009 cv
147.359 342.012 147.16 343.045 146.759 344.006 cv
146.361 344.971 145.726 345.88 144.799 346.361 cv
143.875 346.841 142.626 346.783 141.902 346.038 cv
141.294 345.413 141.16 344.445 141.342 343.598 cv
141.524 342.746 141.977 341.981 142.42 341.236 cv
142.89 340.447 143.364 339.654 143.831 338.864 cv
143.9 338.751 143.965 338.638 144.033 338.524 cv
144.432 337.865 144.843 337.179 145.43 336.698 cv
145.523 336.619 145.623 336.547 145.726 336.482 cv
145.904 336.369 146.093 336.273 146.288 336.197 cv
146.972 335.933 147.744 335.881 148.485 335.881 cv
148.897 335.881 149.306 335.847 149.717 335.813 cv
151.087 335.7 152.45 335.576 153.744 336.589 cv
153.96 336.757 154.279 336.743 154.489 336.918 cv
154.698 337.093 154.835 337.381 154.753 337.642 cv
cp
1 .823529 .631373 rgb
f
144.192 347.257 mo
141.618 349.488 li
138.616 344.891 li
141.16 343.101 li
144.192 347.257 li
cp
.854902 .854902 .854902 rgb
f
150.562 339.338 mo
151.818 340.048 153.531 339.825 154.563 338.816 cv
152.581 338.334 150.598 337.852 148.616 337.37 cv
149.172 338.115 149.752 338.881 150.562 339.338 cv
cp
.235294 .235294 .231373 rgb
f
157.064 338.553 mo
158.154 338.138 159.306 337.889 160.469 337.817 cv
159.905 338.019 159.653 338.702 159.125 338.986 cv
158.8 339.161 158.401 339.161 158.046 339.059 cv
157.691 338.956 157.371 338.76 157.064 338.553 cv
cp
f
199.615 367.728 mo
199.615 372.651 li
194.693 372.651 li
194.693 367.728 li
199.615 367.728 li
cp
194.925 365.452 mo
194.739 364.895 194.645 364.291 194.645 363.455 cv
194.645 356.349 200.218 355.7 200.218 347.618 cv
200.218 345.297 199.291 344.414 197.665 344.414 cv
196.039 344.414 195.11 345.297 195.11 347.618 cv
195.11 351.148 li
190.28 351.148 li
190.28 347.944 li
190.28 342.742 192.835 339.77 197.805 339.77 cv
202.773 339.77 205.328 342.742 205.328 347.944 cv
205.328 356.395 199.291 357.697 199.291 363.641 cv
199.291 364.245 199.337 364.848 199.475 365.452 cv
194.925 365.452 li
cp
.811765 .270588 .0941176 rgb
f
199.615 367.728 mo
199.615 372.651 li
194.693 372.651 li
194.693 367.728 li
199.615 367.728 li
cp
194.925 365.452 mo
194.739 364.895 194.645 364.291 194.645 363.455 cv
194.645 356.349 200.218 355.7 200.218 347.618 cv
200.218 345.297 199.291 344.414 197.665 344.414 cv
196.039 344.414 195.11 345.297 195.11 347.618 cv
195.11 351.148 li
190.28 351.148 li
190.28 347.944 li
190.28 342.742 192.835 339.77 197.805 339.77 cv
202.773 339.77 205.328 342.742 205.328 347.944 cv
205.328 356.395 199.291 357.697 199.291 363.641 cv
199.291 364.245 199.337 364.848 199.475 365.452 cv
194.925 365.452 li
cp
f
206.92 288.297 mo
206.892 288.286 li
199.351 285.714 li
199.117 285.616 198.951 285.431 198.864 285.209 cv
198.778 284.992 198.773 284.743 198.875 284.511 cv
198.88 284.494 li
199.08 284.028 199.111 283.611 199.577 283.81 cv
200.799 284.435 205.97 286.084 207.438 286.551 cv
208.189 286.767 208.321 287.367 208.13 287.801 cv
208.126 287.817 li
207.926 288.284 207.387 288.497 206.92 288.297 cv
cp
1 .823529 .631373 rgb
f
208.169 290.619 mo
207.943 291.072 207.393 291.256 206.94 291.029 cv
200.274 287.701 li
199.821 287.475 199.637 286.924 199.864 286.471 cv
199.872 286.455 li
200.098 286.002 200.649 285.818 201.101 286.044 cv
207.767 289.373 li
208.22 289.599 208.404 290.15 208.178 290.602 cv
208.169 290.619 li
cp
f
199.065 288.058 mo
199.074 288.042 li
199.316 287.597 199.873 287.433 200.318 287.675 cv
206.245 290.904 li
206.69 291.146 206.854 291.702 206.612 292.147 cv
206.603 292.163 li
206.361 292.608 205.804 292.772 205.36 292.53 cv
199.432 289.301 li
198.987 289.059 198.823 288.502 199.065 288.058 cv
cp
f
198.349 289.518 mo
198.358 289.504 li
198.606 289.129 199.111 289.027 199.486 289.275 cv
203.562 291.973 li
203.937 292.221 204.04 292.726 203.791 293.101 cv
203.782 293.114 li
203.534 293.489 203.029 293.592 202.654 293.344 cv
198.579 290.646 li
198.204 290.398 198.101 289.893 198.349 289.518 cv
cp
f
194.006 288.023 mo
190.316 286.718 li
191.657 282.386 li
194.818 283.68 li
195.332 282.862 199.908 283.477 199.908 283.477 cv
200.673 283.698 201.422 284.307 202.496 284.927 cv
202.042 287.5 200.713 289.7 199.441 291.217 cv
199.441 291.217 197.689 290.658 197.115 290.446 cv
195.021 289.674 194.36 288.767 194.006 288.023 cv
cp
.94902 .780392 .6 rgb
f
204.207 282.675 mo
204.207 282.695 li
204.205 283.229 203.774 283.495 203.241 283.548 cv
202.562 283.617 200.966 283.524 200.153 283.469 cv
200.168 283.497 198.82 286.992 196.335 286.713 cv
196.325 286.709 li
190.569 285.453 li
191.963 281.939 li
195.39 283.016 li
196.257 281.69 198.573 281.46 198.966 281.451 cv
199.743 281.435 201.358 281.852 202.95 281.727 cv
204.068 281.639 204.209 282.14 204.207 282.675 cv
cp
1 .823529 .631373 rgb
f
177.238 278.743 mo
176.515 275.262 175.619 265.455 174.678 262.583 cv
173.983 260.457 173.918 260.176 172.424 258.506 cv
171.757 257.757 166.765 255.125 164.385 253.401 cv
159.307 258.684 161.72 267.216 163.752 273.92 cv
163.843 274.238 163.942 274.549 164.045 274.863 cv
164.077 274.967 li
164.14 275.171 164.209 275.375 164.275 275.582 cv
165.152 278.299 166.19 281.105 167.081 283.977 cv
167.646 285.789 168.546 286.579 170.053 287.257 cv
177.32 278.759 li
177.238 278.743 li
0 .356863 .419608 rgb
f
190.277 289.296 mo
191.134 281.784 li
195.357 282.162 li
194.611 289.79 li
190.277 289.296 li
.929412 .929412 .929412 rgb
f
192.3 290.042 mo
192.262 290.058 192.139 290.052 191.943 290.047 cv
189.83 289.925 175.76 287.374 170.977 286.585 cv
169.751 286.384 168.917 286.222 168.718 286.144 cv
168.361 285.993 168.03 285.852 167.724 285.7 cv
172.687 280.15 li
175.174 277.362 li
178.244 277.997 189.906 281.332 193.391 281.682 cv
193.095 285.136 192.655 287.708 192.3 290.042 cv
0 .356863 .419608 rgb
f
190.846 288.3 mo
190.722 288.615 190.367 288.769 190.053 288.645 cv
189.739 288.521 189.585 288.166 189.709 287.852 cv
189.832 287.538 190.187 287.384 190.501 287.508 cv
190.815 287.631 190.97 287.986 190.846 288.3 cv
1 1 1 rgb
f
188.72 288.12 mo
188.597 288.434 188.242 288.588 187.928 288.465 cv
187.614 288.341 187.46 287.986 187.583 287.672 cv
187.707 287.358 188.062 287.203 188.376 287.327 cv
188.69 287.451 188.844 287.806 188.72 288.12 cv
f
171.081 281.947 mo
170.964 281.402 170.846 280.853 170.729 280.305 cv
170.729 265.039 li
173.526 279.21 li
172.687 280.15 li
171.081 281.947 li
.0235294 .309804 .356863 rgb
f
191.943 290.047 mo
189.977 289.933 177.662 287.717 172.104 286.774 cv
171.776 285.206 171.432 283.587 171.081 281.947 cv
172.687 280.15 li
173.526 279.21 li
174.427 283.776 li
191.943 290.047 li
f
138.08 301.634 mo
174.904 301.634 li
174.419 295.976 165.292 255.705 165.292 255.705 cv
161.287 255.068 li
149.244 253.131 li
149.244 253.131 137.999 296.51 138.08 301.634 cv
.929412 .929412 .929412 rgb
f
151.752 251.34 mo
152.743 241.304 li
157.026 241.81 162.766 242.387 163.784 242.312 cv
163.784 242.312 163.145 249.138 163.134 252.298 cv
163.807 260.517 154.282 260.684 151.752 251.34 cv
cp
.94902 .780392 .6 rgb
f
149.244 253.131 mo
139.073 257.962 li
138.781 261.203 138.607 264.478 138.315 267.996 cv
137.05 283.46 136.401 296.51 136.482 301.634 cv
155.763 301.634 li
155.549 281.514 154.885 262.398 149.778 253.217 cv
149.244 253.131 li
0 .356863 .419608 rgb
f
170.099 258.639 mo
169.481 258.265 li
165.292 255.705 li
164.717 255.614 li
164.717 301.634 li
174.904 301.634 li
174.419 295.976 170.167 261.515 170.099 258.639 cv
cp
f
158.332 262.501 mo
160.925 262.233 li
161.469 257.075 li
159.446 257.395 158.331 257.361 157.431 257.243 cv
158.332 262.501 li
cp
.913725 .305882 .105882 rgb
f
159.312 257.197 mo
163.594 261.61 li
164.139 259.118 165.432 256.682 165.148 255.166 cv
163.148 251.464 li
163.358 253.194 161.14 256.624 159.312 257.197 cv
cp
.854902 .854902 .854902 rgb
f
159.312 257.197 mo
156.178 262.233 li
153.162 259.272 150.03 255.983 149.242 253.132 cv
151.858 250.263 li
151.855 252.831 155.897 257.335 159.312 257.197 cv
cp
f
158.332 262.501 mo
160.925 262.233 li
162.905 286.03 li
160.261 290.186 li
157.431 286.832 li
158.332 262.501 li
cp
.811765 .270588 .0941176 rgb
f
155.296 283.084 mo
153.09 275.225 147.645 260.734 147.645 260.734 cv
147.645 260.734 151.111 258.934 150.868 258.659 cv
147.06 258.794 li
147.748 253.842 li
151.243 250.938 li
153.998 260.039 155.527 273.035 155.296 283.084 cv
0 .435294 .509804 rgb
f
164.717 282.842 mo
166.924 274.982 169.072 260.259 169.072 260.259 cv
169.072 260.259 165.798 259.052 166.042 258.777 cv
168.804 258.442 li
166.11 254.714 li
163.148 251.464 li
164.082 260.546 164.486 272.792 164.717 282.842 cv
cp
f
136.591 295.377 mo
137.028 270.167 li
138.159 269.928 li
137.346 280.153 136.812 289.19 136.591 295.377 cv
.822745 .822745 .821176 rgb
f
155.48 287.565 mo
155.464 287.111 155.448 286.656 155.431 286.206 cv
155.593 287.51 li
155.556 287.528 155.517 287.547 155.48 287.565 cv
.764706 .764706 .764706 rgb
f
136.482 301.634 mo
136.591 295.377 li
136.812 289.19 137.346 280.153 138.159 269.928 cv
146.069 268.263 li
145.802 277.568 li
153.068 275.972 li
153.724 277.932 154.34 279.846 154.851 281.552 cv
155.431 286.206 li
155.448 286.656 155.464 287.111 155.48 287.565 cv
146.314 292.034 139.661 296.699 136.482 301.634 cv
.0235294 .309804 .356863 rgb
f
154.851 281.552 mo
154.34 279.846 153.724 277.932 153.068 275.972 cv
154.126 275.739 li
154.851 281.552 li
.0235294 .372549 .427451 rgb
f
141.697 282.855 mo
141.697 282.855 146.196 269.136 146.392 266.541 cv
146.589 263.946 145.525 261.422 143.816 259.546 cv
142.108 257.669 139.818 257.066 137.868 258.659 cv
136.385 259.87 135.103 261.931 134.68 263.859 cv
133.209 270.554 130.858 279.612 130.395 286.236 cv
129.886 293.526 135.22 293.381 135.473 293.915 cv
142.677 285.36 li
141.697 282.855 li
cp
0 .356863 .419608 rgb
f
156.58 275.677 mo
156.56 275.665 li
156.004 275.339 155.887 274.615 156.26 274.053 cv
157.668 271.881 158.793 269.633 159.646 267.368 cv
159.875 266.781 160.521 266.475 161.124 266.67 cv
161.145 266.677 li
161.747 266.873 162.07 267.526 161.831 268.15 cv
160.946 270.534 159.78 272.898 158.323 275.184 cv
157.934 275.781 157.136 276.004 156.58 275.677 cv
cp
.94902 .780392 .6 rgb
f
166.957 258.11 mo
166.851 260.177 165.09 261.766 163.024 261.66 cv
160.958 261.555 159.369 259.794 159.474 257.728 cv
159.58 255.661 161.341 254.072 163.407 254.178 cv
165.473 254.284 167.063 256.044 166.957 258.11 cv
cp
.235294 .235294 .231373 rgb
f
165.396 261.526 mo
165.259 263.218 li
165.147 264.417 li
163.916 279.062 li
160.362 278.881 li
160.632 264.186 li
160.643 262.982 li
160.679 261.285 li
165.396 261.526 li
cp
.776471 .776471 .776471 rgb
f
165.151 263.209 mo
160.751 262.984 li
160.539 262.973 160.376 262.792 160.387 262.58 cv
160.491 260.54 li
165.658 260.805 li
165.554 262.845 li
165.543 263.057 165.363 263.22 165.151 263.209 cv
cp
.341176 .341176 .337255 rgb
f
165.681 261.387 mo
160.409 261.117 li
160.076 259.938 li
166.133 260.248 li
165.681 261.387 li
cp
.776471 .776471 .776471 rgb
f
165.259 263.218 mo
165.147 264.417 li
160.632 264.186 li
160.643 262.982 li
165.259 263.218 li
cp
.235294 .235294 .231373 rgb
f
157.053 282.568 mo
152.979 277.88 li
157.26 274.161 li
161.333 278.85 li
157.053 282.568 li
cp
1 .823529 .631373 rgb
f
157.992 273.547 mo
157.978 273.531 li
157.594 273.089 157.641 272.419 158.083 272.036 cv
164.556 266.412 li
164.998 266.028 165.668 266.075 166.052 266.517 cv
166.066 266.533 li
166.45 266.975 166.403 267.645 165.961 268.029 cv
159.488 273.652 li
159.046 274.036 158.376 273.989 157.992 273.547 cv
cp
.94902 .780392 .6 rgb
f
161.607 273.188 mo
161.593 273.172 li
161.209 272.73 161.256 272.06 161.698 271.676 cv
164.679 269.086 li
165.121 268.702 165.791 268.749 166.175 269.191 cv
166.189 269.207 li
166.573 269.649 166.526 270.319 166.084 270.703 cv
163.102 273.293 li
162.66 273.677 161.991 273.63 161.607 273.188 cv
cp
f
162.524 275.162 mo
162.51 275.146 li
162.126 274.704 162.173 274.034 162.615 273.65 cv
165.114 271.479 li
165.556 271.095 166.226 271.142 166.61 271.584 cv
166.624 271.6 li
167.008 272.042 166.961 272.712 166.519 273.096 cv
164.02 275.267 li
163.578 275.651 162.908 275.604 162.524 275.162 cv
cp
f
163.312 277.116 mo
163.3 277.101 li
162.959 276.709 163 276.114 163.393 275.773 cv
165.613 273.845 li
166.005 273.504 166.6 273.546 166.941 273.938 cv
166.953 273.952 li
167.294 274.345 167.253 274.94 166.86 275.281 cv
164.998 277.229 li
164.605 277.57 163.653 277.508 163.312 277.116 cv
cp
f
158.059 279.039 mo
156.689 277.462 li
155.559 276.162 155.698 274.192 156.998 273.062 cv
158.924 271.389 li
164.385 277.675 li
162.459 279.348 li
161.158 280.478 159.188 280.339 158.059 279.039 cv
cp
1 .823529 .631373 rgb
f
164.093 277.929 mo
165.525 276.684 li
165.917 276.343 165.959 275.749 165.618 275.356 cv
165.605 275.342 li
165.264 274.949 164.67 274.908 164.277 275.249 cv
164.538 275.022 li
164.979 274.639 165.027 273.969 164.643 273.527 cv
164.629 273.511 li
164.245 273.069 163.575 273.022 163.133 273.406 cv
163.374 273.196 li
163.816 272.812 163.863 272.143 163.479 271.701 cv
163.465 271.685 li
163.081 271.243 162.412 271.196 161.97 271.58 cv
162.412 271.196 162.459 270.526 162.075 270.084 cv
162.061 270.068 li
161.677 269.626 161.007 269.579 160.565 269.963 cv
158.632 271.643 li
164.093 277.929 li
cp
f
156.293 283.683 mo
152.151 277.358 li
155.64 274.95 li
159.942 281.293 li
156.293 283.683 li
cp
.929412 .929412 .929412 rgb
f
138.388 280.943 mo
135.473 293.915 li
140.097 295.013 151.724 288.699 159.116 283 cv
154.28 275.888 li
146.685 279.074 139.249 280.613 138.388 280.943 cv
cp
0 .356863 .419608 rgb
f
156.936 282.841 mo
157.041 283.162 156.867 283.507 156.546 283.613 cv
156.226 283.718 155.88 283.544 155.775 283.223 cv
155.669 282.903 155.844 282.557 156.164 282.452 cv
156.485 282.346 156.83 282.52 156.936 282.841 cv
cp
1 1 1 rgb
f
155.186 284.061 mo
155.291 284.381 155.117 284.727 154.796 284.832 cv
154.476 284.938 154.13 284.763 154.025 284.443 cv
153.919 284.122 154.093 283.777 154.414 283.671 cv
154.735 283.566 155.08 283.74 155.186 284.061 cv
cp
f
157.443 227.164 mo
152.259 227.304 148.232 230.842 148.808 236.974 cv
148.874 237.684 148.976 238.365 149.138 239.076 cv
147.964 238.458 146.989 239.63 147.449 241.365 cv
147.773 242.588 148.424 244.223 149.114 244.451 cv
149.942 244.723 150.175 244.206 150.222 244.189 cv
150.642 245.953 150.839 247.533 151.501 248.455 cv
152.285 249.547 152.888 250.367 153.445 250.982 cv
154.708 252.375 155.731 252.698 158.058 252.641 cv
158.072 252.64 li
158.085 252.64 li
160.412 252.583 161.418 252.209 162.611 250.755 cv
163.137 250.114 163.699 249.265 164.428 248.136 cv
165.043 247.183 165.162 245.594 165.495 243.812 cv
165.543 243.827 165.801 244.332 166.614 244.019 cv
167.292 243.757 167.862 242.092 168.125 240.854 cv
168.499 239.099 167.467 237.977 166.325 238.651 cv
166.452 237.933 166.52 237.249 166.551 236.536 cv
166.824 230.383 162.627 227.048 157.443 227.164 cv
cp
1 .823529 .631373 rgb
f
150.032 229.178 mo
148.113 231.559 147.567 234.161 148.493 238.91 cv
149.286 239.324 149.715 239.892 150.086 242.254 cv
150.656 242.397 150.903 242.426 151.423 242.586 cv
147.934 230.035 152.826 229.661 154.164 229.357 cv
155.252 229.111 159.727 229 160.826 229.193 cv
162.177 229.43 167.081 229.562 164.216 242.27 cv
164.728 242.084 164.972 242.043 165.535 241.873 cv
165.789 239.496 166.19 238.907 166.962 238.454 cv
167.651 233.665 166.73 231.292 164.944 228.809 cv
162.463 225.364 153.463 224.921 150.032 229.178 cv
cp
.235294 .235294 .231373 rgb
f
160.534 227.09 mo
161.192 227.076 161.944 227.101 162.37 227.603 cv
162.899 228.226 162.601 229.182 162.196 229.892 cv
160.556 232.768 157.944 235.468 154.171 235.691 cv
154.576 235.359 155.267 234.7 155.389 234.093 cv
153.378 235.057 151.039 235.318 148.865 234.821 cv
149.482 232.953 150.144 231.011 151.538 229.623 cv
152.671 228.496 154.201 227.835 155.764 227.499 cv
157.326 227.162 158.936 227.125 160.534 227.09 cv
cp
f
288.379 277.367 mo
287.727 284.155 288.973 293.824 288.322 299.836 cv
288.322 299.859 li
252.811 299.859 li
252.811 299.836 li
252.8 299.791 252.8 299.711 252.788 299.596 cv
252.64 298.19 252.605 296.59 252.617 294.887 cv
252.628 292.362 252.765 289.607 252.857 286.864 cv
252.971 283.401 253.028 279.961 252.72 277.069 cv
252.628 276.166 252.491 275.309 252.32 274.532 cv
251.519 270.92 251.2 266.314 250.148 257.994 cv
250.182 257.982 li
254.651 256.12 260.503 253.582 261.474 252.657 cv
263.36 253.388 268.618 253.594 270.561 253.811 cv
270.572 253.811 li
270.869 253.777 271.246 253.742 271.681 253.708 cv
274.046 253.514 278.058 253.274 279.658 252.657 cv
280.63 253.582 286.516 256.131 290.984 257.994 cv
289.933 266.314 289.613 270.92 288.813 274.532 cv
288.619 275.401 288.482 276.349 288.379 277.367 cv
.929412 .929412 .929412 rgb
f
269.286 263.16 mo
268.386 258.88 li
270.565 258.822 li
272.745 258.88 li
271.845 263.16 li
269.286 263.16 li
cp
.913725 .305882 .105882 rgb
f
269.286 263.16 mo
267.167 285.425 li
270.565 288.433 li
273.964 285.425 li
271.845 263.16 li
269.286 263.16 li
cp
.811765 .270588 .0941176 rgb
f
252.914 286.864 mo
255.257 299.836 li
255.257 299.859 li
244.251 299.859 li
244.251 299.836 li
243.222 284.315 li
244.456 276.281 246.936 267.377 250.148 257.971 cv
250.182 257.982 li
259.829 260.52 li
255.04 278.749 li
252.914 286.864 li
.929412 .929412 .929412 rgb
f
271.681 299.836 mo
244.251 299.836 li
238.81 281.629 li
240.045 273.595 243.657 264.547 250.148 257.971 cv
250.182 257.982 li
254.651 256.12 260.503 253.582 261.474 252.657 cv
263.36 253.388 271.686 281.075 271.686 281.075 cv
272.043 286.29 271.681 299.836 271.681 299.836 cv
.341176 .341176 .337255 rgb
f
271.067 299.836 mo
296.896 299.836 li
297.924 284.315 li
296.69 276.281 294.21 267.377 290.998 257.971 cv
290.964 257.982 li
286.495 256.12 280.643 253.582 279.672 252.657 cv
277.786 253.388 270.811 281.075 270.811 281.075 cv
270.454 286.29 271.067 299.836 271.067 299.836 cv
f
273.13 299.863 mo
252.814 299.863 li
252.814 299.861 252.813 299.86 252.813 299.859 cv
255.257 299.859 li
273.12 299.859 li
273.123 299.86 273.127 299.861 273.13 299.863 cv
.822745 .822745 .821176 rgb
f
273.12 299.859 mo
255.257 299.859 li
255.257 299.836 li
271.067 299.836 li
271.067 299.836 li
273.052 299.836 li
273.075 299.844 273.097 299.852 273.12 299.859 cv
.764706 .764706 .764706 rgb
f
255.257 299.859 mo
252.813 299.859 li
252.813 299.852 252.812 299.845 252.811 299.836 cv
255.257 299.836 li
255.257 299.859 li
f
271.067 299.836 mo
255.257 299.836 li
252.811 299.836 li
252.722 298.86 252.344 286.27 252.399 284.79 cv
252.589 279.391 253.34 263.109 253.607 263.109 cv
253.684 264.787 253.762 266.464 253.839 268.135 cv
254.063 272.909 254.316 277.802 256.177 282.196 cv
256.513 282.996 256.921 283.776 257.384 284.527 cv
259.364 287.728 262.424 290.311 266.061 290.929 cv
262.747 290.466 259.441 290.002 256.127 289.546 cv
260.075 293.172 265.773 296.899 271.034 299.073 cv
271.055 299.561 271.067 299.836 271.067 299.836 cv
.294118 .294118 .290196 rgb
f
273.052 299.836 mo
271.067 299.836 li
271.067 299.836 li
271.067 299.836 271.055 299.561 271.034 299.073 cv
271.716 299.355 272.39 299.61 273.052 299.836 cv
f
289.603 299.834 mo
278.619 299.834 li
282.207 298.62 284.299 291.357 285.478 287.391 cv
285.948 285.819 286.271 284.134 286.489 282.414 cv
287.401 275.204 286.426 267.461 286.257 265.257 cv
286.405 266.563 288.124 272.579 288.686 280.813 cv
288.763 281.922 289.751 298.887 289.603 299.834 cv
f
264.355 247.721 mo
264.394 249.609 li
264.394 249.619 li
264.423 251.633 li
264.423 251.643 li
264.443 252.543 li
264.559 259.011 li
268.393 258.934 li
270.465 258.895 li
270.475 258.895 li
270.64 258.885 li
272.537 258.847 li
276.478 258.769 li
276.652 252.534 li
276.672 251.74 li
276.73 249.735 li
276.73 249.726 li
276.778 248.07 li
264.355 247.721 li
cp
.94902 .780392 .6 rgb
f
270.475 224.56 mo
276.037 224.538 280.473 228.197 280.06 234.79 cv
280.012 235.553 279.926 236.286 279.775 237.054 cv
281.013 236.353 282.098 237.577 281.663 239.452 cv
281.356 240.774 280.712 242.549 279.98 242.816 cv
279.102 243.135 278.834 242.589 278.784 242.572 cv
278.392 244.477 278.233 246.178 277.554 247.189 cv
276.751 248.385 276.131 249.284 275.554 249.962 cv
274.247 251.497 273.161 251.878 270.664 251.894 cv
270.649 251.894 li
270.635 251.894 li
268.138 251.91 267.048 251.543 265.72 250.024 cv
265.135 249.355 264.504 248.463 263.685 247.277 cv
262.994 246.275 262.813 244.576 262.397 242.676 cv
262.347 242.694 262.086 243.244 261.204 242.935 cv
260.469 242.678 259.802 240.911 259.479 239.593 cv
259.02 237.724 260.089 236.486 261.335 237.172 cv
261.175 236.406 261.08 235.674 261.022 234.911 cv
260.525 228.324 264.914 224.609 270.475 224.56 cv
cp
1 .823529 .631373 rgb
f
278.487 226.472 mo
280.624 228.962 281.296 231.733 280.462 236.855 cv
279.625 237.325 279.184 237.949 278.865 240.493 cv
278.258 240.665 277.995 240.704 277.442 240.894 cv
280.765 227.321 275.508 227.083 274.064 226.803 cv
272.889 226.574 268.087 226.605 266.916 226.848 cv
265.476 227.147 260.222 227.452 263.717 240.981 cv
263.162 240.799 262.898 240.763 262.29 240.599 cv
261.938 238.059 261.489 237.441 260.646 236.981 cv
259.747 231.87 260.656 229.295 262.489 226.574 cv
265.033 222.797 274.668 222.024 278.487 226.472 cv
cp
.235294 .235294 .231373 rgb
f
267.159 224.584 mo
266.453 224.591 265.827 224.856 265.207 225.195 cv
264.351 225.665 262.161 228.839 262.618 229.586 cv
264.472 232.615 270.214 233.48 274.267 233.593 cv
273.821 233.251 273.059 232.567 272.908 231.921 cv
275.096 232.887 277.613 233.089 279.927 232.484 cv
279.203 230.502 278.429 228.442 276.888 227 cv
275.636 225.829 273.973 225.172 272.287 224.863 cv
270.6 224.554 268.873 224.569 267.159 224.584 cv
cp
f
264.579 262.574 mo
262.418 259.525 261.12 256.336 260.846 252.982 cv
264.414 250.997 li
265.07 254.084 267.279 257.044 270.565 258.836 cv
264.579 262.574 li
cp
.854902 .854902 .854902 rgb
f
276.552 262.574 mo
278.713 259.525 280.011 256.336 280.285 252.982 cv
276.717 250.997 li
276.061 254.084 273.852 257.044 270.565 258.836 cv
276.552 262.574 li
cp
f
271.681 281.07 mo
271.521 280.852 271.372 280.635 271.212 280.418 cv
271.075 280.235 270.949 280.064 270.812 279.881 cv
265.577 272.692 258.468 263.183 258.468 263.183 cv
258.468 263.183 262.469 261.103 262.183 260.794 cv
257.794 260.943 li
258.606 254.279 li
262.617 251.891 li
265.532 261.526 268.435 269.697 271.006 278.669 cv
271.143 279.138 271.281 279.618 271.406 280.098 cv
271.498 280.418 271.589 280.738 271.681 281.07 cv
cp
.235294 .235294 .231373 rgb
f
282.664 263.183 mo
282.664 263.183 276.207 272.189 271.406 280.098 cv
271.338 280.201 271.269 280.315 271.212 280.418 cv
271.075 280.235 270.949 280.064 270.812 279.881 cv
270.869 279.469 270.938 279.069 271.006 278.669 cv
272.652 268.897 275.612 261.48 278.515 251.891 cv
282.527 254.279 li
283.338 260.943 li
278.95 260.794 li
278.664 261.103 282.664 263.183 282.664 263.183 cv
cp
f
272.079 285.897 mo
272.079 286.39 271.679 286.79 271.186 286.79 cv
270.693 286.79 270.293 286.39 270.293 285.897 cv
270.293 285.404 270.693 285.004 271.186 285.004 cv
271.679 285.004 272.079 285.404 272.079 285.897 cv
cp
f
272.079 294.683 mo
272.079 295.176 271.679 295.576 271.186 295.576 cv
270.693 295.576 270.293 295.176 270.293 294.683 cv
270.293 294.19 270.693 293.79 271.186 293.79 cv
271.679 293.79 272.079 294.19 272.079 294.683 cv
cp
f
285.38 280.191 mo
278.141 280.191 li
278.141 278.435 li
285.38 278.435 li
285.38 280.191 li
cp
f
247.614 264.362 mo
248.269 264.186 248.659 263.512 248.483 262.856 cv
248.482 262.852 li
248.409 262.582 248.232 262.352 247.99 262.213 cv
247.747 262.074 247.46 262.038 247.19 262.112 cv
241.901 263.637 li
241.283 263.802 240.916 264.438 241.081 265.057 cv
241.091 265.092 li
241.247 265.675 241.847 266.022 242.431 265.866 cv
247.614 264.362 li
cp
.941176 .788235 .592157 rgb
f
256.272 299.901 mo
229.477 299.901 li
229.477 263.358 li
256.272 263.358 li
256.272 299.901 li
cp
.964706 .964706 .964706 rgb
f
240.502 279.986 mo
239.246 281.316 237.415 281.835 235.699 281.348 cv
233.982 280.862 232.642 279.443 232.182 277.626 cv
231.722 275.809 232.213 273.871 233.469 272.541 cv
234.726 271.211 236.557 270.692 238.273 271.179 cv
239.989 271.666 241.329 273.085 241.789 274.901 cv
242.249 276.718 241.758 278.656 240.502 279.986 cv
cp
1 .733333 0 rgb
f
240.502 279.986 mo
239.246 281.316 237.415 281.835 235.699 281.348 cv
233.982 280.862 232.642 279.443 232.182 277.626 cv
231.722 275.809 232.213 273.871 233.469 272.541 cv
234.452 271.501 235.786 270.957 237.142 271.002 cv
236.986 276.264 li
240.502 279.986 li
cp
0 .356863 .419608 rgb
f
240.502 279.986 mo
239.246 281.316 237.415 281.835 235.699 281.348 cv
233.982 280.862 232.642 279.443 232.182 277.626 cv
232.137 277.447 232.101 277.267 232.074 277.087 cv
236.986 276.264 li
240.502 279.986 li
cp
.811765 .270588 .0941176 rgb
f
247.247 271.066 mo
247.247 276.453 li
245.454 276.453 li
245.454 271.066 li
247.247 271.066 li
cp
.341176 .341176 .337255 rgb
f
249.389 267.959 mo
249.389 276.453 li
247.596 276.453 li
247.596 267.959 li
249.389 267.959 li
cp
0 .356863 .419608 rgb
f
251.53 267.171 mo
251.53 276.453 li
249.737 276.453 li
249.737 267.171 li
251.53 267.171 li
cp
.811765 .270588 .0941176 rgb
f
253.672 269.355 mo
253.672 276.453 li
251.879 276.453 li
251.879 269.355 li
253.672 269.355 li
cp
1 .733333 0 rgb
f
245.128 291.94 mo
241.627 291.94 li
241.488 291.94 241.375 291.821 241.375 291.674 cv
241.375 291.527 241.488 291.408 241.627 291.408 cv
245.128 291.408 li
245.267 291.408 245.38 291.527 245.38 291.674 cv
245.38 291.821 245.267 291.94 245.128 291.94 cv
cp
.439216 .435294 .435294 rgb
f
246.638 293.172 mo
241.627 293.172 li
241.488 293.172 241.375 293.053 241.375 292.906 cv
241.375 292.759 241.488 292.639 241.627 292.639 cv
246.638 292.639 li
246.777 292.639 246.889 292.759 246.889 292.906 cv
246.889 293.053 246.777 293.172 246.638 293.172 cv
cp
f
246.782 265.74 mo
232.35 265.74 li
232.211 265.74 232.098 265.621 232.098 265.474 cv
232.098 265.326 232.211 265.207 232.35 265.207 cv
246.782 265.207 li
246.921 265.207 247.034 265.326 247.034 265.474 cv
247.034 265.621 246.921 265.74 246.782 265.74 cv
cp
f
244.132 267.437 mo
232.35 267.437 li
232.211 267.437 232.098 267.318 232.098 267.17 cv
232.098 267.023 232.211 266.904 232.35 266.904 cv
244.132 266.904 li
244.271 266.904 244.384 267.023 244.384 267.17 cv
244.384 267.318 244.271 267.437 244.132 267.437 cv
cp
f
242.644 269.134 mo
232.35 269.134 li
232.211 269.134 232.098 269.015 232.098 268.868 cv
232.098 268.72 232.211 268.601 232.35 268.601 cv
242.644 268.601 li
242.783 268.601 242.895 268.72 242.895 268.868 cv
242.895 269.015 242.783 269.134 242.644 269.134 cv
cp
f
248.619 294.404 mo
241.627 294.404 li
241.488 294.404 241.375 294.285 241.375 294.138 cv
241.375 293.99 241.488 293.871 241.627 293.871 cv
248.619 293.871 li
248.758 293.871 248.871 293.99 248.871 294.138 cv
248.871 294.285 248.758 294.404 248.619 294.404 cv
cp
f
248.619 295.636 mo
241.627 295.636 li
241.488 295.636 241.375 295.517 241.375 295.369 cv
241.375 295.222 241.488 295.103 241.627 295.103 cv
248.619 295.103 li
248.758 295.103 248.871 295.222 248.871 295.369 cv
248.871 295.517 248.758 295.636 248.619 295.636 cv
cp
f
235.136 296.962 mo
234.804 296.909 li
234.75 296.47 li
236.769 292.253 li
239.713 291.388 li
241.178 288.609 li
244.02 288.291 li
247.762 285.585 li
248.12 286.14 li
244.245 288.942 li
241.572 289.241 li
240.138 291.96 li
237.202 292.822 li
235.136 296.962 li
cp
.87451 .286275 .215686 rgb
f
249.93 297.028 mo
234.645 297.028 li
234.645 285.758 li
234.855 285.758 li
234.855 296.805 li
249.93 296.805 li
249.93 297.028 li
cp
.341176 .341176 .337255 rgb
f
234.309 285.863 mo
234.75 284.12 li
235.191 285.863 li
234.309 285.863 li
cp
f
249.868 297.362 mo
251.44 296.916 li
249.868 296.47 li
249.868 297.362 li
cp
f
243.657 264.547 mo
243.653 265.164 244.149 265.667 244.766 265.672 cv
245.383 265.677 245.887 265.18 245.891 264.563 cv
245.909 262.145 li
245.914 261.528 245.418 261.024 244.801 261.019 cv
244.184 261.015 243.68 261.511 243.675 262.128 cv
243.657 264.547 li
cp
.980392 .847059 .67451 rgb
f
241.424 264.434 mo
241.419 265.104 241.915 265.651 242.532 265.655 cv
243.149 265.66 243.653 265.12 243.658 264.45 cv
243.678 261.823 li
243.683 261.153 243.187 260.606 242.569 260.602 cv
241.953 260.597 241.448 261.137 241.443 261.807 cv
241.424 264.434 li
cp
f
239.189 264.417 mo
239.184 265.087 239.68 265.634 240.297 265.639 cv
240.915 265.643 241.419 265.104 241.424 264.434 cv
241.443 261.807 li
241.448 261.137 240.952 260.59 240.335 260.585 cv
239.718 260.58 239.214 261.12 239.209 261.79 cv
239.189 264.417 li
cp
f
237.338 264.179 mo
237.333 264.735 237.745 265.189 238.257 265.193 cv
238.769 265.197 239.187 264.749 239.191 264.193 cv
239.207 262.014 li
239.212 261.458 238.8 261.004 238.288 261 cv
237.776 260.996 237.358 261.444 237.354 262 cv
237.338 264.179 li
cp
f
360.78 287.338 mo
332.875 287.338 li
332.875 239.48 li
360.78 239.48 li
360.78 287.338 li
.929412 .929412 .929412 rgb
f
359.379 237.741 mo
335.188 237.741 li
332.85 237.741 330.955 239.636 330.955 241.974 cv
330.955 286.945 li
330.955 289.283 332.85 291.178 335.188 291.178 cv
359.379 291.178 li
361.716 291.178 363.612 289.283 363.612 286.945 cv
363.612 241.974 li
363.612 239.636 361.716 237.741 359.379 237.741 cv
359.379 241.14 mo
359.838 241.14 360.212 241.514 360.212 241.974 cv
360.212 284.656 li
360.212 285.116 359.838 285.49 359.379 285.49 cv
335.188 285.49 li
334.728 285.49 334.354 285.116 334.354 284.656 cv
334.354 241.974 li
334.354 241.514 334.728 241.14 335.188 241.14 cv
359.379 241.14 li
.301961 .301961 .301961 rgb
f
348.416 239.594 mo
348.416 240.22 347.909 240.727 347.283 240.727 cv
346.657 240.727 346.15 240.22 346.15 239.594 cv
346.15 238.968 346.657 238.461 347.283 238.461 cv
347.909 238.461 348.416 238.968 348.416 239.594 cv
cp
.776471 .776471 .776471 rgb
f
348.912 288.322 mo
348.912 289.221 348.183 289.951 347.283 289.951 cv
346.384 289.951 345.654 289.221 345.654 288.322 cv
345.654 287.422 346.384 286.693 347.283 286.693 cv
348.183 286.693 348.912 287.422 348.912 288.322 cv
cp
f
342.164 289.892 mo
337.986 288.836 li
337.396 288.687 337.396 287.85 337.986 287.701 cv
342.164 286.645 li
342.534 286.552 342.893 286.831 342.893 287.213 cv
342.893 289.324 li
342.893 289.706 342.534 289.985 342.164 289.892 cv
cp
f
352.403 286.645 mo
356.58 287.701 li
357.17 287.85 357.17 288.687 356.58 288.836 cv
352.403 289.892 li
352.033 289.985 351.674 289.706 351.674 289.324 cv
351.674 287.213 li
351.674 286.831 352.033 286.552 352.403 286.645 cv
cp
f
339.494 271.274 mo
339.628 272.534 339.603 274.033 339.553 275.541 cv
339.529 276.261 339.502 276.975 339.48 277.675 cv
355.061 277.675 li
354.996 275.555 354.854 273.238 355.03 271.403 cv
355.075 270.96 355.134 270.547 355.219 270.168 cv
355.568 268.595 355.707 266.588 356.165 262.963 cv
354.218 262.151 351.654 261.041 351.23 260.637 cv
350.533 260.906 348.785 261.011 347.755 261.096 cv
347.565 261.11 347.401 261.125 347.272 261.14 cv
347.267 261.14 li
346.42 261.046 344.129 260.956 343.308 260.637 cv
342.885 261.041 340.335 262.146 338.388 262.958 cv
338.373 262.963 li
338.831 266.588 338.971 268.595 339.319 270.168 cv
339.394 270.507 339.454 270.88 339.494 271.274 cv
.929412 .929412 .929412 rgb
f
346.711 265.214 mo
346.319 263.349 li
347.269 263.324 li
348.218 263.349 li
347.826 265.214 li
346.711 265.214 li
cp
.913725 .305882 .105882 rgb
f
346.711 265.214 mo
345.788 274.914 li
347.269 276.225 li
348.749 274.914 li
347.826 265.214 li
346.711 265.214 li
cp
.811765 .270588 .0941176 rgb
f
339.963 277.675 mo
339.578 275.541 li
340.504 272.006 li
342.591 264.063 li
338.388 262.958 li
338.373 262.953 li
336.974 267.051 335.893 270.93 335.355 274.431 cv
335.57 277.675 li
339.963 277.675 li
.929412 .929412 .929412 rgb
f
347.817 277.675 mo
347.834 275.983 347.831 274.095 347.757 273.019 cv
347.757 273.019 344.129 260.956 343.308 260.637 cv
342.885 261.041 340.335 262.146 338.388 262.958 cv
338.373 262.953 li
336.974 267.051 335.893 270.93 335.355 274.431 cv
335.57 277.675 li
347.817 277.675 li
.341176 .341176 .337255 rgb
f
358.974 277.675 mo
359.189 274.431 li
358.651 270.93 357.57 267.051 356.171 262.953 cv
356.156 262.958 li
354.209 262.146 351.66 261.041 351.236 260.637 cv
350.415 260.956 347.376 273.019 347.376 273.019 cv
347.302 274.095 347.323 275.983 347.366 277.675 cv
358.974 277.675 li
f
342.127 277.675 mo
339.411 277.675 li
339.372 276.28 339.343 274.937 339.354 274.638 cv
339.437 272.286 339.764 265.191 339.88 265.191 cv
339.914 265.922 339.948 266.653 339.981 267.381 cv
340.079 269.461 340.189 271.593 341 273.508 cv
341.146 273.856 341.324 274.196 341.526 274.523 cv
342.388 275.918 343.722 277.043 345.306 277.312 cv
343.862 277.111 342.422 276.909 340.978 276.71 cv
341.329 277.032 341.721 277.355 342.127 277.675 cv
.294118 .294118 .290196 rgb
f
355.432 277.675 mo
353.164 277.675 li
353.408 276.983 353.606 276.308 353.766 275.771 cv
353.971 275.086 354.112 274.352 354.206 273.602 cv
354.604 270.461 354.179 267.088 354.106 266.127 cv
354.17 266.696 354.919 269.317 355.164 272.905 cv
355.182 273.171 355.321 275.536 355.432 277.675 cv
f
344.563 258.487 mo
344.58 259.31 li
344.58 259.314 li
344.593 260.191 li
344.593 260.196 li
344.601 260.588 li
344.652 263.406 li
346.322 263.372 li
347.225 263.356 li
347.229 263.356 li
347.301 263.351 li
348.128 263.334 li
349.845 263.301 li
349.921 260.584 li
349.929 260.238 li
349.955 259.365 li
349.955 259.36 li
349.976 258.639 li
344.563 258.487 li
cp
.94902 .780392 .6 rgb
f
347.23 248.396 mo
349.653 248.386 351.585 249.981 351.405 252.853 cv
351.385 253.186 351.347 253.505 351.281 253.84 cv
351.821 253.534 352.293 254.068 352.104 254.884 cv
351.97 255.46 351.69 256.234 351.371 256.35 cv
350.988 256.489 350.872 256.251 350.849 256.244 cv
350.679 257.074 350.61 257.815 350.314 258.255 cv
349.964 258.776 349.694 259.168 349.442 259.463 cv
348.873 260.132 348.4 260.298 347.312 260.305 cv
347.305 260.305 li
347.299 260.305 li
346.211 260.312 345.736 260.152 345.158 259.491 cv
344.903 259.199 344.628 258.81 344.271 258.294 cv
343.97 257.857 343.891 257.117 343.71 256.289 cv
343.688 256.297 343.575 256.536 343.19 256.402 cv
342.87 256.29 342.579 255.52 342.438 254.946 cv
342.238 254.132 342.704 253.592 343.247 253.891 cv
343.178 253.557 343.136 253.238 343.111 252.906 cv
342.894 250.036 344.806 248.417 347.23 248.396 cv
cp
1 .823529 .631373 rgb
f
350.72 249.229 mo
351.651 250.314 351.944 251.521 351.581 253.753 cv
351.216 253.958 351.024 254.229 350.885 255.338 cv
350.62 255.413 350.506 255.43 350.265 255.512 cv
351.713 249.599 349.422 249.495 348.793 249.373 cv
348.281 249.274 346.189 249.287 345.679 249.393 cv
345.051 249.523 342.762 249.656 344.285 255.551 cv
344.043 255.471 343.928 255.455 343.663 255.384 cv
343.51 254.277 343.314 254.008 342.947 253.808 cv
342.555 251.581 342.951 250.459 343.75 249.274 cv
344.858 247.628 349.056 247.291 350.72 249.229 cv
cp
.235294 .235294 .231373 rgb
f
345.785 248.407 mo
345.477 248.409 345.204 248.525 344.934 248.673 cv
344.561 248.877 343.607 250.26 343.806 250.586 cv
344.614 251.905 347.116 252.282 348.881 252.332 cv
348.687 252.183 348.355 251.885 348.29 251.603 cv
349.243 252.024 350.339 252.112 351.347 251.848 cv
351.032 250.985 350.695 250.087 350.023 249.459 cv
349.478 248.949 348.753 248.663 348.019 248.528 cv
347.284 248.393 346.532 248.4 345.785 248.407 cv
cp
f
344.661 264.958 mo
343.719 263.63 343.154 262.241 343.034 260.779 cv
344.589 259.915 li
344.875 261.259 345.837 262.549 347.269 263.33 cv
344.661 264.958 li
cp
.854902 .854902 .854902 rgb
f
349.877 264.958 mo
350.818 263.63 351.384 262.241 351.503 260.779 cv
349.949 259.915 li
349.663 261.259 348.701 262.549 347.269 263.33 cv
349.877 264.958 li
cp
f
347.755 273.017 mo
347.685 272.922 347.62 272.828 347.55 272.733 cv
347.376 272.499 li
345.096 269.367 341.998 265.224 341.998 265.224 cv
341.998 265.224 343.741 264.317 343.617 264.183 cv
341.704 264.248 li
342.058 261.345 li
343.806 260.304 li
345.076 264.502 346.34 268.062 347.461 271.971 cv
347.521 272.175 347.58 272.384 347.635 272.593 cv
347.675 272.733 347.715 272.872 347.755 273.017 cv
cp
.235294 .235294 .231373 rgb
f
352.54 265.224 mo
352.54 265.224 349.727 269.148 347.635 272.593 cv
347.55 272.733 li
347.376 272.499 li
347.401 272.32 347.431 272.145 347.461 271.971 cv
348.178 267.713 349.468 264.482 350.732 260.304 cv
352.48 261.345 li
352.834 264.248 li
350.922 264.183 li
350.797 264.317 352.54 265.224 352.54 265.224 cv
cp
f
347.928 275.12 mo
347.928 275.335 347.754 275.509 347.539 275.509 cv
347.324 275.509 347.15 275.335 347.15 275.12 cv
347.15 274.905 347.324 274.731 347.539 274.731 cv
347.754 274.731 347.928 274.905 347.928 275.12 cv
cp
f
353.723 272.634 mo
350.57 272.634 li
350.57 271.869 li
353.723 271.869 li
353.723 272.634 li
cp
f
381.015 274.444 mo
381.015 274.388 li
381.037 272.873 379.826 271.626 378.31 271.604 cv
356.11 271.287 li
354.594 271.265 353.348 272.476 353.326 273.992 cv
353.325 274.048 li
353.303 275.563 354.515 276.81 356.031 276.831 cv
378.231 277.149 li
379.746 277.171 380.993 275.959 381.015 274.444 cv
cp
1 .796078 .580392 rgb
f
380.935 279.988 mo
380.936 279.933 li
380.958 278.417 379.746 277.171 378.231 277.149 cv
368.006 277.003 li
366.49 276.981 365.243 278.192 365.222 279.708 cv
365.221 279.763 li
365.199 281.279 366.411 282.525 367.926 282.547 cv
378.151 282.694 li
379.667 282.715 380.914 281.504 380.935 279.988 cv
cp
f
394.197 276.235 mo
394.217 276.178 li
394.773 274.602 393.795 272.975 392.12 272.486 cv
385.704 270.539 379.723 267.97 374.254 264.911 cv
372.82 264.133 371.031 264.605 370.165 265.999 cv
370.133 266.05 li
369.269 267.441 369.721 269.273 371.238 270.108 cv
376.969 273.348 383.225 276.079 389.925 278.168 cv
391.691 278.701 393.642 277.809 394.197 276.235 cv
cp
.933333 .698039 .47451 rgb
f
380.856 285.533 mo
380.857 285.477 li
380.878 283.962 379.667 282.715 378.151 282.694 cv
369.58 282.571 li
368.064 282.549 366.818 283.761 366.796 285.276 cv
366.795 285.332 li
366.774 286.847 367.985 288.094 369.501 288.115 cv
378.072 288.238 li
379.588 288.26 380.834 287.049 380.856 285.533 cv
cp
1 .796078 .580392 rgb
f
380.781 290.764 mo
380.782 290.715 li
380.801 289.369 379.725 288.262 378.379 288.243 cv
370.766 288.134 li
369.42 288.114 368.313 289.19 368.294 290.536 cv
368.293 290.586 li
368.274 291.932 369.35 293.039 370.696 293.058 cv
378.309 293.167 li
379.655 293.186 380.762 292.111 380.781 290.764 cv
cp
f
396.886 285.355 mo
396.963 279.949 li
397.027 275.489 393.463 271.821 389.003 271.758 cv
382.398 271.663 li
382.09 293.221 li
388.695 293.316 li
393.155 293.38 396.822 289.816 396.886 285.355 cv
cp
.945098 .74902 .545098 rgb
f
404.771 290.66 mo
405.001 274.58 li
390.32 274.37 li
390.09 290.449 li
404.771 290.66 li
cp
f
383.092 293.235 mo
378.18 293.165 li
376.834 293.146 375.758 292.039 375.778 290.693 cv
375.778 290.643 li
375.798 289.297 376.904 288.221 378.251 288.241 cv
377.358 288.228 li
375.842 288.206 374.631 286.96 374.652 285.444 cv
374.653 285.389 li
374.675 283.873 375.921 282.662 377.437 282.683 cv
376.61 282.672 li
375.094 282.65 373.883 281.404 373.905 279.888 cv
373.906 279.832 li
373.927 278.316 375.174 277.105 376.69 277.127 cv
375.174 277.105 373.963 275.859 373.984 274.343 cv
373.985 274.288 li
374.007 272.772 375.253 271.561 376.769 271.582 cv
383.4 271.677 li
383.092 293.235 li
cp
f
406.525 291.716 mo
406.701 273.539 li
397.887 273.697 li
397.917 291.539 li
406.525 291.716 li
cp
.921569 .921569 .921569 rgb
f
421.36 292.909 mo
404.552 292.668 li
404.276 272.606 li
421.36 272.74 li
421.36 292.909 li
cp
.341176 .341176 .337255 rgb
f
413.598 289.75 mo
413.41 290.284 413.692 290.868 414.225 291.054 cv
414.758 291.241 415.342 290.96 415.529 290.427 cv
415.716 289.893 415.435 289.31 414.901 289.123 cv
414.368 288.936 413.784 289.217 413.598 289.75 cv
cp
.921569 .921569 .921569 rgb
f
410.281 289.703 mo
410.094 290.236 410.375 290.82 410.908 291.007 cv
411.442 291.194 412.025 290.913 412.212 290.379 cv
412.399 289.846 412.118 289.262 411.585 289.075 cv
411.051 288.888 410.467 289.169 410.281 289.703 cv
cp
f
406.991 289.656 mo
406.804 290.189 407.085 290.773 407.618 290.96 cv
408.152 291.147 408.736 290.866 408.923 290.332 cv
409.109 289.799 408.828 289.215 408.295 289.028 cv
407.762 288.841 407.178 289.122 406.991 289.656 cv
cp
f
377.221 256.3 mo
377.221 261.223 li
372.299 261.223 li
372.299 256.3 li
377.221 256.3 li
cp
372.531 254.024 mo
372.345 253.467 372.252 252.863 372.252 252.027 cv
372.252 244.921 377.825 244.272 377.825 236.19 cv
377.825 233.869 376.897 232.986 375.271 232.986 cv
373.646 232.986 372.717 233.869 372.717 236.19 cv
372.717 239.72 li
367.887 239.72 li
367.887 236.516 li
367.887 231.314 370.441 228.342 375.411 228.342 cv
380.38 228.342 382.934 231.314 382.934 236.516 cv
382.934 244.967 376.897 246.269 376.897 252.213 cv
376.897 252.817 376.943 253.42 377.082 254.024 cv
372.531 254.024 li
cp
.811765 .270588 .0941176 rgb
f
377.221 256.3 mo
377.221 261.223 li
372.299 261.223 li
372.299 256.3 li
377.221 256.3 li
cp
372.531 254.024 mo
372.345 253.467 372.252 252.863 372.252 252.027 cv
372.252 244.921 377.825 244.272 377.825 236.19 cv
377.825 233.869 376.897 232.986 375.271 232.986 cv
373.646 232.986 372.717 233.869 372.717 236.19 cv
372.717 239.72 li
367.887 239.72 li
367.887 236.516 li
367.887 231.314 370.441 228.342 375.411 228.342 cv
380.38 228.342 382.934 231.314 382.934 236.516 cv
382.934 244.967 376.897 246.269 376.897 252.213 cv
376.897 252.817 376.943 253.42 377.082 254.024 cv
372.531 254.024 li
cp
0 .356863 .419608 rgb
f
339.62 255.646 mo
339.62 257.881 li
337.385 257.881 li
337.385 255.646 li
339.62 255.646 li
cp
337.637 254.612 mo
337.342 249.279 li
337.342 243.123 li
339.661 243.123 li
339.661 249.279 li
339.366 254.612 li
337.637 254.612 li
cp
.811765 .270588 .0941176 rgb
f
304.045 131.008 mo
302.887 118.612 292.963 118.523 291.969 118.522 cv
290.967 118.542 281.05 118.806 280.081 131.223 cv
278.696 141.428 277.512 147.076 284.247 148.379 cv
285.475 148.743 287.444 148.887 288.124 148.971 cv
288.261 148.992 288.35 149.011 288.363 149.027 cv
289.109 149.017 li
290.29 149.005 li
296.036 148.958 li
296.05 148.944 296.134 148.918 296.266 148.902 cv
296.398 148.885 296.572 148.856 296.786 148.836 cv
297.681 148.728 299.159 148.55 300.138 148.236 cv
306.856 146.813 305.581 141.185 304.045 131.008 cv
.235294 .235294 .231373 rgb
f
278.298 177.381 mo
280.726 188.602 li
271.979 188.602 li
269.428 177.381 li
273.501 152.558 li
282.37 152.558 li
278.298 177.381 li
.929412 .929412 .929412 rgb
f
305.578 174.428 mo
313.561 173.41 li
310.14 152.558 li
301.271 152.558 li
305.578 174.428 li
f
273.501 152.56 mo
274.826 157.501 275.662 158.902 276.531 162.225 cv
276.487 162.344 li
276.466 162.431 li
276.411 162.692 li
276.357 162.865 276.324 163.039 276.292 163.213 cv
276.281 163.311 li
276.194 163.832 276.14 164.364 276.14 164.918 cv
276.14 166.427 276.487 167.85 277.085 169.066 cv
277.117 169.164 277.171 169.251 277.215 169.327 cv
277.66 170.163 278.225 170.912 278.887 171.531 cv
278.909 171.64 li
279.202 172.943 279.43 174.05 279.615 175.039 cv
279.658 175.223 279.702 175.419 279.734 175.614 cv
279.767 175.81 279.789 176.005 279.821 176.2 cv
279.854 176.439 279.886 176.689 279.93 176.917 cv
279.995 177.341 280.027 177.743 280.082 178.133 cv
280.103 178.329 280.125 178.524 280.125 178.709 cv
280.136 178.904 280.158 179.078 280.158 179.274 cv
280.212 179.784 280.223 180.294 280.223 180.805 cv
280.245 181.315 280.245 181.847 280.245 182.412 cv
280.245 184.041 li
280.245 184.269 280.245 184.508 280.223 184.747 cv
280.223 185.344 280.212 185.985 280.212 186.669 cv
280.19 187.038 280.19 187.44 280.201 187.852 cv
280.19 187.994 280.19 188.124 280.19 188.269 cv
280.115 188.381 280.054 188.49 279.98 188.602 cv
280.483 188.602 li
303.158 188.602 li
303.661 188.602 li
303.587 188.49 303.526 188.381 303.451 188.265 cv
303.451 188.124 303.451 187.994 303.44 187.852 cv
303.451 187.44 303.451 187.038 303.429 186.669 cv
303.429 185.985 303.418 185.344 303.418 184.747 cv
303.396 184.508 303.396 184.269 303.396 184.041 cv
303.396 182.412 li
303.396 181.847 303.396 181.315 303.418 180.805 cv
303.418 180.294 303.429 179.784 303.483 179.274 cv
303.483 179.078 303.505 178.904 303.516 178.709 cv
303.516 178.524 303.538 178.329 303.559 178.133 cv
303.614 177.743 303.646 177.341 303.711 176.917 cv
303.755 176.689 303.787 176.439 303.82 176.2 cv
303.853 176.005 303.874 175.81 303.907 175.614 cv
303.939 175.419 303.983 175.223 304.026 175.039 cv
304.211 174.05 304.439 172.943 304.732 171.64 cv
304.754 171.531 li
305.416 170.912 305.981 170.163 306.426 169.327 cv
306.47 169.251 306.524 169.164 306.556 169.066 cv
307.154 167.85 307.501 166.427 307.501 164.918 cv
307.501 164.364 307.447 163.832 307.36 163.311 cv
307.349 163.213 li
307.317 163.039 307.284 162.865 307.23 162.692 cv
307.175 162.431 li
307.154 162.344 li
307.11 162.203 li
307.979 158.902 308.815 157.501 310.14 152.56 cv
310.196 152.352 298.108 147.119 298.108 147.119 cv
292.005 145.063 li
285.533 147.119 li
273.501 152.56 li
f
280.483 188.602 mo
280.418 188.537 li
280.255 188.374 280.201 188.124 280.201 187.852 cv
280.201 187.483 280.288 187.07 280.299 186.756 cv
280.299 186.028 280.299 185.29 280.277 184.551 cv
280.277 184.225 280.266 183.911 280.245 183.585 cv
280.245 182.412 li
280.245 181.847 280.245 181.315 280.223 180.805 cv
280.223 180.294 280.212 179.784 280.158 179.274 cv
280.158 179.078 280.136 178.904 280.125 178.709 cv
280.125 178.524 280.103 178.329 280.082 178.133 cv
280.027 177.743 279.995 177.341 279.93 176.917 cv
279.886 176.689 279.854 176.439 279.821 176.2 cv
279.789 176.005 279.767 175.81 279.734 175.614 cv
279.702 175.419 279.658 175.223 279.615 175.039 cv
279.43 174.05 279.202 172.943 278.909 171.64 cv
278.887 171.531 li
278.225 170.912 277.66 170.163 277.215 169.327 cv
277.171 169.251 277.117 169.164 277.085 169.066 cv
276.487 167.85 276.14 166.427 276.14 164.918 cv
276.14 164.364 276.194 163.832 276.281 163.311 cv
276.292 163.213 li
276.324 163.039 276.357 162.865 276.411 162.692 cv
276.466 162.431 li
276.487 162.344 li
276.531 162.225 li
276.531 162.203 li
275.662 158.902 274.826 157.501 273.501 152.56 cv
273.686 152.419 273.892 152.278 274.12 152.136 cv
274.261 152.05 274.402 151.952 274.565 151.865 cv
275.152 151.507 275.825 151.148 276.552 150.79 cv
276.791 150.67 277.041 150.551 277.291 150.432 cv
277.508 150.323 277.736 150.225 277.964 150.117 cv
278.312 149.965 278.659 149.802 279.018 149.65 cv
279.398 149.487 279.789 149.324 280.19 149.15 cv
280.473 149.042 280.766 148.922 281.048 148.803 cv
281.722 148.542 282.395 148.281 283.068 148.021 cv
283.502 147.858 283.937 147.695 284.371 147.543 cv
284.762 147.391 285.153 147.25 285.533 147.119 cv
285.166 155.656 288.791 164.413 291.821 175.7 cv
294.85 164.413 298.475 155.656 298.108 147.119 cv
298.488 147.25 298.879 147.391 299.27 147.543 cv
299.704 147.695 300.139 147.858 300.573 148.021 cv
301.246 148.281 301.92 148.542 302.593 148.803 cv
302.875 148.922 303.168 149.042 303.451 149.15 cv
303.853 149.324 304.243 149.487 304.624 149.65 cv
304.982 149.802 305.329 149.965 305.677 150.117 cv
305.905 150.225 306.133 150.323 306.35 150.432 cv
306.6 150.551 306.85 150.67 307.089 150.79 cv
307.816 151.148 308.49 151.507 309.076 151.865 cv
309.239 151.952 309.38 152.05 309.521 152.136 cv
309.749 152.278 309.955 152.419 310.14 152.56 cv
308.815 157.501 307.979 158.902 307.11 162.203 cv
307.11 162.225 li
307.154 162.344 li
307.175 162.431 li
307.23 162.692 li
307.284 162.865 307.317 163.039 307.349 163.213 cv
307.36 163.311 li
307.447 163.832 307.501 164.364 307.501 164.918 cv
307.501 166.427 307.154 167.85 306.556 169.066 cv
306.524 169.164 306.47 169.251 306.426 169.327 cv
305.981 170.163 305.416 170.912 304.754 171.531 cv
304.732 171.64 li
304.439 172.943 304.211 174.05 304.026 175.039 cv
303.983 175.223 303.939 175.419 303.907 175.614 cv
303.874 175.81 303.853 176.005 303.82 176.2 cv
303.787 176.439 303.755 176.689 303.711 176.917 cv
303.646 177.341 303.614 177.743 303.559 178.133 cv
303.538 178.329 303.516 178.524 303.516 178.709 cv
303.505 178.904 303.483 179.078 303.483 179.274 cv
303.429 179.784 303.418 180.294 303.418 180.805 cv
303.396 181.315 303.396 181.847 303.396 182.412 cv
303.396 183.585 li
303.375 183.911 303.364 184.225 303.364 184.551 cv
303.342 185.29 303.342 186.028 303.342 186.756 cv
303.353 187.07 303.44 187.483 303.44 187.852 cv
303.44 188.124 303.386 188.374 303.223 188.537 cv
303.158 188.602 li
280.483 188.602 li
0 .356863 .419608 rgb
f
280.213 186.233 mo
280.21 186.218 li
280.212 185.974 280.216 185.736 280.219 185.504 cv
280.217 185.741 280.215 185.984 280.213 186.233 cv
280.226 184.709 mo
280.243 183.863 280.243 183.119 280.243 182.409 cv
280.243 181.992 280.243 181.596 280.236 181.211 cv
280.245 181.596 280.245 181.995 280.245 182.412 cv
280.245 184.041 li
280.245 184.257 280.245 184.483 280.226 184.709 cv
280.215 180.175 mo
280.205 179.875 280.186 179.575 280.155 179.276 cv
280.155 179.082 280.137 178.906 280.12 178.713 cv
280.067 178.132 280.014 177.551 279.926 176.918 cv
279.919 176.874 279.913 176.829 279.906 176.784 cv
279.914 176.829 279.921 176.874 279.93 176.917 cv
279.995 177.341 280.027 177.743 280.082 178.133 cv
280.103 178.329 280.125 178.524 280.125 178.709 cv
280.136 178.904 280.158 179.078 280.158 179.274 cv
280.19 179.574 280.207 179.874 280.215 180.175 cv
279.786 175.967 mo
279.738 175.667 279.679 175.356 279.609 175.035 cv
279.564 174.78 279.515 174.516 279.462 174.243 cv
279.516 174.517 279.567 174.782 279.615 175.039 cv
279.658 175.223 279.702 175.419 279.734 175.614 cv
279.754 175.732 279.769 175.849 279.786 175.967 cv
.822745 .822745 .821176 rgb
f
280.19 188.269 mo
280.19 187.922 280.19 187.582 280.194 187.257 cv
280.193 187.451 280.196 187.65 280.201 187.852 cv
280.19 187.994 280.19 188.124 280.19 188.269 cv
280.199 186.957 mo
280.202 186.859 280.204 186.762 280.208 186.667 cv
280.208 186.515 280.209 186.365 280.21 186.218 cv
280.213 186.233 li
280.213 186.376 280.212 186.522 280.212 186.669 cv
280.206 186.763 280.202 186.859 280.199 186.957 cv
279.085 172.432 mo
279.028 172.176 278.968 171.911 278.905 171.638 cv
278.905 171.623 li
278.909 171.64 li
278.97 171.912 279.029 172.176 279.085 172.432 cv
278.887 171.532 mo
278.861 171.507 278.834 171.482 278.808 171.456 cv
278.834 171.481 278.861 171.506 278.887 171.531 cv
278.887 171.532 li
277.107 169.124 mo
277.075 169.069 li
276.647 168.201 276.355 167.225 276.222 166.185 cv
276.358 167.222 276.658 168.197 277.085 169.066 cv
277.091 169.086 277.099 169.105 277.107 169.124 cv
276.316 163.086 mo
276.336 162.952 276.366 162.82 276.407 162.698 cv
276.422 162.603 276.438 162.508 276.467 162.425 cv
276.466 162.431 li
276.411 162.692 li
276.37 162.823 276.342 162.955 276.316 163.086 cv
276.512 162.277 mo
276.528 162.213 li
276.529 162.217 276.53 162.221 276.531 162.225 cv
276.512 162.277 li
.764706 .764706 .764706 rgb
f
280.483 188.602 mo
279.98 188.602 li
280.054 188.49 280.115 188.381 280.19 188.269 cv
280.19 188.269 li
280.19 188.124 280.19 187.994 280.201 187.852 cv
280.196 187.65 280.193 187.451 280.194 187.257 cv
280.196 187.155 280.197 187.055 280.199 186.957 cv
280.202 186.859 280.206 186.763 280.212 186.669 cv
280.212 186.522 280.213 186.376 280.213 186.233 cv
280.215 185.984 280.217 185.741 280.219 185.504 cv
280.222 185.246 280.225 184.994 280.225 184.749 cv
280.226 184.736 280.226 184.722 280.226 184.709 cv
280.245 184.483 280.245 184.257 280.245 184.041 cv
280.245 182.412 li
280.245 182.412 li
280.245 183.585 li
280.266 183.911 280.277 184.225 280.277 184.551 cv
280.299 185.29 280.299 186.028 280.299 186.756 cv
280.288 187.07 280.201 187.483 280.201 187.852 cv
280.201 188.124 280.255 188.374 280.418 188.537 cv
280.483 188.602 li
276.512 162.277 mo
276.512 162.277 li
276.531 162.225 li
276.53 162.221 276.529 162.217 276.528 162.213 cv
276.53 162.205 li
276.53 162.204 276.53 162.203 276.531 162.202 cv
276.531 162.203 276.531 162.203 276.531 162.203 cv
276.531 162.225 li
276.512 162.277 li
f
282.325 188.602 mo
280.483 188.602 li
280.418 188.537 li
280.255 188.374 280.201 188.124 280.201 187.852 cv
280.201 187.483 280.288 187.07 280.299 186.756 cv
280.299 186.028 280.299 185.29 280.277 184.551 cv
280.277 184.225 280.266 183.911 280.245 183.585 cv
280.245 182.412 li
280.245 182.412 li
280.245 181.995 280.245 181.596 280.236 181.211 cv
280.233 181.075 280.23 180.94 280.225 180.807 cv
280.225 180.596 280.222 180.385 280.215 180.175 cv
280.207 179.874 280.19 179.574 280.158 179.274 cv
280.158 179.078 280.136 178.904 280.125 178.709 cv
280.125 178.524 280.103 178.329 280.082 178.133 cv
280.027 177.743 279.995 177.341 279.93 176.917 cv
279.921 176.874 279.914 176.829 279.906 176.784 cv
279.877 176.594 279.849 176.395 279.821 176.196 cv
279.81 176.12 279.798 176.044 279.786 175.967 cv
279.769 175.849 279.754 175.732 279.734 175.614 cv
279.702 175.419 279.658 175.223 279.615 175.039 cv
279.567 174.782 279.516 174.517 279.462 174.243 cv
279.353 173.683 279.228 173.083 279.085 172.432 cv
279.029 172.176 278.97 171.912 278.909 171.64 cv
278.905 171.623 li
278.905 171.55 li
278.888 171.533 li
278.888 171.532 278.888 171.532 278.887 171.532 cv
278.887 171.531 li
278.861 171.506 278.834 171.481 278.808 171.456 cv
278.191 170.856 277.655 170.142 277.216 169.315 cv
277.107 169.124 li
277.099 169.105 277.091 169.086 277.085 169.066 cv
276.658 168.197 276.358 167.222 276.222 166.185 cv
276.17 165.771 276.142 165.347 276.142 164.915 cv
276.142 164.37 276.195 163.824 276.283 163.314 cv
276.301 163.208 li
276.305 163.168 276.31 163.127 276.316 163.086 cv
276.342 162.955 276.37 162.823 276.411 162.692 cv
276.466 162.431 li
276.467 162.425 li
276.47 162.416 276.473 162.407 276.477 162.399 cv
276.494 162.346 li
276.512 162.277 li
276.531 162.225 li
276.531 162.203 li
276.531 162.203 276.531 162.203 276.531 162.202 cv
276.601 161.992 276.671 161.764 276.758 161.554 cv
276.741 161.783 li
276.723 161.959 276.821 165.818 278.43 168.154 cv
280.009 170.445 282.39 171.973 285.118 171.973 cv
286.348 171.973 287.49 171.657 288.544 171.113 cv
288.405 171.186 288.266 171.411 288.145 171.515 cv
287.986 171.673 287.828 171.814 287.67 171.937 cv
287.212 172.289 285.611 173.046 285.329 173.187 cv
284.836 173.451 284.361 173.803 283.956 174.208 cv
283.164 175 282.601 176.02 282.232 177.094 cv
281.827 178.22 281.598 179.417 281.457 180.596 cv
281.316 181.669 282.654 186.615 282.408 188.286 cv
282.391 188.419 282.358 188.517 282.325 188.602 cv
288.544 171.113 mo
288.546 171.112 288.548 171.111 288.55 171.11 cv
288.548 171.111 288.546 171.112 288.544 171.113 cv
.0235294 .309804 .356863 rgb
f
303.451 188.265 mo
303.451 188.265 303.451 188.265 303.451 188.265 cv
303.451 188.124 303.451 187.994 303.44 187.852 cv
303.445 187.65 303.448 187.451 303.447 187.257 cv
303.451 187.581 303.451 187.92 303.451 188.265 cv
303.442 186.957 mo
303.439 186.859 303.435 186.763 303.429 186.669 cv
303.429 186.265 303.425 185.877 303.422 185.504 cv
303.427 185.876 303.433 186.262 303.433 186.667 cv
303.437 186.762 303.439 186.859 303.442 186.957 cv
303.415 184.709 mo
303.396 184.483 303.396 184.257 303.396 184.041 cv
303.396 183.585 li
303.396 183.585 li
303.396 182.412 li
303.396 181.99 303.396 181.586 303.406 181.196 cv
303.398 181.585 303.398 181.987 303.398 182.409 cv
303.398 183.119 303.398 183.863 303.415 184.709 cv
303.426 180.175 mo
303.435 179.874 303.451 179.574 303.483 179.274 cv
303.483 179.078 303.505 178.904 303.516 178.709 cv
303.516 178.524 303.538 178.329 303.559 178.133 cv
303.614 177.743 303.646 177.341 303.711 176.917 cv
303.72 176.874 303.728 176.829 303.735 176.784 cv
303.728 176.829 303.722 176.874 303.715 176.918 cv
303.627 177.551 303.574 178.132 303.521 178.713 cv
303.504 178.906 303.486 179.082 303.486 179.276 cv
303.455 179.576 303.436 179.875 303.426 180.175 cv
303.855 175.967 mo
303.872 175.849 303.887 175.732 303.907 175.614 cv
303.939 175.419 303.983 175.223 304.026 175.039 cv
304.073 174.788 304.123 174.53 304.176 174.262 cv
304.124 174.529 304.076 174.786 304.032 175.035 cv
303.962 175.357 303.903 175.667 303.855 175.967 cv
304.55 172.46 mo
304.608 172.195 304.669 171.922 304.732 171.64 cv
304.736 171.622 li
304.736 171.638 li
304.671 171.921 304.609 172.195 304.55 172.46 cv
304.754 171.532 mo
304.754 171.531 li
304.781 171.506 304.808 171.481 304.834 171.455 cv
304.807 171.481 304.781 171.507 304.754 171.532 cv
.822745 .822745 .821176 rgb
f
306.534 169.124 mo
306.542 169.105 306.55 169.086 306.556 169.066 cv
306.984 168.195 307.284 167.219 307.419 166.18 cv
307.288 167.221 306.994 168.199 306.566 169.069 cv
306.534 169.124 li
307.325 163.086 mo
307.299 162.954 307.271 162.823 307.23 162.692 cv
307.175 162.431 li
307.174 162.424 li
307.203 162.507 307.219 162.602 307.235 162.698 cv
307.275 162.82 307.305 162.951 307.325 163.086 cv
307.113 162.211 mo
307.11 162.203 li
307.11 162.203 307.11 162.203 307.11 162.203 cv
307.111 162.203 307.111 162.204 307.111 162.205 cv
307.113 162.211 li
.764706 .764706 .764706 rgb
f
303.661 188.602 mo
303.158 188.602 li
303.223 188.537 li
303.386 188.374 303.44 188.124 303.44 187.852 cv
303.44 187.483 303.353 187.07 303.342 186.756 cv
303.342 186.028 303.342 185.29 303.364 184.551 cv
303.364 184.225 303.375 183.911 303.396 183.585 cv
303.396 184.041 li
303.396 184.257 303.396 184.483 303.415 184.709 cv
303.415 184.722 303.415 184.736 303.416 184.749 cv
303.416 184.994 303.419 185.246 303.422 185.504 cv
303.425 185.877 303.429 186.265 303.429 186.669 cv
303.435 186.763 303.439 186.859 303.442 186.957 cv
303.444 187.055 303.446 187.155 303.447 187.257 cv
303.448 187.451 303.445 187.65 303.44 187.852 cv
303.451 187.994 303.451 188.124 303.451 188.265 cv
303.451 188.265 303.451 188.265 303.451 188.265 cv
303.451 188.266 303.451 188.268 303.451 188.269 cv
303.526 188.381 303.587 188.49 303.661 188.602 cv
307.129 162.277 mo
307.11 162.225 li
307.11 162.203 li
307.11 162.203 li
307.113 162.211 li
307.129 162.277 li
f
303.158 188.602 mo
301.316 188.602 li
301.283 188.517 301.25 188.419 301.234 188.286 cv
300.987 186.615 302.325 181.669 302.184 180.596 cv
302.043 179.417 301.814 178.22 301.409 177.094 cv
301.04 176.02 300.477 175 299.685 174.208 cv
299.28 173.803 298.805 173.451 298.312 173.187 cv
298.031 173.046 296.429 172.289 295.972 171.937 cv
295.813 171.814 295.655 171.673 295.496 171.515 cv
295.375 171.411 295.236 171.186 295.097 171.113 cv
296.151 171.657 297.293 171.973 298.523 171.973 cv
301.251 171.973 303.633 170.445 305.211 168.154 cv
306.82 165.818 306.918 161.959 306.9 161.783 cv
306.883 161.554 li
306.97 161.764 307.041 161.992 307.11 162.203 cv
307.11 162.203 307.11 162.203 307.11 162.203 cv
307.11 162.203 li
307.11 162.225 li
307.129 162.277 li
307.147 162.346 li
307.164 162.399 li
307.168 162.407 307.171 162.416 307.174 162.424 cv
307.175 162.431 li
307.23 162.692 li
307.271 162.823 307.299 162.954 307.325 163.086 cv
307.331 163.126 307.336 163.167 307.34 163.208 cv
307.358 163.314 li
307.446 163.824 307.499 164.37 307.499 164.915 cv
307.499 165.345 307.472 165.768 307.419 166.18 cv
307.284 167.219 306.984 168.195 306.556 169.066 cv
306.55 169.086 306.542 169.105 306.534 169.124 cv
306.425 169.315 li
305.987 170.142 305.451 170.855 304.834 171.455 cv
304.808 171.481 304.781 171.506 304.754 171.531 cv
304.754 171.532 li
304.754 171.532 304.753 171.532 304.753 171.533 cv
304.736 171.55 li
304.736 171.622 li
304.732 171.64 li
304.669 171.922 304.608 172.195 304.55 172.46 cv
304.408 173.107 304.284 173.705 304.176 174.262 cv
304.123 174.53 304.073 174.788 304.026 175.039 cv
303.983 175.223 303.939 175.419 303.907 175.614 cv
303.887 175.732 303.872 175.849 303.855 175.967 cv
303.843 176.044 303.831 176.121 303.82 176.196 cv
303.792 176.395 303.764 176.594 303.735 176.784 cv
303.728 176.829 303.72 176.874 303.711 176.917 cv
303.646 177.341 303.614 177.743 303.559 178.133 cv
303.538 178.329 303.516 178.524 303.516 178.709 cv
303.505 178.904 303.483 179.078 303.483 179.274 cv
303.451 179.574 303.435 179.874 303.426 180.175 cv
303.419 180.385 303.416 180.596 303.416 180.807 cv
303.411 180.936 303.408 181.065 303.406 181.196 cv
303.396 181.586 303.396 181.99 303.396 182.412 cv
303.396 183.585 li
303.396 183.585 li
303.375 183.911 303.364 184.225 303.364 184.551 cv
303.342 185.29 303.342 186.028 303.342 186.756 cv
303.353 187.07 303.44 187.483 303.44 187.852 cv
303.44 188.124 303.386 188.374 303.223 188.537 cv
303.158 188.602 li
295.097 171.113 mo
295.095 171.112 295.093 171.111 295.092 171.11 cv
295.093 171.111 295.095 171.112 295.097 171.113 cv
.0235294 .309804 .356863 rgb
f
297.15 147.232 mo
296.689 155.088 287.578 155.016 286.549 147.242 cv
286.549 140.52 li
297.165 140.52 li
297.15 147.232 li
.94902 .780392 .6 rgb
f
292.182 122.107 mo
291.933 122.111 li
287.189 122.239 283.455 125.961 283.592 130.423 cv
283.616 131.195 283.689 132.077 283.824 132.999 cv
283.637 132.888 283.444 132.841 283.252 132.881 cv
282.501 133.036 282.112 134.386 282.376 135.9 cv
282.594 137.121 283.169 138.065 283.78 138.3 cv
283.921 138.359 284.066 138.375 284.21 138.343 cv
284.347 138.29 li
284.931 140.65 285.652 142.494 286.407 143.356 cv
287.376 144.464 288.055 145.306 288.697 145.94 cv
289.665 146.9 290.536 147.374 292.182 147.529 cv
293.827 147.374 294.698 146.9 295.666 145.94 cv
296.308 145.306 296.987 144.464 297.957 143.356 cv
298.712 142.494 299.432 140.65 300.017 138.29 cv
300.154 138.343 li
300.298 138.375 300.443 138.359 300.583 138.3 cv
301.194 138.065 301.769 137.121 301.987 135.9 cv
302.251 134.386 301.862 133.036 301.111 132.881 cv
300.92 132.841 300.726 132.888 300.539 132.999 cv
300.674 132.077 300.748 131.195 300.771 130.423 cv
300.909 125.961 297.174 122.239 292.43 122.111 cv
292.182 122.107 li
cp
1 .823529 .631373 rgb
f
302.657 128.38 mo
302.295 128.839 301.941 129.233 301.571 129.555 cv
296.322 134.232 290.381 125.45 284.971 127.1 cv
283.908 127.422 282.87 128.146 281.856 129.451 cv
282.33 125.335 li
288.626 119.056 293.721 117.622 301.417 124.279 cv
302.657 128.38 li
cp
.235294 .235294 .231373 rgb
f
287.818 148.192 mo
287.818 148.172 li
287.828 148.172 li
287.818 148.192 li
.905882 .745098 .576471 rgb
f
284.047 126.116 mo
285.648 125.73 287.347 126.255 288.763 127.096 cv
290.178 127.937 291.385 129.081 292.691 130.084 cv
293.996 131.087 295.466 131.975 297.101 132.172 cv
295.869 131.797 294.932 130.801 294.155 129.774 cv
293.378 128.746 292.682 127.629 291.673 126.829 cv
290.518 125.913 289.029 125.487 287.557 125.433 cv
286.084 125.38 284.619 125.677 283.203 126.084 cv
284.047 126.116 li
cp
.235294 .235294 .231373 rgb
f
283.688 138.453 mo
282.979 138.593 li
281.964 138.803 280.923 133.737 281.977 133.518 cv
282.686 133.378 li
283.519 133.219 284.48 138.301 283.688 138.453 cv
cp
.439216 .435294 .435294 rgb
f
282.988 135.833 mo
283.191 136.638 282.902 137.405 282.343 137.546 cv
281.785 137.687 281.167 137.149 280.964 136.344 cv
280.761 135.539 281.049 134.772 281.608 134.631 cv
282.167 134.49 282.785 135.029 282.988 135.833 cv
cp
f
290.366 143.806 mo
283.328 143.806 282.68 137.09 282.675 137.021 cv
283.375 136.962 li
283.397 137.219 283.983 143.271 290.609 143.101 cv
290.625 143.804 li
290.366 143.806 li
cp
f
294.395 143.455 mo
294.395 144.021 293.936 144.48 293.37 144.48 cv
290.91 144.48 li
290.343 144.48 289.884 144.021 289.884 143.455 cv
289.884 142.889 290.343 142.43 290.91 142.43 cv
293.37 142.43 li
293.936 142.43 294.395 142.889 294.395 143.455 cv
cp
f
300.333 138.453 mo
301.043 138.593 li
302.058 138.803 303.099 133.737 302.045 133.518 cv
301.335 133.378 li
300.502 133.219 299.542 138.301 300.333 138.453 cv
cp
f
301.034 135.833 mo
300.831 136.638 301.12 137.405 301.678 137.546 cv
302.237 137.687 302.855 137.149 303.058 136.344 cv
303.261 135.539 302.972 134.772 302.414 134.631 cv
301.855 134.49 301.237 135.029 301.034 135.833 cv
cp
f
301.485 184.928 mo
305.453 187.374 li
310.578 182.053 312.505 177.905 313.561 173.41 cv
305.578 174.428 li
301.485 184.928 li
cp
.929412 .929412 .929412 rgb
f
296.48 182.878 mo
297.015 183.077 297.544 183.216 298.059 183.291 cv
298.881 183.41 299.835 183.51 300.709 183.515 cv
300.882 183.516 299.742 184.588 299.349 184.64 cv
298.724 184.724 298.457 184.767 297.834 184.668 cv
297.211 184.569 296.209 184.54 295.835 184.032 cv
295.578 183.681 295.564 183.094 295.813 182.92 cv
295.966 182.813 296.305 182.813 296.48 182.878 cv
cp
.94902 .780392 .6 rgb
f
300.709 183.515 mo
296.487 184.683 li
292.354 187.154 li
299.923 186.964 li
301.161 187.571 303.466 187.012 304.951 187.065 cv
305.96 187.1 306.179 187.651 305.442 185.844 cv
304.806 184.285 302.604 183.912 300.709 183.515 cv
cp
1 .823529 .631373 rgb
f
290.109 185.305 mo
285.976 166.437 li
285.775 165.523 284.872 164.782 283.958 164.782 cv
258.819 164.782 li
257.905 164.782 257.326 165.523 257.526 166.437 cv
261.659 185.305 li
261.86 186.219 262.763 186.96 263.677 186.96 cv
288.816 186.96 li
289.73 186.96 290.309 186.219 290.109 185.305 cv
cp
.235294 .235294 .231373 rgb
f
287.928 186.96 mo
262.789 186.96 li
261.875 186.96 260.971 186.219 260.771 185.305 cv
256.638 166.437 li
256.438 165.523 257.017 164.782 257.931 164.782 cv
283.07 164.782 li
283.984 164.782 284.887 165.523 285.087 166.437 cv
289.22 185.305 li
289.421 186.219 288.842 186.96 287.928 186.96 cv
cp
.341176 .341176 .337255 rgb
f
274.013 175.871 mo
274.218 176.807 273.625 177.566 272.688 177.566 cv
271.752 177.566 270.826 176.807 270.621 175.871 cv
270.416 174.934 271.009 174.175 271.946 174.175 cv
272.882 174.175 273.807 174.934 274.013 175.871 cv
cp
1 1 1 rgb
f
305.867 188.602 mo
299.044 188.602 li
264.364 188.602 li
264.364 186.96 li
305.867 186.96 li
305.867 188.602 li
cp
.341176 .341176 .337255 rgb
f
290.041 186.96 mo
264.364 186.96 li
264.364 188.602 li
290.041 188.602 li
290.041 186.96 li
cp
.235294 .235294 .231373 rgb
f
299.689 401.738 mo
299.689 359.804 li
291.222 359.804 li
291.222 401.738 li
299.689 401.738 li
cp
1 .733333 0 rgb
f
288.783 401.738 mo
288.783 373.602 li
280.315 373.602 li
280.315 401.738 li
288.783 401.738 li
cp
f
277.876 401.738 mo
277.876 381.84 li
269.409 381.84 li
269.409 401.738 li
277.876 401.738 li
cp
f
266.97 401.738 mo
266.97 388.724 li
258.502 388.724 li
258.502 401.738 li
266.97 401.738 li
cp
f
256.063 401.738 mo
256.063 394.047 li
247.596 394.047 li
247.596 401.738 li
256.063 401.738 li
cp
f
265.561 368.375 mo
262.806 370.374 258.951 369.761 256.952 367.005 cv
254.953 364.249 255.566 360.395 258.322 358.396 cv
261.077 356.397 264.932 357.01 266.931 359.766 cv
268.93 362.521 268.317 366.376 265.561 368.375 cv
cp
271.057 363.698 mo
273.557 362.072 li
272.893 359.297 li
269.928 358.98 li
268.608 357.16 li
269.226 354.243 li
266.795 352.751 li
264.473 354.623 li
262.254 354.269 li
260.628 351.769 li
257.853 352.434 li
257.536 355.399 li
255.716 356.719 li
252.799 356.1 li
251.307 358.532 li
253.179 360.853 li
252.826 363.073 li
250.326 364.699 li
250.99 367.473 li
253.955 367.791 li
255.275 369.61 li
254.656 372.528 li
257.088 374.02 li
259.409 372.148 li
261.629 372.501 li
263.255 375.001 li
266.029 374.337 li
266.347 371.372 li
268.166 370.052 li
271.084 370.67 li
272.576 368.239 li
270.704 365.917 li
271.057 363.698 li
cp
f
259.21 359.62 mo
257.13 361.129 256.667 364.037 258.176 366.117 cv
259.685 368.196 262.593 368.659 264.673 367.151 cv
266.752 365.642 267.215 362.733 265.707 360.654 cv
264.198 358.574 261.289 358.111 259.21 359.62 cv
cp
0 .356863 .419608 rgb
f
294.11 346.118 mo
284.182 366.271 268.072 380.378 247.493 387.017 cv
247.493 390.179 li
269.307 383.416 286.357 368.646 296.802 347.444 cv
294.11 346.118 li
cp
.811765 .270588 .0941176 rgb
f
298.052 351.372 mo
301.328 334.859 li
290.233 347.521 li
298.052 351.372 li
cp
f
389.69 336.921 mo
389.143 341.156 li
388.262 341.251 387.495 340.939 386.836 340.246 cv
389.327 336.778 li
389.69 336.921 li
cp
1 .823529 .631373 rgb
f
389.101 341.264 mo
381.924 359.466 li
381.153 359.162 li
388.329 340.96 li
388.62 340.222 389.392 340.526 389.101 341.264 cv
cp
0 .356863 .419608 rgb
f
388.329 340.96 mo
381.153 359.162 li
380.381 358.858 li
387.558 340.656 li
387.842 339.936 388.613 340.24 388.329 340.96 cv
cp
f
387.558 340.656 mo
380.381 358.858 li
379.61 358.554 li
386.786 340.351 li
387.056 339.668 387.827 339.972 387.558 340.656 cv
cp
f
390.152 335.684 mo
389.668 336.912 li
389.327 336.778 li
389.811 335.549 li
390.152 335.684 li
cp
.235294 .235294 .231373 rgb
f
379.52 337.091 mo
346.548 341.236 li
351.961 384.3 li
384.933 380.156 li
379.52 337.091 li
cp
.776471 .776471 .776471 rgb
f
381.689 378.768 mo
381.935 378.7 382.087 378.472 382.028 378.259 cv
370.034 334.874 li
369.976 334.662 369.728 334.544 369.482 334.612 cv
340.501 342.623 li
340.256 342.691 340.104 342.92 340.163 343.132 cv
352.156 386.517 li
352.215 386.73 352.462 386.848 352.708 386.78 cv
381.689 378.768 li
cp
.929412 .929412 .929412 rgb
f
359.646 352.257 mo
362.773 346.741 li
361.083 340.63 li
359.518 341.118 358.218 342.165 357.406 343.598 cv
356.559 345.092 356.344 346.827 356.802 348.483 cv
357.241 350.07 358.247 351.403 359.646 352.257 cv
cp
1 .694118 0 rgb
f
361.492 340.517 mo
363.149 346.508 li
369.14 344.852 li
368.652 343.287 367.605 341.986 366.172 341.174 cv
364.74 340.362 363.086 340.132 361.492 340.517 cv
cp
.341176 .341176 .337255 rgb
f
363.551 346.837 mo
367.173 348.89 li
368.697 349.754 li
369.427 348.366 369.622 346.786 369.253 345.261 cv
363.551 346.837 li
cp
.901961 .247059 .0705882 rgb
f
363.081 347.059 mo
360.016 352.466 li
361.467 353.228 363.127 353.407 364.714 352.968 cv
366.302 352.529 367.634 351.523 368.488 350.124 cv
363.081 347.059 li
cp
0 .356863 .419608 rgb
f
375.732 366.187 mo
372.127 353.146 li
368.263 354.214 li
371.868 367.255 li
375.732 366.187 li
cp
f
370.736 367.568 mo
367.777 356.862 li
363.912 357.93 li
366.872 368.636 li
370.736 367.568 li
cp
f
365.74 368.949 mo
363.962 362.517 li
360.098 363.585 li
361.876 370.017 li
365.74 368.949 li
cp
f
360.744 370.33 mo
358.314 361.54 li
354.45 362.608 li
356.88 371.398 li
360.744 370.33 li
cp
f
355.748 371.711 mo
352.608 360.352 li
348.743 361.42 li
351.884 372.78 li
355.748 371.711 li
cp
f
347.301 349.781 mo
349.046 343.059 li
353.995 347.931 li
352.45 348.358 li
354.621 356.213 li
350.954 357.227 li
348.782 349.372 li
347.301 349.781 li
cp
.901961 .247059 .0705882 rgb
f
376.661 369.545 mo
352.812 376.138 li
352.559 375.222 li
376.408 368.629 li
376.661 369.545 li
cp
.341176 .341176 .337255 rgb
f
377.238 371.631 mo
353.389 378.224 li
353.136 377.308 li
376.984 370.715 li
377.238 371.631 li
cp
f
377.815 373.718 mo
353.966 380.311 li
353.713 379.395 li
377.561 372.802 li
377.815 373.718 li
cp
f
378.391 375.804 mo
354.543 382.397 li
354.289 381.481 li
378.138 374.888 li
378.391 375.804 li
cp
f
361.866 403.788 mo
360.261 403.788 358.969 402.484 358.969 400.879 cv
358.969 371.644 li
358.969 370.147 360.089 368.908 361.543 368.735 cv
361.662 368.725 361.77 368.725 361.866 368.725 cv
406.027 368.725 li
406.124 368.725 406.232 368.725 406.35 368.735 cv
407.805 368.908 408.925 370.147 408.925 371.644 cv
408.925 400.879 li
408.925 402.484 407.632 403.788 406.027 403.788 cv
361.866 403.788 li
cp
.235294 .235294 .231373 rgb
f
373.182 387.167 mo
370.684 387.167 368.293 386.163 366.546 384.377 cv
363.11 380.864 358.969 376.588 358.969 376.588 cv
358.969 371.644 li
358.969 370.147 360.089 368.908 361.543 368.735 cv
361.662 368.725 361.77 368.725 361.866 368.725 cv
406.027 368.725 li
406.124 368.725 406.232 368.725 406.35 368.735 cv
407.805 368.908 408.925 370.147 408.925 371.644 cv
408.925 376.588 li
408.925 376.588 404.784 380.864 401.348 384.377 cv
399.601 386.163 397.21 387.167 394.712 387.167 cv
373.182 387.167 li
cp
.341176 .341176 .337255 rgb
f
382.902 392.215 mo
382.169 392.215 381.575 391.621 381.575 390.887 cv
381.575 382.798 li
386.319 382.798 li
386.319 390.887 li
386.319 391.621 385.724 392.215 384.991 392.215 cv
382.902 392.215 li
cp
.701961 .701961 .701961 rgb
f
381.221 388.646 mo
381.221 387.436 li
386.673 387.436 li
386.673 388.646 li
381.221 388.646 li
cp
.6 .6 .6 rgb
f
380.513 386.261 mo
380.005 386.261 379.593 385.849 379.593 385.341 cv
379.593 383.719 li
379.593 383.21 380.005 382.798 380.513 382.798 cv
387.381 382.798 li
387.889 382.798 388.301 383.21 388.301 383.719 cv
388.301 385.341 li
388.301 385.849 387.889 386.261 387.381 386.261 cv
380.513 386.261 li
cp
f
382.874 391.649 mo
382.46 391.649 382.124 391.313 382.124 390.898 cv
382.124 388.646 li
385.77 388.646 li
385.77 390.898 li
385.77 391.313 385.434 391.649 385.02 391.649 cv
382.874 391.649 li
cp
1 1 1 rgb
f
381.628 384.586 mo
381.628 384.909 381.367 385.17 381.044 385.17 cv
380.721 385.17 380.46 384.909 380.46 384.586 cv
380.46 384.264 380.721 384.002 381.044 384.002 cv
381.367 384.002 381.628 384.264 381.628 384.586 cv
cp
.301961 .301961 .301961 rgb
f
386.266 384.586 mo
386.266 384.909 386.527 385.17 386.85 385.17 cv
387.172 385.17 387.434 384.909 387.434 384.586 cv
387.434 384.264 387.172 384.002 386.85 384.002 cv
386.527 384.002 386.266 384.264 386.266 384.586 cv
cp
f
382.832 389.471 mo
382.7 389.471 382.593 389.364 382.593 389.232 cv
382.593 389.101 382.7 388.994 382.832 388.994 cv
385.062 388.994 li
385.194 388.994 385.301 389.101 385.301 389.232 cv
385.301 389.364 385.194 389.471 385.062 389.471 cv
382.832 389.471 li
cp
.6 .6 .6 rgb
f
382.832 390.386 mo
382.7 390.386 382.593 390.279 382.593 390.147 cv
382.593 390.015 382.7 389.908 382.832 389.908 cv
385.062 389.908 li
385.194 389.908 385.301 390.015 385.301 390.147 cv
385.301 390.279 385.194 390.386 385.062 390.386 cv
382.832 390.386 li
cp
f
382.832 391.301 mo
382.7 391.301 382.593 391.194 382.593 391.062 cv
382.593 390.93 382.7 390.823 382.832 390.823 cv
385.062 390.823 li
385.194 390.823 385.301 390.93 385.301 391.062 cv
385.301 391.194 385.194 391.301 385.062 391.301 cv
382.832 391.301 li
cp
f
383.947 366.451 mo
382.157 366.451 380.368 366.943 378.793 367.925 cv
378.335 368.209 377.733 368.172 377.42 367.783 cv
377.107 367.396 377.279 366.741 377.838 366.393 cv
379.705 365.228 381.826 364.646 383.947 364.646 cv
386.068 364.646 388.189 365.228 390.056 366.393 cv
390.615 366.741 390.787 367.396 390.474 367.783 cv
390.161 368.172 389.559 368.209 389.101 367.925 cv
387.526 366.943 385.736 366.451 383.947 366.451 cv
cp
.235294 .235294 .231373 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (Agor) ()
%%Title: (1605.i105.026.P.m005.c23.business training and consulting service set.eps)
%%CreationDate: 5/20/2016 11:53 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj27oej')F51aqk6emQn6L:ir$W%._+Gu&,o7.tj&BSI;]sm1Ds0FrU[oRWa+=,34G7s=KkJ#9YQ0RX<<GNYU(D\poSQ`:'
%45Hk8]oo\7e?Z-FPj@P_ZL.Vb577ipb58$d^nA%LdNBI-d`Tuj%1gpj'C[gBd'4<,bgm/mC8oe@CXrli<bo$JWAe$3WQcO\>3^D4
%P^^`PhNo^WqHp4]9"o7>cX_43UKk?-b13!3HopGf/I"7+r:'"f4[g%BDh\Ke4&l>&PhKtX)pOB$$iAZt]rr\0s(Cl^Id+5pC,bbO
%EkV2B/r!t]I$si(eB#fD1`9^ms&l->;q]Sj^/Jah4&as4oOn&=$<,_U]kd\sihq0MOj3p2b^\\\Fr1=Us")q"^[A=aJ)P=2U;N)e
%m-SBS%OD4)/*2*LZSE'D(L@*_+tjQjGZ^t(.f"7E:J`Jn9d_Ome,,2>0V&4T>Rj`epJ]8Ll_V"]neD,Qf(bRLgHF]ITB4L./#anm
%I'M0XVjV8-&'FpI;fb)QfJ;C`:8QHf>q<BugLMK[#P#H5/6)u#mc1iMSr^;b9E&ici\97P/[^F'l]ht*@3lXld;L[!e_U.a&ua)6
%06u5!eILn`GbN<@j//'EEB_OO;kX\rK@7-/.dT12BM(CJVk\M>SBW)eiQGj/Zs6g<%d@)DAK1L$DO-2dnoSS(bPX<ZO:FCL?$kcW
%@Gnc6O?X-tZn:ZgW>8oSX/!r&4cEdFT-%HT>IEI&]o)DqiL_(-!]Att9)[9;gAM9V7T4CI#$2!K]r9B^jVfKFmseZbDrK)MV*dIb
%2s[$S:@4kVhu>6>MY6"-l:n8)XuGU`MlE&`hrl/+;iAkqWP`>^5]b;ej"]eG\T)i;KS4!EP`fD<=oKfImg8tPan*He,YYc_#^!-@
%B;ndIoLp5lo!MrlD8+[o1AP6&?ctB,r'NU@DY[*),u7arS\5D(1bFhjK/SQ.i\:P=(bq]HVaR`2\'IVCQ>4B>4M1N4@.=:l1?H?5
%l>aL8DH5^'HQhq:$!5_22/=j\ZHQpYFd>(if.5[:O9+LAmNFODo$#Ur,T])7"n^jI:;3."<6D,`I,h;5(cMDUhr>MYnn]L".e'SO
%HXm(On]NOK0hq+nLhNhk-K0.T>E9bFn5m>03$[s6grq_#V(oW=j#njC8/%m23otOaHX?A["4g`Bi%3ac(aF)b,J3Pn8#.8R'u9D2
%=Oge`o&IQUD6i6V0E`H8J#??2?gjTT^*##RIqQq...)ERa-`K";i?-,.lI0CR5V$I545dN,dEYK@&DW$%ur*/Pq0gcWQ$/^lG3r:
%j7l.B=8N5AV]Q^lb?DEFH>l-5ekZ)IrL'j2bc%jGq=Lb:agbNg.`5p'dD2TX7d$sqZ$ho<)`)A0a<X(5mf[>%4l%Oa8:\R<ae=gL
%3Qb;>BDEd!4=]H%!aIEm;TRA@.dcb=a5_9YZAZD]"N^7q?:osp[)p70Vg1rW>-1U>^H;#9fPQHmT,9oT;/)>"jQn6Z-5nimFDCK$
%G+";?nL1ei*;oUX[+dNc;TPj-=OfI_Q\BV^cU:=s%\B%'86aqq[#Xa[;Qa1!hBC0;U([aN-PSJ*@:5/5@(_RP*KCdO4\HlF%MLjs
%K6jFu-uFmKP!IFFOsmoqj@J^e"nj'9Dj6]9E]"K&dN(C)1;$l(9RcUUN1)`@YTq_.f.6s7r2*JuYqgb/&$i$qeEYhSRmM5ZY1tk-
%0Is;r4*TfcDn'g8brclYPo'+6C[TCU7:tu3rC5i\aI*ofjq7g6k.]X+Q^dkmF'ihQbPafka1Yfn>U"9%`0X\/f>*kKL;``]EuUr?
%99k.9I'N\&Y>3HhU;%qQT:ObQT_K1fc`M@F>Pb\MAZ:O!K&5IM_X"_[\P,s#U^K+Q.ptHrBsl+Zg;`7,9t/rKJD?#R`-QETE]j^=
%8YgZPJmpk\HVD-FWh5fg9'm5G0Z1R&P&Zs_0!E&)7Q"P(q]l)$]A.>hdka3<8Rd<agn\U96(5L;BqFAnV1V)u)+&bhk9Al_cp2IE
%bKa[H1Q15H"?&3#mSrc%c$HMBcI\4eFn(TNiFaH,E9ls^]iM]WK&&q/eDXO'/1\OP9tN?#>D^^oEdsIHqF##p0**!kS%+H_="i1Z
%]?)7%9>>B_#DQ6&NSQ:P7SdL41\E6ig*Hj((p^\E:11Y)D:X*+X(=;g9`cRoeBX9)f(fG?.gZ\\&fdF`iK-;fT3iAPl,1?.DB(8j
%X$.Ni8W2EjP9eI5bO)WNWLX0[RF7-t0O:P^2ce(<DM+Q3a.M)`C"'1cM=b+COA,41T9l"E-1'\d>!'hDm<YAEDdC>pb%G&B1DCl,
%3`Z!#$#l=+Y\#*URe!+`B'3j6?E\0%9;VY78CYo]2QfF)L7M)d#MmT?bFKn?&e1A4YBaERZAN5KUj((rbQJ/,1HF,67.uQ)+Fflo
%=`64DE(++8,rLBoaRp0UF5]!Q_Ws8U""%`@R1$3Ja*Y<+[A;D>AfW8?Hd*%M:S:A@G;8k$=2A4\`qVrd2>+VR`*f)M?GG()r<Z)u
%B<\j0!Vu\ADu\=-euU9k)8Dj&Z5T9?JWR6%@D[F!s&X<f$kub_-QoIX;4U:?RJKn'IY&!^k#oE!.od'O(&fgTP(_PC7j`ps-:)\>
%lM+Y4AA[%I>Ac;Jq*GDF;0eaObbWC\k%VC0WOA5aFLkg>8mV5@me_&f_Ye$Zq_T3NeIlle<Gd>Tg?e%%?[Rjm,\<KnIVY10Qu;_c
%kU`U%4-DFacK'Bq$"=(E_t==t\aJ)9S0TXT3[n,[aXVH`P<7,`\Q6j#W*CZF]7:D+-:"LkFAbZk.t?Z1>\;RZZX#ZM9ZVE5E`+;3
%i4F.qM="K=C'fC<XB1VT$kJgA*mG=E7,tPo(Q2jPNA(B&h4YLWYQPA59QI\-N1(G![<aFHaV5)QC1fpl8Di+m%%\/:#u$stoV.\e
%?o5l5fKXgoY&+4Q4>*0O11e_?M0]s5>.L)X`0Pl($Eh4aCs1eM&nNO4[)-sc6qN!SXFr7hPpk)qT1q^V;pXe$8sC3m6qMDhfaO1@
%r&`dES6Fd<("G,#[3u>Tb8I9Jq*1WsAtTp9E1L`@OruQa7@Dc%r#=@%?AgRM^<W)IPj;J1P"6cl]rJb@[4"V.R2(X+en\+qS].sW
%a*"LQ.9rcSPU+>o$J5=#/Bo`se0I)u.nGXkT&jcqSsQCmCOQo&GN6^0*5lc$`?\N(XmRjdll9U45*_mM*$Lb>rKSYf2_-ic>dqn]
%J+p'0',@TM]4GS,f<-=Lr4-'*YQ]*Y2OA3#\Mb+AD6$6i\[aUWf;;]PPsD-dWA^)X=-IB?@r6+bc)'-!Wa-F?esd74RQu=Kg9r9C
%(Aqu@G,>n&F#LTj)[1:@9!AJ?2O^sL+3f%2b"GRH-V3\RWo<7]4"6)HKYq-lmo!`#P5fOoMn9!;K$aGM64#QL=fU%+]oZ[R/oN2j
%MPZMWmICd+p6BbX9)3Wgd01"C@jct6X+?aS`hPE+QY*PtdTk,1;!]Gd;9U[\R1rib/<0I".)TsiR1(aFlr@VnCleSM9%![Bdbj]3
%X7SdEpU#WJc3(W"NA&am)I9NW(&eT$mUYU('7FPAAr?AIU%<c=N.7:WA(m@NdKTW%<6K*R_kt1?^0Y[+>NEB0ls(m8ISub3;@mY6
%fZg3+8.Z4l:I8IP';VfW3*]Jge;&Z45qa>]%[Z:rqJ^DO)i)V^WXf>]<b0b1CWCh/gchd)g.=-C$u3o&*m@=BaPV+8ijDUGZ^?QY
%in;U=rT9Z"oDJ&qbQ%S$/,A?'he<h;oDJ&njF?@M-(3qG-Q"t5kC5-JS9b*XT)ZL0onX$\Z;qWBP4P44PX\?D4Kp]hq9F&qo:597
%NLcl@Fcc)BoY/_:,-i;e8u;O=Ggn5)e$CqA=>&OkbllZ.4tn]121^Hb4uql78t5JlGmUl(U>`s&'=/SiM"4=4KNsS6<7sK`b%9J;
%CKa(Qf17>:`ot!XLs7/To*F$fOIA\\AgKc%s'4nI8&u<G[IZ**'SXZI?WfO/Q:ePbZ4]g2Uq=dIp!l:Moh)3sg+3t?lcjhEd_,99
%IPqKe(a]N$k5SMcG1r:2I^"m8U61Y669bK3V$d/O@Jm3>m"E85feRo]]+Bo7X\HopUTnS[oLtE2$)?f+=d]L:VE4M!C6T'9?T!=;
%kJ2akc3^Gp@"*fchSi!^R]XeK\,L9,@=BL*]8t/<0D!!&4Rb*:]Z^I2o>&Pa0-',*Qe;_YQnXF$?;)&fj"L#>b7o;ro>&OL!\]`N
%L"E6JB5.K=#KG_jkm5_&I/'\%86jX@-E^,lm;ELQ9i<akp14n//dRj<b9iD10Y_F5.V^0*rj%CHp>q3JHeUsZMS\Q/O-Oa4042FM
%hEG#$;_6:m>rg2K@[[egGTC[28hR%(H>t9ZXVoQHo,F("f*tDT37mun9Cpo)-:Of"SYLhDI'N\&r$+*!="Yr5?=!@5madhNj\Lk-
%0_=\u#sK&+]M.V_<QG##3RUNO6\;MDnt>5ZO/\IPookS?W=<`YQAPu;nuVBZ9?-N%U(?`h:A9&q"4MEK^G-0Q4,5Tcct:*]ZQ3gi
%4GBAlP#W"2""0r8Cc;Y]J!GqK.dP<g8KkEVHO5d*@Ll5\*)))T&qb.Tp0]h>0u%OM*ljX6:V`UC0kSM)RJAg3GR`XL8T:';0rEON
%SMd"2a"c^rN+kAAGoU<8a-_uK#!B895#FVogcrC\rn0k!?YJUQ0C%XEA^'`#fSt`cT*S&C?X1i3)'fh_87q!jRp,c`?#CH2M\Yr2
%cPUk.Xs@bUmMe;<jH<d%;sRCi&tAif#clguP=!Da-b-/=38Z4IR\fJD;QZ&!Kc:jnc)`e;iAjqpo8A@c(CeVB)B(+Z'7>&%>u+ok
%eYc[;T/>la,U.ep9a[*MH1BA]hPX#mAd[sS8n&;/dVGI%(]:hd[6_PXn8m5r*d9*@f<Z>/9OriP]9bRnoH_QSW!RP2<L^Y`J^PfM
%s7Il:8qbKK'RV2mA]i30P+XN-`ElgbI<8V9s#cuobn:BNEG!n*V%\C+4;L.#Z1nI@7Pbm=\,MXpr$:[Y)>E6UM28]$pMV95pZCVp
%gt\BgHZO7HmMC4k#n3!-2g6:T\SG:g2YZBHa.H"D$-!DMEs](>]5r%;DXPfph78Hf13_mopcmX.Ep"(/1F)>CZ@*0%\n"?*^J"=0
%?8%m.o1:dXgn21grnMYnZ:"amH@@$TjIOeR%J2II)7Z*L=(6VCk58PB)8'$[K#h4>iUpt=aI#XT\jGPZHrYIR\<8M8YGMG%Dr_;f
%p5bJ,Ts[qu7jU`kg5ML8h'MuDoZZf%6@<C!NH-/SRH1*<#;PULkLtVKs4IQ>;uc6TCMb*!pc?UClQt;grV,l9C(:UH7#!takXcB?
%?Y>5LgFME=i6.mkHnTMm%nm>F"K,iq[^fPEnQ4A,pi_9c9FAB7oeNXEo-@Zk,pg_5iH#7tVpJ!4):t;(9?BClHd+3)Z(2$1QiCF'
%g.@MkMapP-@/U5;%@&F8YCtm&T!=JGM,hn*mc=1Lk#8_4g1E9HG'W=r/qeqoY#4^FC!Bq-]4Z"!9XSGNV%;8)N-15tfT$NXK!g$s
%Obr%`5Y4GGh>4`\YEc8D@/#eo;)C4hI\Tas[u#S064OD7ca6Pk`QtS\\W4@HJc+D-V`aq=2JXCnR-e:*!l]ATKYG_Z87"l,\Es'Z
%4rg*W`o45WKK^C2WV-\E0,rAqK0<qrH[Y0`o?D=QXBJ6g6&(fUOi[^Te#siDjn<#pI&RK6=,p31d&()/-Ga,n*2`moBig>:jj[Ng
%c@iAYf8\BJ2pPk8H2b(bBf13cO-$!)oD#GgQq<1FL3NDtYHNhE]e3k3F3N84?D;62c+!L3ZdUPKX*L-d_7^%/+iE]3Ac=LPY8B#9
%>Q-DbP=5Rd6-`9>db:Rr>9cbgB%jSle=4cSn_/)CM<e^n?.USjIXalC,^F(cn&SVF%[U]W-a;g3rg&N#(M0$@3\UN0Ib754rsW6i
%E<Wsdl:LBs<S%*^hO/p?#uV'plL;8g9mnT+,r9Ku;_JdM,bK=Q8UJ&CTFu>[c5IMD]Kpt:'J!kah+=T6.lSgms-U5.DWd(ESF0'=
%-WMW^Ln>9.P;N3i2gW?h,hK"1p1I9^>UL^g#:V0Gh8sJ[:1f\:1]."VZ]0eWLTl\hQJfYm^=G>:ng/u=V"q&o2,eFh?+]=@Q((ui
%,4HaX:"GK!LH^H`%[Xh>.[@Q"o2"Un?=N_W8h>J@$Ej.9UkR$QD&mKDMXe`K)!1j@oV,[HUKRAPTk+>`.%QZ>]taL>5;*rTp_bZu
%AX_ug>ZKT(6?uV4s&J*/JQ`gRdR*QDDk@?6(USW<VLros;(9J:XOKo@=&a[%s1HMWZ;:Lc%U;LQ1*=uZ)qn_V5ErU@6[sctj&n#5
%@G=PM]Y6T]0+:kG>mBmg2*LDWi*T:EYAXR@.qMqakGaN7X]4i*o]&+FO'Z+f'ls7.2Rmt/20Po'fC>?=Q`lY-m?1kdG78T#XkWnl
%%`6$EV>@V1*HK'G3cP&5/9ULC5#'C=2`[[*]*BnDr=;!Ds20?dZWEh"hrl[?Id,AmDjMg<40XW&bE.3E.n$<5j2$fAEP6t'rkDe9
%*IqJi#.*N0^!NaAZ('"IM,G+L*^g"T'E6Z4N=!rVWe^M"\_s7!Z0;(oVYNZ!\P,=A*0&H%$V-,aCTX?ro?GkO=S5"5n\\IQ/RD/P
%s.;*^<QF2>^@a=s7ZbX<Q6):E06g8*Cfg)pV5Z_g7Lj#C6n@rIH"lWQ5eN7nkcZ7hTAPHe8poSGfiaXRT1Hm<8PXKhLOXH?YjuFI
%Z%0+.60,hfctToReL;&Z^Qh2g>'\b/d%M^uP#LY\_)DVZCNodFois.NDOp\_"nXq[P.XdD(Trf9G:c&H"JM$*Y[>OS7\H==e$QcN
%Sr_>q!J8Hc4.bVp753-0C3^uYcdbc34kiV6Tc/E.A'9I8%9%l/ZE$r.=kXmSf@W](?H%sS_2G,87_LtmTAt6e/</K68c*)*HoaGn
%a,@M'd*rmI/1i/3aksq*%]b2Gh,LJN>&*5YA8_?t`TWq#bful=R3\N;T$[tPbkj1X[[i;N04ZDP)QDP?mBi'A/Z&1+ND?8GJFN8%
%V,SprGi/.p``'#Ij!f+#heXCdo?Ca%01Sg;eF=9nSi0735)gT<N87:[1TZQeC*VV(cR@%>/uDh6s-3coiSo4s[gbqJa,9SkfI3XB
%<FnGfAFuPT8%[9l(Q7+?'.Hi(\'>4eq+A3J?'`90NI&3`Eg`ItVUM]Gp@GD0WS,67Sq<"W3o3iH<NkK<-/.i$LGhV_5-L(N?gk@9
%O6XDK*KAUK7_V`7ddC*sQ#:m0_NF;4Nd(<0fR8N7G&Rt7N#gY9E8,SE$(7J!&T?fIJ*'r?IE1/rqHgMX.Q.5WV%-.J[o6MME]\bU
%Y*@\'cJbOa1W8TdG1mDZSnR_@$W?jJg>l#TDV/:Q6dJE-ZZ2$WIXGHOQ93Wg?U"4'nh@f%d0[0Q2*)4:U7LQU0#\%DG,9YXYO%So
%SP#s[[XRZ#LV_Tc^AU8<ef2:e?8R6=!K1"4;;/HpcW?^g>:J!AYV[b-Fq=e:lNCP_TO(N!jOh6@!m@iKhl(.*SB6'Hi^G3HoCfSu
%iU+>7IhD$oH^PqPWR^9NhYGaoSUETRUbG8[YLLKZ8aZ)@V/6hU8%^-PJ%,;#AC$i`Yg2YMH'_;2l.@pr=5qltk^_;i)FWo1@E`Pa
%:?$mQeuY*OV,Wq?Fi[CoB5#$1/uM71j<JrUBY.t/h7JC(R@RT\;MiK[%5"&mLjm&0V#/DsK2Uf&^.j[WedM9\W3=/BL)VT3BL9D^
%gr]8LmJZtp*]dUjKOKXQ7]Y@HT?!gkgES6XLB-"/SNODC[9NL6<#IH2O?2S^)T5.Je6@;D,k^`S;R=b%f>aqe:an=o(a8PB2[Q6X
%d$T)(kR+K,8"(t9QN&3C+V@31RHG(JOfrIeEiL1_X6Z8hfbNes@];?JfMW5deD'r:?WkuNjLS"Mc5?AhP9!+<6f-C\1Q3aN6._iZ
%5_?XHi[K37=3O<c,O'a,II?@]_g9#/B`5Vs>4"qn-k#(k/4DrkI$#7``q:0H,K;X!<FY,`cX;oF,Sl.e)!`bTC"LhY*o+c;\ksHT
%$/IVrou>YG8qaQ5jfir=7e?%9)"jIckh9a!l,^[c*VsMR@PX/u,]FF1=b_h:(5YU,=->&PeFAT![Rh[UGmW<dq-"Dgr@@a(pGg;:
%*-Yg5GSo2@,6iRs+4E6Xb,;XR"7<CV9[ra!E[ARiN>d%XSA=Ynk$,mfFu;LQoJ!k+$SS5ZTqegCkSW$XK1ETo6`YVrFQefgJFXMk
%7h'>Oe+I=@K]BS%`5iV?")%;hs$e%ccZkn=fYY72/hZZ4@]^*//'>6Oetp9o8LAoNfR\O4_6d3U<!kiZ8.$56W3o+C1(@u^V;:I#
%>_47B==)j\&K!TK'EX9Cl?Shg@59Qpj+_\@fR=\=o.Z;#4Y1-?PrD\%?o3^:==q57EQ$YN+mj<^15_rSgbFc9EJ"VCH=P`t"pr4g
%mA)p`>dL>EAaFbPh&baKX\f>U7>&NdY67WT\m<&^QFM<]YE&9/*F?uLcW^K%8MI`fOp$EXC&=)t4'eqH&SX#!d6+D[7S610CNYYI
%Sof^X<f>>lZ]BkN3A/5%)g1AHFKKYRL]9/V'[10Vggb#R<b5cSI\_sRkt%)iU3AZ9jW'8t2muB(d\u!=W)=SsGE(2*h2e9$%1EW!
%M=nV&l$c"7)abM\enbg*-O^r?H=?"`"-!NPE>s\(D0MY_<+CZG_AiGS\=i2>p'LP',O:?+.#Ghd>,-n17he$0C`")<1*.Kd!]"B;
%0p.fR3Q@F:c!ln#Ti3J#)q2!BL/O>]AN[bq\q[DIa6!uq(dG+JOrgX<X1`]+@V^I?,IOkcl.aqdQW;bRb`Srhkr6nPUd=LEaqnM1
%(M4;0[o!#XdRNP_XLHMb-gib=<,Buk>Vf,jo_Ab!A:*5/Tn9XiqG+(ZSiDLkHBR\C6Aa^P9_;kq-SdI&pV,GJNl%aU9:V$:B8hOs
%So9ZJK\5]?e"M!"@9@aPK?>SoK41nREe@'Xg8O&P\0bpkAuc'ARgIsl@6].?T@T'Ia9"sC%mfGZXkjN(UrkP)rg9:9,Q\-8^JnfX
%AGEStW/$I!U3W/U=kXfEiYaZeMV9n\W;XG,e:k.\:%7MB06h)72XIZK3I7H(4@UOL&)Ki:CL]&geMm3`@.Yp?gj<i*i!R)MdGqZ.
%k"N9l13i_OooH^qa(/#`/Mf0mmTK!O]l!skYP`UDZ<(e4Pe(tkRu!.>fP]i0n7bhs>1$k-#/t"Xc9n2W"\P2[4N4:_0i,p>'0Oj\
%7!U?")LM29+TH*=H)K(CdlD"E3'1h*Zr^.iCZgs`S&AX2efGA6414YoWnI\g6QC%dLo**$[FgjQbS9B`V:8g0B.+V2?+nW$U?e-U
%,_8iHjelEG%g$V@nl,"]@0s*Q4N'N;NlO97-qAWI3S<-?$,%nW99C/S(>Qq`Dh#F7p@dI9ebm%UVp=[rb8]clmHWBIC$iphgl8/L
%4.G>Z\ol2GrFF*d\[)3\qpBKZn]L9t43uNJSO/Fm;U<5agN@F<<\+&!Hb*bD>$q5k^:1hbe7btnSuDteRe>4e)pN'Ge+UfGP?5B^
%CMrBEZi';i+e)6a3PFpbh;Wd-@?A_cX99WRgY$M;2r"qe9:9OC[mcP.5.gj9^Y-_?h-4eV^/aU6V:T6RXJa*+B=eoBPMj]dO.S1_
%S*;ku^U8:@b3/H*oA&O%PubJB5J+;LaXqBH:Zs[K?b*@100@jNcYnGqb'N1*b/qY+Hh/f`@/''0fA"u1^&*5+mI?aV1(c+L[JAqV
%9:c'nrB7bkgps\p*.GMb3EX!uP=<.-(H_7-rGD(R@B8>">225]O&jjf$dS/:)_[MkhI#0Qo/a?`lJ-aYk3:-seNtF/Nk`a2[n_+m
%jOL^3+<NG`\%]#0^H=)c<#-P4=`3*reB.%uh#7cdm]N`W4`fgErp$!!l^:r8:A+V(kGo,FlDKF!+F)6oEAGeUNd^qT`K$iIA=p<e
%d*;f=9#4`P.^#!p+6;[JmH4urQ^:;`Q!gdF35"-S=Pqn:]D6Vc8UG-]amOQKDa"LdlX0(`]d\D8;9(U[o=U-!$\ZqQs5$Hib=DT7
%s/LgUHF.[@f3^E=qPLc<fq31HcT]FRh9Oids.P;$q"WeUcb`'52:h:>4"gQnrhJ8;q.oBbeh\2Y\[;$0AlJ0K%T2^Wli*YL>>$IC
%q"18Jkj?9qe`+%S?hcJ<("7O`2n\?31hu&b]S+Ve-.n+dpG&]/1<dA8OZh^kcB_Xp?2oQWXcPQeI_248H1:1t<^)#reqS\PqUO;`
%m*VTPiE;kFft17/SiKa[80ARnIXdP&.Xp#rp[rMRhBa?%5&1%:hOQ7"Umk/S6[N1dSfDP]GtVl.r8%72DQ^^=;o6cNR]Rh3rgOAk
%h:(/*Z[)8u?$ZGC0qVA-Q('t.i4Yua)g2*jE&[Ykn(mhRX5n4S'tn5Prkm#j/mGS>XJan^rR\JXQAH[Ya7],U_tG1?_l)nI`SDLn
%c(;%u:B+Vk#%34JC#@D$bhuNEp2qgnGe7s>o??+lY]Xcah92+QbpBEtpM_urM<mdG*P:'oUSg$!gtM>N**Do;3kOu8a;ZQNV]$V(
%Y<L.Br3GiT[s@O$[-VGG`S>(1qOT"tOE9(2W;$n\Fsm%=]+7,B4?:(ME*s:M)HoYqATmruTg\?q[0C("==5V;lPJ/733GMr/[`&,
%IiN6PJ(8s%YU?J5jM#Gr>@jEqkOQYVFnb%DP:g1BV3Te8ip$ER+L:2)+$TYm1j\KP-^&0RrOT4[DnCEsXC_sV50Z8>5?uFS"=JDb
%pmK%_p!`RmLHG=e<qtr#]k6ZG[Il!*OiGsMrIrDMp/g+u_0>NPiV`T?kRG`aQ+Vq;gE5nNP,s%U-aR/oh!6!T.fY/ii>jl05J*9-
%4F;QSUY#-/oOu%fqI+@?jlZ"*6b?-Jgq0+?akZ^?V\8]E\YHbqc57-+^pOf[Q?PI\CIA4@E8IL<H60gkC3@/&[<,Mq8/qBi/[>)_
%>PB4&oH!ogF0N#XgFS[u'nP-L$ouNqHhLu1\$kDSj^/mpdsEqiJ,"D>@AEDC9&mQJFr<.C+.)H,lYhe*"FEq9n(Yli?>#e_2f<K3
%]=5Ljg=r+/lhKcX;7c_Q.NP]T[[.ag+31TUoU>c7A15@bcOEFd9n&9*ko]8l=8;G359@RJ'<hq6.^QRR$bYTf^,l,;fYW_-88*qe
%,TFL6"/B1E-^**>L&H(oa3/rH5I&?uYadj_'/'F>cpSaS$nrEdYq0_<+^h?5>PC!;a5ARYdDOh`s,8iF;]bRL-pP(r?Q#!Hh;+=3
%=Ij8=m<&#$]EnhUV=A?PHEl_+i1lFtS+nZA:4ce.E#A-Wp8^88,Jm[8^EX7,YO4W#Wqb-!h*o\+q@E5G0Z"cS/@&sg/&k6=gARqC
%[%ZQCJ2T*+2o_mk08#L)Ydnkj*X]'o6.(]Tlsbsj08Jr\!6`f+iba'&J8)YJ/,aNOmU+7OpK@K<i2tD[F;_<<DYfCe;3uNQ0K(.3
%KOn3E-18`]6qGj9PN0@;H'<,icQYgk%IZ>K!.,SZrb.ZUAE72@]c&WrR@$]QMr2=Nh"O25mS!OPNZc>!nDC$;8=Y0NN$?c>>%[fq
%oGJO:cPco^,BNYB=Y7+#gZS3tm=jpPg(nVSn$,tUY85]08+"3@l`8UnNVcpuhE?^;g[_Hf)l(GO(j)O!a+9oB2i(<u>5<W.o4DcY
%BV')9GK;,DqsdR..p2bSS'*eS\"9mld#ZV'Fs#p*@K!/?Cb7<2\CkMU^Uq1_ff1Hmp1jo:1C*<<lIPpi#E/Pq<c[MPTb7)?qff[?
%RCltkj5KaVbKZ#0[VUoQ<UJN[E`6D;p#Fb9JHW$-fDCuoe'n9^e)n?I_^<HL:Hn5XT"TOU)qqC\otpNJlXd&0Cr0J-K2hZEFR32,
%8%TP3r<bGC,1cn&"i9NNV.\JF=07)[jh6^c;K%!@'P#oqIs`7'/R@Wkd;+'AV(SGC3H<!pAR=N)hqfDkQG<5+<_o_'Ve#Y\ZY<Vb
%I1:f,@NDLRm[?ki_EFiFmS3q;2R?[Ba2>Y.#7_ed:RCN6Q8cHs*do=:mcC"aZhs2M+-[j1>VYEl^K#]bauN=K3nO%j+k(b`@IFLE
%!PR$oM($9Ed(Z4$Ss<RCF523ijPK!N]dFOS*aSN5h`'b%W]i(!gE`#@pN']&*pN%bqr!.?p+9jTD>3ka]WZ5.rA<HM(eWP??MsIr
%p>koFD3EV`XL_Wk&lrOe(+MV.&GrbVqtr5K$?BK;hn,<2Wcc%U"^MQ^&m/ALp#'<s'R$*d]\6R;Cu/6#Qp<q"rBfYsMh<t!m+l.C
%6^Qs$\#nT$F1c/Q5!*Y(4mBf@K_fYJZe7J<FCXG3U[=hOLqZ'Nknqmq2U7rP-c:H&Us$D$Lrt+u3*-W/FFT)K#1cDO>-X`!?=:Z8
%FQ4Qa$AZ:m=23H+:bR-_\<25_s7)TVpZN'A_><H'pOA9_H$5s4ns>bsmG^&cRtj_Grq_B3F5TE1\CaY)&Dd`n!1EQUXOZ9neuqW_
%dVHSXBo^*^eks=K?=/,/-f#G8;dSRHeW\;8\'3gsr-Nb-9#\r$>'FX?:R5Kn4W*HL4KXdIT3OiEG!,CN@cQ=u'!edk(PEdQad2KR
%\$O+ml!Q%]pT+L6HjYJNh;,-5k-EhKFoTkdchB%eR33Ep1[f2l)fP'aSai$*C``CJ45'7TEHuuo`OGG@B-$hujD(/2RRe^6h"Y2/
%B-4cj?&uGd:?fStl-!.EC!3Sq48[B\e$fiNBR[?dIJF.`Xj7u4iGQ<p3$2hGpKLkrn+e=o.]c9k+=R9@c0sWfb1lCHeWVB$Vs>l%
%EkPD.r"^)U+!V7)/\\[chLED+pZQZSe64,A^0RBfr32VA2.#^VNT&dMF`.>YZHj#Qs3Z7En><L<8=K#;XfWhKp,RJ?QplOMCT7<G
%PO[3[+1DT(Q+I-!P_j"D/tA,IeUI_(#;=qE%X6O@O*^W]o%+Z/S'/C,g"V#GH):Eb4J>]'HOjc<A+bY,HME$SB(m@7/Y?A4N`OII
%%),_)qHg"^5/"6#rGeO\r;l*3ab7]oe$T)7c'!Y*0uHaJ]_-\5[oh7+#Ca"?GB[#1N`bCPd4^eE.TPefM!"Vfs(LNUqt8Ko[P&h;
%`pqa/cld^9^N\oj*jSZp*e1pajMQ#hdN@o<2G=$pjtN:62_*e2cr*NobNgZ3?WHmJHA0TI>2nng_ns$H`&u`9RJk%rmhZ;kAo"aN
%n9Jet-+B!1+8bN82d^C8GoW<5I\^n6[;t59G,MRZ\)G&$m0filjlR"M-J#6QimYr[qT5X?gDJ#o+O`_rchu=+[k]>ae!luc@&9"B
%,U9:9Y</#:K:)&%<!Vf=>e>>ui<Vic[WVN+6_iNiQaMO&[r3;JNc*];+:R^ggA:BB?/VsK`@]n`D]NcO>GTlP4MU?4bT%\\^<oG+
%O*BT/G>1oWd)N5EjQN5./tnFU2fkIVcX],?miXZYb:Xf]EL9VSX3WS+LRCErT5+,d7[;?UYV$pt]o\"&Fa(C)F;UKajJO$4H$m??
%p8EO!d70sEh&\=AC#f+dqrrk4rf>Z,*e&.u,f8*aIsnXSVEaTdc?ETVHa6Z?AO(aY%fQ/:!E)8:F)I-GnNhB^=L#a_0629on$Ost
%hV6#@[m#35U6mN5oho/:K@[J%6N?0CBic428?RG*o6OLsc@(ND^&Oi+/UO4a<jKd?apWOiCND(oWRUq*)!V+KJ-:rF>^<UMi)B@&
%ZaC$I_l6]BbIK5%A21QVg&E9Xe[LI4#S%sO%s+./)u`1AbO4FA$Pu3.Aa_8=cKBT]eo^W=c6!=6%<0bL;J5HHDV]%LdD=FpF#WM=
%g#V>1`^<oA#<?.J+!68$o/cU]mtq2c*!TcEo[irV5RPj(_eO(/Vjc"GT3g<sAbVc<j;&XdadKW7drf<`KA0s0@i`s(?+Z".JXPHS
%k%9AIs2k,kEr,4nf3m+qD$67kdASY[,.$)fca\lPYI>9Oa.FMRm(rY+>"]t4&;Yt*hd?AOKA?uZpZ-;W*;5r$76&lE1A.u?pNg,G
%;(To?+$50$)'FsoJ)h">c:_a?#MYlZ(UcP`6o=(tT#'gMgh.g^oil7)E2o+=BRfu+2Z<2_XbV-Cq+LD9]t6p$=\%l]GoGu`c<7<9
%FQ&5$j7uJXpYsmGX*C^dX%RqarVVS<euQq4`KT*:ZYeNFdS-sM52F-fQ-@'aj$XkZjo9>3;>ha;emgtI5A>M+fs@_tpbcu\[=#4T
%lK)@7T^u>m<%qW7]2L;j8<7UeBo*Qhp\"?6^>(2_\[$rTfB2\am`j^'*Z5liY!4=N*S6o7Nu<.dqsERKr7@K(2QHLipZUt2dX#_m
%a"Q;sEL2%;!!['$@DE8\6G]03d6Tt,pRTOuSJSPoAmtP<H08K$G,J3kE'#$"$B[^4j1=iDl=*<D1qcoBq"AQC4hFX?e]p?a>g+@`
%\g*W@9I4%WMeT5?HfmljlDI1V%^BenLDdS@_JS-\K)1cgYO3Enc7Dr^?K(ghe$aE`DQaMR7>),</VV*-(LN1a\Z]@>'pRk!\bQcL
%"SK"+dA%/dnZif9f(hha(%2pE-at$RrV!Sk_q\*8rLj0JjY'9)F<[i6_9/,A#KS=L+$:M*DTs=L_9HWJ4*TuDIf&It-JWLH;27Dk
%hG4(+HL("25I/V,If>ojXaU#?HYDCNI!&"tT/9*%I!X_S*5B.WoPm!oanpDT,^7c;]UW3@;`a9kkkWFU7bC+X_]EOXp#WNA?F[AU
%r?4<$Zupb`H(-tiDO1SR=Y.K8q%YDt&R"6u[eMgYrI@l0k1Re_n%$[!H=Q&^X&JJJ-Mm^c>OQ24S,)[B^%-eBYi]be[Q^5JCrIPl
%*caNYIuo;cb%JTQoH/mXCpO8.:##OV*.E>,+IDJ+35,-Fb`Fp0fj$-#S2BNih2V$V[:NjV$qtq=_X=(<=R6fULh&?+^A;?W]:20Y
%buSg1HeK]*c%*^$AuEoI^!>urGJF!8^>D*BFf_jm)gBkV\!B3rgn8:[[2[QUr??+VWJjPuo_mXqm.%^95-`q=-en*N)IHWT`b]b=
%m`,QC,)Zt'S1j&CqTW);*g8n^Qj!,hmi/p:32EQ\/[drFC]<Y5iWEZCf1WXXH]bu,=8PYDV`.AP?6!Kp_tMu85KU-aa=Z`_.g)!U
%K0a4^gE01+fou9qq]'8f)Yc4RIj7?\q/Es0DLBPgqf"L\OoS)]mVEV!Is_Q05&h(?Zh/>sGI7!SAIt>UU;O,0J1C#[kj.Bq=mcc?
%k[EACis?Y'G,G8Po`-9_0=.:omr.or^:U+Ij_=_=oBmCd3SUaY2L_70Zb;HI;N:W%nt=jr8nXdQ^ZkF*]$e=#<B+;7E`p7`p"4eq
%J)&'.+2O%Cl\gmT%b=^r/9`k)S&#\^VF>OD+"ZS2oh6gd?(K4!/7qr7=$OIV#\lGVG4tOlB8*k26"U!\1`M:3]co1?H&Ze2ZVn8Q
%\$pQ#h,:0CNSF;hmlrCrqM38_5H(\'b8Uu;C;p*&IJUBDMg^36rXF4\I,j6-nBLoYL$r11eoHaM^3=)YSkUh)oac'I?6=)1gq$lT
%s6igo5d8!K0?[G7oT^:(<odiecb2q7mTLLc:;'T*FL^qBhG!mcf'3VhO!no$bN=fpS)rpVPcuMP]9b`6mIYOY?*&mD`^]\n,TaSF
%><Y8d(&OiVh?=Fjr/QMLRVnloF(B&hh`CIX>-o%UcUt<;.c2eRg1R7Hl%Mm?8o<?sge.Nf<iW!"q*/j-q-"-gFI/VX:(+09WI,(<
%G)JY]]3!F[f.ES]rjsK&ohG@ZhFTS\:f?siW`1P0(LDhiHC?M=;WX?0Qg,`VV%gU&StJP$V:p&c<%+Tc>eZe*<V#_9&)@)GD_rs*
%K%s8Pl4hOJi14&;)iD7kad^QPBEpW+lM=(r602.I;`i%]iTX!K'C:<fVO7h:EaqcR;fjFuI&m4SFSr"@qCBC=bM>SJ\:n>?fYRG+
%7]h9Gle(E:BH/p2#tr[+Q:<a_dn#gL_DHcg-I1FbCZ6Z3nd5l\GnP/B0h^GuEkMo7kbto`UmD=LA$8WQd<?h\V-EQ(?E4mfRe:DE
%98>0%P$TQn*nhc][7`8-(JCVGW.tVdKO$M-%Ct5k*1-+)n#Yh:jq29c>/mdpGZLs^HT,rsnKttZBZ.OQ@DpE.CSeT<A5r"qbQN:q
%6&q7*6Lq=+o=Rj//'f<H>DGU$#CVq:NB?;H=5$o2g\ABf7Zk,&kFGe-k^muSO/>F*W(XWEg(e`:2%QIU*F(Rd3NgDnYua#IXpRn?
%!guB]I[k?Fk'rVaK@f.BVV*$Ukond.R"FTm+?E[^djG#;MXAsH8WIr"?7YSX$Tgd<hXX6`A/AD>bC<!>QN#.?^tiMrD"n$:Tp7K9
%W::TodZr6JfKGccK/+puNFlZ2I&LFp7rB7oF9IS/G4EGBH2G&B:Pg?JTHSrBZjgrr'kC"a;_Q-r0GHZ[4rs3hkCK](8jWWs:`MO6
%01aBN*eIXaKH3;DhIUuS'-lru)oW<ig9-3s7d<OW.,QWtSoq'R[=#NJ`8r_tEnGH&A-*.#m!@NF_qs-C7dEt11n[J.O_332k86]n
%YI4*j6OAa*iMO^6(Q.AD]-3;A?i!?ia(F[W%ecWfQ[TpqV3*(Z3L:nY38a'WkuNT7\ins8)>HPB!kpCA(;'V?I&D_lS:("M2BN7B
%s!l>f"WIDRV*"a%O8o*L737ssG>l+2G.WSUL0a6GH7)@'\;WVGdGj=n7l:-dHj(G>H%`@&n`PbcrUo(JFJAfA;jg,I8Yi`Tg=jEQ
%O"A?Fh15OprQrAYe!_DF5NE@NGZ+*n*X.!r]2k;&p;;"9qa%5S5Y'e1Xr+P#"Z[V5%lK"!7u%.m*^9DgJ*qFr@pkXH"'a1HVB%l0
%_Oge8"8W2"GY5TV)Y+,pZNDlJfH/TVUqOS:Gf;Da&(8V.D-=24CE^t@%ZDId*B*(W@"hI_;qYU#=,1_BOKBM27:S6^#DgWPrSRY%
%s68%mh:0'Gf[qbKeTNKFj.fMGnq$krVR6MP#3AsQHo-cD"@*.c7M^HHNO;.,=Vl$ae&#eGY,_[QST]Eu'@9L0>4K1/-g_.rp<[m0
%:?X_?,]!OC#'s%u$3QoOSt5S2.[TBib;UO`"s.r%>:hdETMNb_)F/V>kICXnGU'?2`P(s,<.(81nYrU$=4-"ZF&_eAX'>j`JZQn9
%d]Q6ai]X`USEN+r:Xli>=bMBF7k:kr*Z<DL6Nb:!Nb4r-b^n.+4:<Y`*5g,Sdrj+hUo-@/D22`G$X5&-7jjrM>Cjk$LJ@nei"AUB
%J1)FO0EP@no0_Eo+16$0O2pr6QfiHX5E(WCe(@AUT"rm*[%\ZgW[#GKbE5d;_TGp\"6ma83s^g2',o&IX]!<#%+DRZMLiK^FaQFU
%oKYN*#<m-`92dFk1"0afd/aDmW]3RWq/1:<()RV;:1rub:C#$cq.]6-61c5AiqN5$QkMjm7$:@9[X4<+P%[XRk[:'cSI!=[hus9u
%:"1T'60I5g(`9-,P(VtKqDV=_#\&\Klf'^;0(#_A,Iq5"3[(+ckh$HhNXJnQqZC2toAli@i:tGq4M++R(3<C;o`02_JOI'&dQn!E
%""*qS5^Jq1ctmmOMhV;.(C=uf@mnTtZ*:')bi4'O(8jm3HqQiR@=qgEdtpOpL-7.5Yu_cbA-&8*0(W3[3$P)26H_,8@EX&SJKuU6
%]+"bbdhcA3g#%%"84R)%^FmtW[^,_b+jm2V3dmDAC.NiN!"")1c%*_8d?YfQFPr;Z>kX#$/0^ei*[Do'*/>?tLEp^R&q[h`348n,
%Ps\aK+aPa3TU5@Whe&NuH$H(pFTMamQ;mnr,6fW.J>MMs2Xqc;g+bkIP@7W48Ee3Kb#5[!fM;(3n(C%h+o\]5ia]sO5]dO1#Dd:S
%]8*cLAtbY]\0[milk`eF,fa$.KkV_U`=O$mSj6OR?Dp"plglj1J-6u;2X`bb!"s=@+N0_%fJ9F(:D)LBKc6`hc3l<,.1a:U1_o58
%:.J=bZ6rQN!*@:^&1e7O"C4>[riHSOjHi1+6Z`mX,Ae&XAm7#j5_>,R&U1hqTlX^o+7e0"V_&Mb]Lnn/(OR)3F5V#A$)'l5ZqQ/4
%"=0B8Yq0S$&;\B]l2$K6FPJ$rG1gu!dk[JUVb*E$)1t.@Ca\c*VN<BHXX@ZFLkl/W#H]_>QH0X)3JP%,-Zt!q2nO*hP\\&VQR$pn
%;(TF$*I;No>'@]RSTM99pk+fsU[a+AO>]\f!5&k&@KTU6k-thq%If<;-6O=%aM:p.d)Od-W.<Q3\"jkX)@;JAOC=\!!0I9PQe86E
%9ES>6"S@+4L=)/A6UDt9LA25q$]pHd/+]D\298$'@ZNgSpf7_Ui/a`8i`guW&40]ZOZ5mWfO5m0r<A(d!^YXp8q]h-I%LF]Z7\@3
%0OM.OEBkS&7tlsLcNRk;0LYe1*XoiHRpsj.L;YQ4b.,G:!g%)_JKYd0J7CYBn/VU.8g%Z)\FF*iY65[RdFc0/gBq+2q<!%"Z2e;`
%.)Z7sn.K7Q'9Pq7krFmSE*^LoTOU>W&mmHDLZ!+;.0,rL$cM^[Zj$cm11_TARs33[L9q(]]0T%I)*A0;eLHN$hBiu^$l36_E;7/$
%K7tEl;L4C$AGD<sQ.(9WgPq$<2MYl`$Z_><7HY-SeSsV4W>dAO$$U6&A.%BTmaq@(DiL9p?XOO4jq9s7IMt[s<Hc2k),3@\11;`Q
%V@jo0Vo$OC,hl-MOBK+LCr2;_04S-WCF^jZOY]Vh6eNLg#M6E"&aWkflukMbj*Wm>daE^mJ"k$HA'gMl35S:@Qm=0SBZ2Dae^+tU
%f/BucX?Ar>`)j3#Yb5e4FBS-b6qF?c7tjVn,ZqE*&DLkT:kB#V,?emq5?90fMY*(P$h.P*ZTJ;o(<kJQ8#-YI'-`(=cXsFK[#ME%
%J6ua/Q4qFjhbUoH=M!U>7Q6$`fG/Ocs!;5"'$rBF>36?h"ip2!)$R&DAcQX-;4,_1$t0np`G;oL6%RG&JWAqDA0[On9#5Vclo8Gi
%>!t``#2f+``)?-F40T1qZog)5Y_OC')up'm]1S#8l<^fS*(5-p2"-T?jh#F$9ng.f?'[<J8DZ^6O<g501=.@cQ*leG<_Si6@!H7Y
%%78q;&>Cp6&Bt35X>hHI#UE)[=`-?g((C9Zk)3Jd4bIsWNKOW8>>C158Z/Tl[BW_[j&C:`Z61jIo#a'-%tVAMKI;$WcX4>EKU`,p
%%E<MJa7>-U$OiiKN)1&Ti>ho81,N)JWXp^Q)Lst2L1oJ(%%/ftWW\Pp0\S"rA%,]uZ1<;+3(tDrdEr,<-6s:2",SG\np.RLGUei\
%U+A%akaXJ.Se%G6D^6qK^?J/ZQgUTd^t?U9R8[o=LXB.+A=YM-`0tL_MNkQgWc930!-,DV6lT[BdD-n6?oEJ$C>kMCodW'o*[%L]
%!fDh&,0YdOiIg>rR_gi.@OaWqo-oA=(3k!&IBc(d%66`d0+::?PL+8[-6KB"p5D[4H-h3(j0Ie*H#Q!hZ(f]i(uiDGr):HhKVMA*
%%NsX7T-.N7K^a0hi/er@A(.Rm2Ei(R_Q/?D)<P,:Ypa]B&-F$b0f3JUcXEq01D##P.!![^hAMqK!^L!\r"^B?Y1[F1;oY43[+JoT
%fQ%,"btQiS4a(91D$g<-Tcb,C$TH:_3J'f\\ZR4eiS1%3:\"ep_N>-ikW%Bheq@Kd+T)8D$\hVgPUR3G@M1#!-#*hXVMHD:2\jRP
%kYNhp0XM8,Z5MSG^)48Lf!/rVf\0G8lu>;9W'F$l`u+R)Q[-ZJo-.HOC7368?/`0;nO1!PcBm^QCBi,>Z==o,cke3@c0PqX/sHTH
%a"gT8d48=rif4(R5[NN,O9#A@(E>k5Yo"%dX+\Mu-P-mFa,)#UqGke[hU$p1VarR)>%4cYD*J!YLCcEberKmhK7?Ek$0MXY6iL]]
%3%>993:%6_*f)"*0W3PC#Y7)`-<`q%([lPRWSj7blJS2-NC\^^8Wl/:PBXbeUuii>iU]CL;"><NEG1#5^?pfe@p:KG^q$lZ28tRV
%6'qp9"`%<]0AV0q7Z*CGSPX]Snl1$o#B=^H>l"G4X,.'q$a_P#^VeHk!/:Ir2SM@%nK>>H&]DV?<+&0=*c1G2[=RgWM")_J%"K(K
%D!,IFqc9j=#Z]?bPfkSr3"m_HTSJeg3_s77U1Z6;`LS3R&'BNpA<%@S.)I[$mQ,<Hrpt@Kr'`U6oM.o_<#aKc9p5c9mQm@(ZfB[c
%0sJi3k'<7hBeM.K&6$FX+Ss!l'.ah/fCaJ5"Z`Q46bhGcUaHlk=a-ke#f!Ve@H\Q,+>J5?E^UH2][9!g)pQ7Z@6KN-;[q_7@KS80
%Hd;#][Q4D14`Z38*$.(W7$@Za/rh%X@I:i?SGlq08*QQoL;]S4"i>hq<N9[]Zf%E6p2!oV@F;=IihNJ*i$c**S5/XBr'e,Ln@cWq
%^*9*rfdFhH+9ZL"N8=45dS\.t0?L0Xa^8B8i9EPgi6+*;bU!cP2oe0WJm^!rKofgbgOS_?Of[qWSk8T[i/IZB/G[e0Gk<gOU*Ggd
%N9?7q]-_jK+Vmd_a$C^gj<KroT7SU'2XiOPBXS`8^c<QrEb1B@-UDA<PQckECD_AdC`mb6;AU,?`h][7GmKQ!CdcLTA;kIK<<,T(
%3s_RlfIVZI7d(`p^$?o,UGsMl2N;8H!^rjrO&_:NJG;DE'.-B*nKf2GY(6uh?/?D?F*^*IqlGiD!_G(W+g?i4"L5?BaP^elbmsZY
%k.5d?fE`GQ0P?,WH:8Z?k@/`+WbGU"4?,S?Acuh&#R^`d1`u'!@KI#,;mpUd&9N_&GgS>.&RhR)#p\j&G"G?f^IGL/<`ojm"!Q@^
%5rTD)F$^-D?dal='OYJf8I/(aE$X&o!uX^J-c0:M7q6sdPq+IHpk=BaA<oSmUg0R/?4UN#Sg6FSH?;!lL=t:qoK`ro0B41.liWpf
%N?lul2%Jh1YRI6tTQlo1$O\q'V+#FK&NSDid#]';-Ni3f:&Z>H:Yb5;T`CLRG9pHZguNG*..Bo&<"g^mS2fOF$#FS'ENq`d4=E9b
%*q(BO+lo@2Rnd.lcuo]*5-2j3(Y0]+6a1_G,W</G?N_@3.-q+*8[e'WHBK.f39N`k`h>A:s+(G<K\IX'83h:-5@@B!@C@[/hq'%R
%8\@\GM=d1pR1oe@`H@/^n?9KIQf*kG!gqY(V[[(u3!O<TClb",0r_keb#T>d`eZ<J-sWY-J9i1E<\W6N%5?k3$kB-8FlZDbCncY5
%oXe!#"XPQu@MK:1/;/N]7?MB,,e1_F&<bEnb%DAhK8.pk_`p?L,G=Au^<MglX>SQD^1BUu'E/90]D[5$"6l6VCLU:gT%"R-?sLlC
%Cb3L@P_CRnp_>uQ<cQPU61T"l*;P*N4s9V9[`C?DY&?"Qr-6O$J`iE3#YaI!oj=#R$NhZphM7Y\@'8)#Z65YWcLrG>UB=O0Q37ma
%GSP,]+r3YFK"iOajX=%M&<c^_6cm6#Yk6&YZ8j+``)B2Znp>X]Ka&:kKJO`=mm_[I!!8]ecaoi1&[jDo3?b2Ma`VqkN+I`G#7,h3
%7_-GU#7`%H[!2sm#=0t-FRp[hh:1aT8=a.PM9;YI8o*r;+:p)+[kN.[KTd:*U)[93.U^_ZQ*ek+)%(8uVTe27#\,n*'%t@3PC9O;
%>R+\c`-X=7qEPD='XE[eJpH9_)%I&a`gfGX#@;D3;miHd+[j1ofd2AOk!;$l>+!PBZQ1?;DQjlV5(rWV;>N>\Ucc_A9^*BF!ET%L
%b<8@UhF;bBK2H39!@ipLY&CWC.!i,.0Sia=S\/`gXs6q<NoTUia<h1[HnCRt]f2\fIY0":&YKV(]:rgeY4^/?<f.6`ORCa8F\Ejb
%a$?K2'EJLR2S<<T&rIhX0;P>$cI*D#BM>-;(m5MCUGLgN[>Q4;1.s54_70W38*\C5C/451V%XX4E%RJE%@35d6J\="Jr@!p3,fJ<
%"RWck:Ak_mBQG`V%AWuZXoABe(i>1D"_+aSjQV6cVG#HH#\,:@@M@XBAW'\1R[Or0'^[)R%]^'q8[0YrV*<?pW'P/HH3saA7M%B^
%X.pTV#&DSi!-LV9T-+R'I0!uT*>`INrFO&8(MjPR"!DAuQar&]XL0E**-3aE2Y*O3*:]>H#"S&'_P;X#L`5L0Y45'Zp3<+1^)A;&
%<B,OtZoLcr)0KI5-Z9BtH<T),`sk`4T+A,q3Iss=7:r]giYn!PW"3?Fa:9<f.pUW@-((!#0>n1f7NIr_)X)53$7uVdIf,[fk-U1c
%)6f@s[>6/b9S%dLSfMj")^=?r"g8nF`1n=05l)&i[>`^=Y5@Np,g(jE*d0%p$q!XW*bHMAG9gq2$X)$G*t<3"GE#h+*3#=a>Q_$T
%U//rF#Llb:T"ORhh-X$4e/p>P:.G4%k_.YE63fc!ls,`2@u0.Q"CY&V+JQu>LlrT6H'%rMQ\Rkq09`dm[L33H(nL_V(mTf;-04kW
%9(Fm/9j5e"Vrj3F=4qSpQ]#TQ?!)oIOpn*M'T3eEi<(u=;$Fu9'&G]GKlZF0kUD542?ONl&.#oO5a:AuJj:=nLl#VrS<i\UWS09,
%R(XobfiFuY0]XLe7a[8g5\mOA"q]&bb<@\h&8b\74[Jn0k0a6j+X,]?&F$5I4s<=Q*SZBe6obN>>cgp@:N<14".t@?8oAi[;5t37
%F*8XG$U5T07[@Q*qrT=\M#7F7m;,t7X1d.?Q^VSs#a3_9STJl"OflZg1&RH>5%#(lc.>f<'gUZL7Rnn1GL29j#^[-O84ZKs'S:e^
%Cn>G&2IHs(nqQE`*j,Q>*"h7h`*<Bk:FJ6HPp0D5I2Q5pdg6SHdhU)oI[k96WaH$?<\p/iFl08/4J*9>2FldfO9iOMUl<Pi)5K*s
%+]"mOjdd/r=d@(9$k16meBNNu"'[2.jgp<W]/EPE>kLA@IonnYA8"E`P[lS3`<B5;P.D!biNek<(kdI'$<5W.]`U`VMp-'2a;jRl
%T,C+m5XJ]-Z;<Sb3!&+HbX!*HVl1/("@U-IjM3b)1nkf#'dp:,mem+s<jJ.:jk=h$=Vi[C/<7W!$d_Cp7<gG,2*mIM_FW7>crE2t
%O&BD=B4s<r$I5\f`&[u\:<c5T(H1XsT8<V5Trcdb-'&-NGJ^RI@;9)`"D3RJ"@EiRL.MYD"<CY3?u!_MgB/sboRY9'HB!_]@/'ki
%?-IGuNDACK(WqkWoXH*2+:_",=m1raTHYuH"G%.R*9AmG\O#-\e<c[28sDSCA<Og;$lJ&NNd4[;OYB9+WV29iK3N9@<Er-$.%F\`
%f@\).MM20*K3S)n:F9U2&F5D'-0.6A7O^0r$K-(26%kMdALDW_$40C/I)'`=3ur8l&Ru^/L`iG-3ZV&f;P`.^qnrssmo*1pYLj]/
%X'O-d!^c+B6.uZTorkljM4r(uUD]o4KesP@J8BZsF<uC<:eg+.92"pu5e\2Ud`g^N$UDgDn04sIco"W-OaS[U&'U&ZO:?i3pe+EH
%M?Td5'$i;&*U(R`%A@97;ELS7eAN<qU7d#O2^S5)qhRRZ@'UuJiGq$q1>MQ6qnrO?9$.;:T\Oojck!Nu7tN$#SYR(%kbW/>6tD49
%_1FgnEKCg<>n^?)7H#&$-Pq`hP!c(@,pS.ANGoP7,8r8E#&)`^m6I=4YX7JWSL<K2LE`!7/)hJ6P[G2(\#]jKS*FK8GmC$i`1C),
%JMnD,HL,>".!mnJ3$N/#F4lW:JLZHXrh3toa#u$u6blF,L(V[*K94k2g1`VU:I-#,4Oe7*S#n5%&IY`tX$otrM>g>'XQ,17G"j8H
%!aUh%'H&`21fqbRM5W`Tj[5Q,ja!Y24cYV\\RF2N!-CYTP+6]i'U?kt"U)2!<f9M?LSCA'hiSb>_c7!]KbrRBS:P)SHYQS3aH:3D
%HV.Y,=B0OO%%D&(!/)OSb933)7ZJ3M-1Sj:3(^Jng[qf(iX*,d'0"6V9+#paNf;g&Pk[o=gOX7FDH$1''M_5iNSP0(D>S>FJciTG
%RG.;6C6LPf0+d\d=(G9DKgt1@2r#E3kIAAXRa-!R;8D+t<"lnprqAX+ce_d;h;UYkVRDcR6k3jn7j4@Tb!raA5RB_]Due557dNaW
%:'*_)BZ-\sT`tW'PR`?U\LWkk@2O1IVfKcn&5Eah8DJ/t9\JWu;:9%[7mJMBLhD$Nd)DpL&;ID:NSX*93!g'N7SAVBJuLX5Q)'Ph
%Kt]qF>V"oYo,n3.`Ck7(kL68Mg9uYEOI:8_Gbc/m(MOJMb*M6&+sBk#jhl'F&]B<^if"4r='i\(5k=%UhH1m2P+i5h2T:OpP59fX
%s*eL<'phd:-OtqCED;W;dOGqUgdd&GB[dm\!JlALKUgY,ko'?')?kk=c!2aZ@@GC024#R]/<\5(&V>R7d;tm,,1T&F!s%cW@=a<c
%]r]:W^:l@`EFY/IV@#X2jTWYYZp!9d61i/$j+>'BhI_<eHXI_p,P7_Y'XVu*+p8of/e)3E#5))'5\Upl;J,gQCMaBCLPW#4&otl,
%HUs`=BRER$5_n"^Eum7N_JB4q!+NR[kMo$$?;b1^M7d33,^(_?hFGd&RcIdg:'*#0(\.C1qj4N#\+>Z%@9f2?\LLW=@8oe<Pi`is
%@/J=t$,0l(#]?B5m0FVNJ"`5d./=.Y*1/+-KBY,/G1gXtVT1W$#R".tfOWg^RB1r!UUG\(UmUs\LCG#"ergsR&6bEOJN!3K\m!$<
%@4dLG<GqS>#i#4bE0s$q>GKMqkOYA-Cbm07'pRU$2LB4CmT/8W:,0ar%n;hZ4tjl?'eBtMp;BrMbL/N=8kl7dUFgW$pdn5C0[('f
%p-;iMXnTC&h>$!QYe)nT2WWL[-S8-pA-I/9C1<<\]Kkm4KXrM>=%=R6NckgfoXSrA[fGn)!tf(V6B:0s+J]JSZH^*nOAj6W<92P"
%o6IWG)?E]!,hj,kCSCMe5ej.h19F4^V2pd`gAo'F'mW<jI=5oFF5%&r=6WOHUul@0g_K+A$"J#f*V%oP`GnG=AOW9Q!BL9^+]lOT
%l97$,6Sq[0B">"4YuuO'_YkE5g3@U?q5NFh7d`UL$sEDKA-f_Qbr.g@WnD!Vqp[U6c:uTsJa=ptk>@t(Xn$GgL)^fR[ALs1Pe8Ag
%O>1E0L="X#0QR&=5'5*e`i"f<%3:PgiE[VS$5IJOImZ_L5NLRBA3OiKf%KeM,Joe/B\S&bbpR-q4W]6sT5l,Zn@0bS9YtsI7Dsjj
%Z`g18HJB9UU?+p:%3TODA.qIkEEkjthJ2U`$GFp?g/&0/(Y&f4AT\"4AcT/HQd[7n@^H;s#dX]o,E!"eb@S_QXCFSEBY(Q]6E]X9
%-:>.EkTJSoc+M!R$+$PB!B,i.GYd8N7J#30p0,TQ6OA-ZCF;b]fF0sq4=fIqbs3pib&YjOXp!gQLh=HYd#Lp2pGs1N6]^7Xn@1I.
%6QkcST_5,Ik2I/:4!KF_?Dt$\54K:@J!eW4`&V.;3[[`]c#"P-C)`W43Ri:pRi[ni32ZF(jJF_/Pa,8]e<8t=AP$_V*G0::"<_UG
%HnU'^U.q5&=e!ht6qYlp^E:`iEJlOJpUI)T[@`(`B4$sBEB9^=Z[L":JV.9+AhbTr"Lcb<h$5)KFC5TDb?`Ke#DYW@'[H?CJt:ou
%C3W59[7;TJBP?4Qj#gic7k6JCM#q]-IT+T%WE3ueiri\1;c>oFlVIdN@16$<jI<k!L2'pfab<g@HkmP4,sZ,J%-?KA"VdEL-=<\/
%RRaoU(^D%$'S6Ps#S+(UT(S4X1A4FmMZh6sHu0"[0j@nc2F<%gdANX;PJCaCTHbk:\UcXTJ4TW`BV#['BG?VtVV]5]6:5W6*"545
%SgSVo)TN8WLOnpt!^Jf*qJA(@R<)Y3k_V%YZ?+!Q%W9ODS9KPjUeDhe#Zbs$(di/+9ACGa"f-RD<b/75\"VMJR:mpXUrV_H][sF5
%H#a'IEWrhVK;T4M(akTO7]lX.$pWY',ul2**hAcd&;=c,RrOkj$e8YcZ)I>DWNHm6P4ob6IOJ4tQh$'r$hrIW;V]T`?%?%5h6D1E
%Q&49Y9KO7TAOJ/4-+GN0GPQ2d%Q=Z6B<W+?7@/CPgbJ%R;K2pi#@ddWg&LbC6Jt6S0'Hkb-$g?KSkY%IE6C1!IqptM,t.2Er<`,6
%1iM5+G?fG[*/1&6[fmZuG4U^.cQLNb,C\U0`;pP<)VHrq+C$FJIGm@D"@KP.5"159nH0"D1uA^No5tL[-rCXu+[!3f+Q-,h!Dq^Z
%P5o[K%HU`b]4fjrp!%9;jN8=<E@2HQfS=#L)XSE\mKH[U>4J@/#Q<=<#CQS_hS<Y6$H,CO0^ApAb_)RK-e:AJjW*+jG0cKuhJENg
%ll8k-1Qs33,&]3a5qsl6J1>2?)&Dh+H'@j/N%B%CUeK/X=`1[AD&n>oi<OC**70d7e65JZ"TkB:JM$^:&q6^?'PMaN*'5Q)'U-=$
%*6<p^+55A'59GoU+:?nJ`Mi;%/h8i,I,g&jR!,!$6/%*Yg:uN<MB[b9AL<`37a5#U/B(/*>`n'@lnC3`pauu>(:ZsZQ56b?&M<$>
%!>S40,N"q7SfFg@(0@qW$m1Il>nbSiXXH6g+i+SKk"]1l(^(IMZM;!6NpoPe58I;$NK,@S6@qaK#7#$D1;Z]c@UL`@%imU+5WCU?
%)T8Ydg$o-gR@q(-D=+D5_bb(O7-120Jno0/2pDC.)@W+I.<NGYMF].LX0GL8iVQ(hLKq00nMj!A=/\3i!]TqW.[P:XU+"h6f,-E)
%KY4i4feK@q)`U\LZ>Jr)0As\r?SWiG+p"[41(2tVNb$Hc.?k=L+%9F>/Pl5c2.6[7<%*KK7uK+BQ*4_gL%9,d>^TU6P_.7?UE%=8
%$SpKsWoI6U1cH!URWjEuV]UNV8=SP[Hd(*f=iP@>CMHR8J#JSt6MoT'\I#]HD!Jgse4pQ,<tq.VR";O)!o&puL!W3gYQ:F[)jkR]
%2h^tRZ^tqMjpO:U#27(6[,kaC0n?YL'd>)F8h%Eg2ZpHG<>^j.M\ZD9LYDgC^N;\i?T7?Uq,RA"q:.,h&>mmuNOhKACO:]fAFS\*
%28n$(D+r-Tj.kJ&#`[(njdC,kgaEPO.>A`Dlo=4(CpjcmLZL@1RmYd0H>RI'j\W*7h2HfY8J%\/lOplSVAIk#Q%7k9F+Yd\ont?s
%"eE+0Qf,-niUIq3dW(/_)IIW>l[)o1RL>6&PH.[aeL7BZlrV8j8f+(M0Bo[eA)%)_;CoU!Q#O3f93%3KM35dV(2eCakk^9L!mTc8
%.h\EgP'Sa!Y7Kr^W-67^2h+s<m`"e5N]>g;Ji04\<P1SeLukt)Khm7r5<s8</3FG,/q?&:hW6qI>:sP3]076=Onjg3TQ7P_0'GB;
%<.Vm9NfSQdZBo*oq#a#u,9nP$V^&qY'InP:RY5)c.tuaX>_ART"+Bbr)E]`TK1("[C)YQ_CjD/+_gR=&.`W]#DkPg-%5]n!i)V6X
%3.2VhAhI>7_kNNF]e$F!#*ugQT+q7E%CttTI*$]-%5i*!9/_BSTn.Lq_=!c!\?(ta\rmG\;&\mr>mpLn""/p$[g2'oeSU")h3KSE
%mP&[/4_Z^)/*+<s6!\Q:[5hhd&fT.%J8A*5keslfcU8PDnU$fllW?&iCmEp^Ch5'ti/^CB.QQ&=]dXH]i@Zt>>o+;:Y4:UgH[*X:
%E,%*I3.$?O.M`1G$AglW[6V!*+nmEOP(CrjChB%F[OiH4*c<Qm,T9%hJAXO%\Fg:$Qcp+1?7l;J^O$'3^.\38r.B@<D<$_fg,5uY
%DA8i)gNT3+)[\O_E6Y0>W.0Z)I^U9Beg<Ba.pI:]\s7VW3CdI#p7h]"ZWEA4@KE\U'^F@''83V^U.LnLi(&`=fqLq"nURgnjX?E>
%2iReepP&/iQ`bF0@Koo?>0$$oVRMn60"5WToa3e'qB[gM*3R`(JBFb:)=T]_/Z99m/Yb+`TaCoka5]'-4N/H8*nsF<%EZ]"7I`=5
%!srRbL0+^!7,$LR&dl.XP-762XtW.j4#4&lAao-A'Y#+0..=<Jni`4c3b#Nhkp(3RW8SVGbiV]DmOC_S%'koO(7KO^L^LE\fSg/+
%;29Og3.F3p(]6UGfG6hjk`JDW#@'u!!^2N&2,6U3Kmrq_$1.bH$r1J$pd@Xe+0uqNGBu*]iF)PI_h[S$FirFhO)"GpY^-ic0XXG!
%XG-RqIb#8V$t!4h(jg1Y_W6ea=0CiC'e&ST6Tqt%RR,pYiRSe"kfls[Y3i^g=U*LJU0"+GJ!k5iFgR05d05?9+r;T"E/JKHO8Ft`
%Lo5oZ!HR!EY3GJiXft.fY!ND='A/u24<Fc^NE/E,*kNg9EK&tu$J=eJe0TCZ7;CUhLc#E.pC0.RE@!MR$TkNcn&Zi/@O43J#6dS;
%(GBb$D:Z0+ig(Wu\685lDu`^&ens3;`Yfa$N=AcG-S]O0j"bj.k-DgL*,0P4;iLpAbEC\8@uO/`KUJ[8JK$:1j#s'/S"4g]_4jPY
%a]rgf7D>`E!YX\7QQLi@Co0jZJ3Km3>`Nr^+s<"M@;FQ8,lsTHp'SA"QPYIN/3r:TL4Y7n8Tocp\,a'+=;fCp6laMLL8c>C=r8qb
%Y9GhH`&XH@/p];06u'NgNEF2@4V>f5Yf0&>R<K@)"-0'G:J2n$lQ$'[C*9GoEc=.dgZ*/tLcVt(r4r)JE=F2K5\6HQ+"d6f"YRt<
%(PR9g][k#.>[+AD/Vs*.V<<B%jT!Si'p>T&4qo*Td(+u#YN;//h-g[g/0PYY->k70UgU)'m.Aro+47>AjEk_?S=YY!hlcJe:$.)3
%WY%tM;(XBfV&+DZ(RMA\GP0ZcqoJs!&fd/'Kdi532gW_;;&I?N;:n/^9;h1_/1Uf$?k8))HsK0^ndbD,\;&'Eh!N#uOg!Th`]l@F
%3+$XNT!]&2(5_E':EkJ:/&>N^\@.E&;-Hk*XCU+SU`@RRm;^+GQ<&&HOQ&q.iRr/h0/hGE9:#A<2V]\f&;^MoTcR"X4pl)S`lGRH
%[jYLY+\!IRmTSZb*K/0R>`ralGpNL+Zo>";:%?VR.o=UNY!<(rgh*.J&Ac*P`<fcWL_e#S7o:,sjcuJ:liTF)@53t?/B]pf\>/K2
%i?JZGm[%^@kgF?DF!IF'Bg6/H>Kb(-6'*j$!Lr`V$T6>$nuO?e[Xe8<igNT^Q,gH+a,-HI?ZXQF)EM+U!o&Jr^,?FOJKKZ7n?mi2
%#"A/LZbZ.BWfh9,1mShjjX`fq;&@(kXoc['2b>\W#U>uLij?HWhtbL)nPt-X+OgKfB<LVgm`8hFn8VI<03<OUP"7u$37q"6D3u.H
%B3M>2R#;nt!PUAIe<(rE_A<s1rp_jXi&t[$h>hFX^Mnqfr(!5-1FI29h\9MiQ"gpO^eHHDW[:uc`n*@mSLVija_+f>$p:oIE<=]%
%c*N_r##RgEimr'\6DWZmjrd?X)J*>jLr1+9:@hoDK`^`F_nMFP\q^=JCU.n]>hEud^$ZlK5s6_WemL)47%RciR2TJgs5@p#J\UL_
%3`3X5c)Ls4,!@J70=Cn,Q6VALVE"trbRJ^Edc3;R:gAW\H4!M?aOr7Pm4F_01`V?:#Q`+CJXB;j(-SUncLg*&<(7oc*:;*M<sbd3
%V'lXEhQH2JjLf?D]]@G-/$hbuj]-7e7,su\_j,-nBdL%fBl$_.M(GtmILM5%Y\Z*7oEoB-cnUJ$33J,[V*0ip%]T/Zm$Jkar+AYa
%/a3Tu,KrhSXpnBk`.C=CX)VX]>U[Q@%HpjrlAK>?>B9,pqHm;hTl17pgO[]g5[OAF.+]+n7^9,WpFO@0Y<#Va$3S>i-9I#]A,&f^
%2X8g%9Yn"[&^:YMQWq$u'&abgG3')uW2<t/(0hI=oS'XK[A:a1U.*.Kg5?=K4Gc&XgHcT&p`(a*(252K1?,#;NrF"b;j?4X='bqQ
%2I-U!MEl$`9`eSbV.<'=j.H^cLQW0m=jir^=Q0XS$#RC"N<B$K)(9W]TKXt^"#3GGNmBV%I'^0"AHP-*o/]`=HseBJHo-<rLi9<D
%O[?98aXd[EE=,X:D*CA)(N)[1"9*1,,a&J[LUaZXmO4h0G9d+=#3;3F3MEEi#>k4#C9C6_?477kKHbU!<4,giIRNjWkOtsu!dEh5
%gO[LP=B6aNY:\'c*R>Kbi6NeYa>3L$>N4`8G7V9$W[0<N%n8Qc`20'$^>qooEc&9=AZ8p1Cd:%?BZ`,J1ONqtD+npS2&M)"r4k0X
%,i?,in$GMmc$"M,0RK+&LsOU;S7"7GZ2rkRW?U.bNkM,lri-nAC9^(/+CBIBm2U\o38K!k)h57BLfD*3752S>;Xp<s!FKW^:h/(^
%+lGjX\N1QL.LYX">SV;_Ct+95'JAQ&VO'3kH76fhTD4*+[[$BH>V8iAM4W?`/p(_S(]RbpIs/dH:mQ#nfML7@@nnGt!?-@TIPtU:
%;juj(8m4!kKNI^_g[01HG`nI^rN!&1Rs8!$>,B.G6,Tr^Q!CX2gk]O"WT5Q_Jcp*t+e2FbmsJiP0W&TX?)*=jW4Ns7<dWujT"4M_
%.LOOl`*\4+OH:-E-qu]\94!Y)TZFo+gW`RJ#)$Z+;&AB#"A!%ucCuOBKsCaD"He*t"Corq<c#n:K-F&YZ6@hY>TifKCJ+?A/:QU-
%YWdP6OQfN<\JgPkU3q@:/LmIU/"lAD(e7)/B^o/983$/t54FXsPbE+J$pG[UAuUEp&f@:9G^X6h8LIjdjOBG0h7IUC9'9k.lui;F
%*)(#\Q-dCLAtN@N'$=SaF39$e;&uaFhm7AW.7;%UbSQZ-H3aPNkYYDJL[r7oQTslRfC_Z@Xna<0CU(:%$<hC-<fC1W^BYL\k$',Y
%T8qV?=IEKsOoR8h?1[5k6dOEW)BjS/i3<WJT!mVPE&e#-B$U(UN[Yb8phPJY^/a^*7JIe)*u2tFJKrKq5u^`$7cfC&ojQ63Sf#`]
%d`1n0nf^C"6<R8cX$&Oj<;RlK&1tjqMRXDM@65Z@RZL<efp39Z;:BD/+79Jib4t!YS9*[o&]G4b]CGX<3-tZ8NO#NsP:\krE9I+T
%q(sAOLYES]o5Q?RC@Kb%EBg2g>Z2O[g?-h4DZ(&t#caV27^fst$^eFW0ZGarU.*R!H_r:@8!=%q9)*;daE+i8`teDHN)aXrEFXPQ
%Go>E"CVF;,@Erj=Zls0SPG]-(g-6`qn:;1NP%>)25!odXoT'!p+8iqs-AI@RJ1DX"b4eR92J4*i"_j8=r:)3,+V9KNU8!Ma=34RN
%U]X1]OcU/Pd`mg3;BP^4rY1ZCN9CF71>_//K'fMYdL,!;8#a!:OM;^Q/8VnU:$X+'rH/869YhZplCQMS]!u7jHj7HRO#6CSWR+n`
%iT&K,M2d6L;!H72UnIc14&d1D!IdrE%GN4-eNQ0T'LWQ8QS/K8\]Ia\9`i`5"6VD9Gh0^ELWQ"g0.WWJ`FKB"/RKYYTgD7iLfb+(
%Q/[A;N>^7ZUP<#o"4F[_fGHK;Q54.,qK#b.3KE'3D&IuI[^;_O0/OG`^gE<_U.O<U0HTG8_$EJ;3RXQKo`YAR9Du@B-]ipUS.V49
%Uq'\bgEAcQiM;4d4/Us-MYdgE0=GP-8L%)4TYuJ;We/"s9TW9.P\dLs@e-agJLF=uUP2o$49K^mdq3,WOr1-n;i;%'U^Gn7T2a5H
%L7EiIUYNYd9jqPA;-AKHr-]8h25";>N5R;L)Zo(m\d\aIAME=<op9RXn#N"m.)2e^:k"Cc,@#.&fpoKhZlQX,#,5'aa4u&aEBRgs
%Bs5+1U[)WNk)]`WH86DYm,T9nDjj%>[\Unb[FoB%+FXo&&SdZn_0[n5Ur^O84&j.NEcHkeanrDA^FO6sjT?WQnN<>-M[TCWEa!!A
%4\'gr*4^bA=<]!M7("#iKu"-+V=RU-C&&.fY/FQjn&[R%gc4`6;.YQ!5"l+F9)GKSQE6FgHmt=>NIN4>JVW!.SA2]H-%K7*,\BnV
%KL[[J3i](U$/NqJi9?hS^eQ$,jXCl3<`+@N"4e4u$aiO(o66iE`SF%g8]cNt8\?4Xig<h.V`uC>Opsa./CPU\+#\#Zrr:Yu],jV.
%,X(UfJGqoAp9%B$iSX&GFMf()OH:*3?*^^E5o6<O*as`%RDmDB')V.ZcYMZ_,0i2OQ!'Bch'?_8E\"7:iqS;>\UD1]k[`ReQB?^-
%%,;Nn9kpt$MZ/N=ateHXim;``Klg(n=FD]F[)nHDDC>DHc+Z`*g%IsJn]"NX^3"+Hc!+6+n@GRKnUcuqlft)@X`c,E#O"US8j+TI
%_?4Xh27PaZoW9l_Z%0DI%PiP^[K]1YaA+=f^(tg<42ce=]_>@EjQe=YFs3a<IeHj08?9[(.tFu6d^$GADgSLrXQb/.o@a5\`['D7
%DmQ#net(5f,j)l4B$!`482'k19Np?r+&*"DY>eLl@$;ARm8uY)+ae1IppR`/cRa[:(Kg[r@K370)l7ir+9iiVb?B6BS!LBiVp/sX
%3Glma+FoK<A4lpHRij/:Y'UN6<m^@,0HbCj,O=Z.?\14MHLo9He6;Hcg(GB=E)&0A<Bmqd<?_gnM[36d,3NT'=bN_heeKs/0%Nu\
%15a-ZfeCo7>s=jd2YRD/M;9hL3h&T,!O3l4A:icLF_P$hJC:%==d'RZU,li5X1PuR<+<$N2##oWr*q[!l6[CnR8r&^S0WX_88Zm=
%_.92d_TJ\!hGf=)Flr%W(Q;^9fTGT>aWuf%R?#Hrc@4.o&_CD9h>k-/1K^lU2Y3FJF*3U?M]2,<]j?K+i_g39qKk3*"EV%.:%7LY
%p=OKA]]1NUDn7H$>OeJ1d4+R,"Y]J\geX`pOojgLZt.VoW)RtQo2Y%^g.'!@c/]MK1Gc)@E\ks4&UEK7"\Xf4<c"S0"S,9!CE$;B
%"P&%W:dGAFTr3TVl&=#[o?t4U`"Ss7R4<7a6E6Vh>B*fG>0&Bg&oKc.ASP*qc=9P>8dZ=5P#8iA8;fT45)YXW_bl9Jjq=%4ZfT^^
%=qIdWW3nJJs1MRge=;&"N%tu]=k$o^mbZ;7SL'IP<;dTL5p5ccIPX]W6h*Wc_&CE?s1ob`:,qB:m,g@2WOPa2O>Y-Eo!U=",Mq,Z
%^X29rr2?*<ZD/[imO^\(=crBBANRODD$CLqHU_m!&R<Jd>&ikY#qY,&5<bE*pkpuNOThtW4PA6,jeE\!_b,!.1(U1:Nf^p//l78n
%YP)5f_^DFp.bPS7mej/j^9u+G!Yr_+W[-lVrP8Op"@'>?g,1Rj_,UlNn5,G>+QR>TBX]KP#mnJ=ZCu0-*P<tC*f25KU1tNb',7;9
%1d>UG]:c(CF$Q$2GYq6`4bkfOTI.$GW<.7H-'g-n.aZ-6aD7ua$d,2"cB0mtlXsF*YStCjqmor-cX$B3BD3B_Tc-=%WcN2]T`!.H
%F0W;B*Ii,cET@F4g.@-<OZ[r?Sg0VP;$iK6:TI^j02Y--oA'@-B6hY.L^'lD8c"P)Z]\EN=pa"do$K,kZ\kFCe[?ZqlkU>3Fq72-
%nsj7Lm:>,JGlGpD^'OD_'ilYu!$1s3/Xs0)1WVJh+OMuE!IM,pD@KOBf&8Upo2+-G<&(rsTBbQ2g?fFmIti\==htlo]?%fSqF#01
%`ZPO=,Lr?<@Nn_?9($e0b&.N56a\TCSY&*d^Paq(0i=/U?;"rB.i`0k+[JV=D4lUUc1(k!EX>AtEFDrS,Po$i]gIB_"S&[W6amU1
%)LS6Jf?+g')XWXae_[&gQDEa5p''Fu1Y!nU/WpLH.XpsINKjCX/c#NJi.YE\3n.No4S;?D4hgJeXYu!FV$5>HKJlD7o?@>FeiY0I
%SaJDV2_=66MS,"1CUTo<gtCCWb.jPdiu\GrbfKNZpUc,*r[(],d"VOL*plQLQB!ud%pMM]+re\1&#J>u:L8JCPGZR=Br;tfKpj!N
%1G=D!;-R;[1+[@IX?89u6nZBaOE^oJ/mTuCSW2^'+h7A8G"r>,m!MOa2M]50@7BUTMjiAQVr(TT&3@RVYNWg0k1FCm+>3S%[:Xo3
%#fo^?fZfO7'-J^/9qiADG"Yg-BX,O`%%D=>\Rl5l^qCFD6Lm2Kp/P=sgXZ2^(%UW:,#eshhUW6uPIk_Rc;"j7\TLDFPs&YuK+N48
%TQ`;-1::4WAeo7&:i3]f7pR<JZirQQ!3lB/Qc<QEYC>C"0YLeL!?tNi,spm2_-Bb$@'&]%[GMabV?d+:()K_Xl\^"g@nuO"@6h&m
%B%Ljp%28o27('0.VW%o''#!,K1aDE\etHqBi[Hq*m4,j?0$t*\/dg%p4l&f]md$U]U`YPac.tNng6h?aU5=!E;(/FY6gl`Oo'jSN
%0!CiYlcKp]/i%L'-,l2siN>SHW)bXE`R<7g;UBLnn5Ro>3jk4F61Y'`mQ>b9b9l:*_m.rY5t,XM+SF[/9mhA0*^bpY%pBZGnjeC&
%-3k[,4l0C%6X=:_C\YnrPj&%Tk0WBGkCtb26nNfrGS;X>3i#WBX6NCSjtm=T0BHm:=2S.GUffmgW+lk:_6tu>$)?%.RjeX!<A48*
%8l5U!\4.]cn(_VVqkB1?_YR_AO"*"rXZ4W70R1%HTW2(7h-'uU^t=8eMW1%^<qMS,?eB!3Z+ornUK:+[kt3sk7&ebL43RDrg[s4s
%)O1*2OEai.*r;su?(a]Cai0jZIT#HkL'_!rXr1KB;LXk#$i@'?%<%+L?fn)_V97i0%^Rfa%urk\e=49u0bloQQpGii'NP)Hja3k<
%6AH\aC>a8!DnN[(N\(s[R=$-fYjUMNWATEM`JOmsGM\jhJmJ3SpZdY[UWKPhB9r4BX_tL5*GZt090?T=;hf7k@ftb@8\pIN3cR]R
%-p_+6blQ^YG*V3q8L6(Yr7fX\?)\!#m8?S26fP2=.49n_YBF/GZf],"VYU'p%gr`Bj5\`[)GAni)&m[)ng[J!YafYB?3^DMfV<(2
%07;rYq>nEFqMd>kB$SM4[uF[!nLQYuI46o'#9J+?L3GC$s,h=G'Rda4K9@Wb"Ei92hJi(<TmI:OR(2X?S"d2Wm6JOkS]*H)[nOR`
%cMM"()aqXa9kf!Xe8Om_.bCi7m\lF^*\g8fI5utS;ceq9MEfut?2ci&pR(]Y\V`&bdOg4qMM$\Cmd,JK@jUI+GMDl-Dl(:7\@=0'
%rV!jqNe72ah0Zj[-D(8\>X8QFaH,I/.ot!FQ'bVu"Oh7k2KF>_hgJ<oJ4;d"[!oK?$cqSjie48k3I<i.V2#nS92X?d?JH*+O=R`(
%KMYkD##HtY1bf=pO<Y>J<EeM#hHDifh+]UE1@DKfr,Z,^_)*Ja?_F4'OAV`V652oD:iJ^`6-QW:>@,K%7JPiD:CDlPY@<th?<:FR
%;aBm2DG6>r7=h\ESk09DpSHT^:tN<H9hSK?e-YHtCr`G8q#i57F[cdoWrb"E'CjS3OSOZ!1H3oL$cS58J'tm[V6$S&&Q`X-CTER_
%B$734cVAO#*Io2:ns6Y1K6p?Ko!lb<O4La"@XcZUTUshJl.X,R&a$d"L+b#j3p0N!1kmkN]UeJ'I=n`g9S3GrCZ*S%*E5<I"Ee(%
%/tE!(]Agq""$faT]+#M1;,.(gAK2E=Lp1VKLYSrm]?YChle:m?0Ks-;lfr,E/De&YYgAO7/:<1a=>0;6b$MAB^oAs?,q0<j)XH)q
%\ZbGFokbN:Kl):Q7XCmJ'jablFc*`lDPb.V9"(8=*fmZPg`T2YbKG*dQa_GT)1rEEOO`kr589;ch+i;ZdSA\)0Ae'^hWBRn$Y7EK
%'2eWL/MJJ.*"!MAj,nTalMgWcio0RfRp)G]elu8@\Hg'#9WaqU+Lu3U/TR.=AM.:5j)F<B,k,0F]b^/.83HnJrq]p[iUu(M"28+N
%c<$+#">]HedqJs3#pS2gdP1X(d!SfC[+Z4gB`YJ\>9R[:<Zb1VMKqf,&Te$8MXE^dN+StF(*P:"(pGi25.,Z"G64$Ii09s2NBq&&
%_Z9L$Ug!D=VSfrn%r$QjK%X#fpWaFuGg5YFmQNW?R?@;?7GH26&K_B%UnZXS]L!UXqN6@pop*Ya1>d:"brqJ!VURE%0F`lVoEc$s
%$:?`^6DD/Op$n$+%')0[dLrp2;2G;jHV#5'`k.`1Y.VZU8+EYg2a1T+72`"7IcD]^W/>132-Vg*bkt9OI@IeZN`ZCKlL?SMI^o+[
%`moPhD>(G_>Ofu,F<qCY.!2kX:(s'+lUs<:I_R?X44cD=XZ2M4\OkI0%(*_hcWniN)&<MDX11D=:,\Fp$Jbgc#:3Sf;ae2O3jJ*c
%5n+/;OgC->[_5Q;43SRB=$283`"?YI&\+\OMAd>kREAst4_3Eb.&$iTP"pW5iC-^bJn5.bM>/aF$g`Nh*V_q+BaRsd#(TIC(Eb*o
%E=Op8<f/pd+bm;!Q864#F&eu7.i5N`8#*I<&LM':I=RQ]iN%kN<@Q#:&]uZ>eo:*`%7ufeN2`f&J/r*ZP."=u0u=];g2]+ks5^*S
%\'K'Z%ECWc%p_!R%J*o4pa8&o<X:f@0!<L!Mid8RI!alA$&2[[EC\#RMkYu>K\#V\aS'7"JK*kMB[ZfN#2b=&kG7p=d(d+-mbT!D
%GKe;hF?Q=QI@a.JDd94taDdPZRU&dRL%@2/B&n1Q&<l8`,]?gF)L,;^5X$6FeHe_oLZ"U7GKJ3rdK'qV1n6]9+n5#]*g4#YnMP(j
%,YpSY)m.<(s71;Ii6B&%g;1IohTZC4YL@Q&]Ub%<\!+O4Q^cNP\22is2YQ6)c_`l:n+$5g1ZBVhRnPei&Kae:au:nnnacB:g?%ET
%\q]>&YP.3cL+?rU5]L6bio>kd3`in/KtVr%G^98^8%PErV4N0P&^S3\MVYfAloj@eorkHUfN4OF4`<l:fr@J'n"5b`ds8.bcjh_D
%:2,ZuqMu%R`il%UNXU%R*gl-]qH`*MZP7XCo%b<h$=F$;3?MDh69K55jn67(1J@--,>7Er4gNT![gq27q<U9(RADN/G3"R0`K,Cd
%fnKS>>ZUbDn]Vk8R@:^&WaB8$'-J>3<WNrU[KG-<jcmo]2AITe,/oum:2Q83<\=sl_]#NuQQo4\]ecMtTr@,25,H"mZBu)Dk@qW<
%H+\GQ/LV1Q6*U+dTMk;RC#+^W&QNg>7tKfGTnmA?O]I+5[!Z3lY$`R90n<_F2NZ.`+$!h*$It5]4MRch#a%fpJo9$IBMscXABRu)
%^Gi+8d/p=0!+,eA6L1_uPPefEeJ"ZS1Au=i1Fln+JWjAbU26=TbT^6/KjOH3PU!;lR]]FZMiVUVi$15KoMLOcXV;I0onE<g+q!bm
%AmZfZUO3+eA@b'?aFp[C4d*1eR&gOuR&+GB0-tJ5g)\hi;CoPQ`;%3'(?K'W^6Q2k:HK1P:);qeZYrtgZ_:@^js*B_]24l&XS[@l
%+?di50u`oYXQlXbVY89cZJ]"G4qGBaZ)73%+cn>q?D'hZCBS'!AtU?B-$Y(N`M[SNW^[lN<]+"/q=:?p/>?WhVn]]96q%:,L*^mH
%"8c$B'XcS=\@:.P2ZT&?H(V#K$/:d:9:^u2=VZ]iS5mrj\ZhLL6L%?H67[n%k^VkTVE?tU@);%Q@k&rT%4)jU00q6a5]n98@")1?
%Gq`]^g1^]e`Q_5%+BIf:<FMu1a%A4F/buMEK[pSD7`;AV>W5WE7jfY";\@`Z;#m4A(-%g?UH9NlfZ_[bJ(fZ"ZDF-pb:$(5>Q6/E
%?COdWQbT//\O*[[8CfS"$Q-1!L`d3B[49Vn[3]In-8m?n"RNA3*N-O^V]R=Eph7s;a;?TOJJLHroW5>0%O$A$?Q@%h<[j6;0qA"7
%i@&\rosVkL[ZV_.7*"E:>eOe9j9Y.Nq?ct4a3.'bn&L-!fo09m2:CVR*O_-]D`(Di`L=gBWFBh.HjTE<\0j#NYhi%(5`U;Fp3Xn;
%%mW/a7geIE`QtV0.c%V7=V1!hXKD<1h.d>"eYGZ3XX>Hg!+C;X<!1kF"ub&+fj;l/]7t$H!L6O5HGsiNWYjUliCbrXrBT:aGjl15
%4g&"sVrh:EPS)oCd^o/Y\_6AB=6)otk2PrA,Sr7/5.,`HF=ZemT9O/Yc5;k_Xh-?W%,&i0J,@2\LQPq*ip0.Yf3"DGfu1CIX<@^f
%mjc(.#N9?6&C:eZ]pPPr-l.;0.ZUZR\d;IQI4Fr;cY`#fO4<(s6O#qVF^q].WRR0t6TZFBa<Eldd"mBYU&W@cGMRH!KkQ$1lS1nF
%U0FU^023H/CrHq_(oLD[+^"=?Nd:NuLDsR3>4&Lh?XPchJ=]$PjCQoH5R;,?SK3P^c9rgSWV85>>?t$EZ[k/-?$$cm$*H7hNTON<
%eFXQbWi@/c^5D+2r>]%]d^GNLb*MDa#+FLj?3qoG6MW==Ue:l:Z0"J#0<'TLRMVGqe=Z:cYK:8'6D*F`qn$c.0+2+*/gk>]6mB=F
%r2:%7R`Nljh;]o`RUhu"%6!hC=+U2SCe.=%lM%UB=Y3h`CTjd?/BG%0.R]too:&'U<>7mYl1^ju#4LtG+g;S]_2344-NN\Z[5)hf
%*7JXBTJm8MJ/pPupOF3pH)kF?X&U=neR+]ak\7ka"QgQIp?bI7G`3<\R*0CWm\@`gX"%X:Kt0h_!-L0@@[?Ul82S,]ka8G?[5nX>
%)@7tQ]76/(/sHU!o%(0-SEh!*RZqjG$b.K[hn!aZK*_co!:jS,ai+p-lh*$X7sf1g"<)F6@+@VYWj!*gk<+PL@-pHg_c/11O&T(q
%)a+q*3'N_?V[;8oB4SG`^fqL?/nG(c?[FFcn[V:a9r'J5Klf0O_2:/0><)dJgtN834b+#Q<Ieh?Sbh>U".`<g4\et!DFMp&+t>ZY
%4b(FtHJ!<`!W")?ZFZ\pB[hUIDlR/8<s$MFkMS.3ME7.aWTBJ8P%/qHnt/,!C'i2jW1_gj_U(#<G:Uf*lMlimU0s/4J`(?";)=(=
%<S2@>9/X,Kdmiu-:qT51VW:e>)B#C?n&Z_lIOp6FQV%Td^B`+2.c_K`\)f$K?A:YO.8u4d1S!&RfB0Ro":S:Q%BRN0$V+Q&0!h8`
%i*(FTL53FM-`MN;5&VXH8>p1YC7a^Y+Y7ee1:\_Of]M-F1Hh=KoY/1b3_7H2kMA+L$NFcH=OXe0EO"upL$oqb)".Q\In&)ZV^I=)
%;<ba-q0;@`5'qX`2E1$"\&V:b[(^efG1,;F`e#<Undl9gqV"(.dbq/'-UQ-F(WT1T\*5,29(q%e!R2Oo=qm8+;9:/+-`pKP!=5&#
%2**i/hW$(W943d)QP3qq6-Nl"aiUVn>4Ai>fcl%&<Jh7in,RW=@9q\NCp<pl'p/f<SF@fE1Nt@%HS6Lb6DR"'e`;WY2X_FiZ%h4*
%O3`oY.',Mh\l\c4e56=.HF&Y9Kjk2*D+K[ag"pE(]SBAhV.f!k2/lic87eg7kY\(U<c_#X(u1M#e$WneXO\_k?_SYFd7\LAPV+%G
%"'!O?mhmD1DRs"g4fp/53Mdi"(+tK5X$IWgoV%QT?'OLM^nK`\KTt!`"#r%8:noQkWi4es)4%9L>-r3l\Mt_Y8kTlqoiBZ$eZ_h<
%'O2qPReT/49%jBKFL1_QE"O6]DjLTh"uIOdDI_r59ngH4,^p;.H4tPRre$M?+<jPl;7\QkDtLh"+Ms?e>2hlW.9n*254?@fhMR[M
%THR49_m.nIFNHh=Ul#]+EsIm!E:64m*G7<?COO0UjDP)GO95YPLpIMc(Jj-QT?;r8L_/?eou.8O<7e`m;f=Y(FR$CiZgUb5l\X\C
%Q,pcD,R6TV64AC]>l[<"Fl?#_QVVaW]S1+ZD#pbBVhnN+@aO\Erueb--&tgp7jT*/Ol:aB(0dJVY+]^.4htY*^"co+$TLX75)@m5
%5dKuHTjUG6ULt3G"I/32k+EW+1u!RNdDP>YIK-0+TLtX%%.@Vr<A=0[;J&5i<%FBA\.rs,`<NH=$gea,>]p`MfSftmC=:$XW9-=3
%q!>s8AZ>6Pq;CO,[P[HgRq47@T[GSf8k&WH@UoC46Hj=>9sou+U^TlZ+kch,OCLVC1;j5LY:/t<2fME'PXjG<d9r`WEcD-3"e<[s
%8Ve-N+>ff$lYo5rNLH98+(VhPM*W4B-k20r?]7DT]dP!u@62=NlPpGq&8W/qVdSPJXSuc.Q3I1@M5ge]"Q/8r8LA+a</<%b)0;a2
%4`)@aqh-S$[loc&'n25sm5Mi*L42lfGTD,O>msAKqYHMl6m<B86;&is5$+SZ:0e$>C'>JJLpkUFqhLT9=jH`Ym3b-3%Y]fmpTNf1
%c?Q+Kql\/I^*YQLpF>0%FGH^&L^,ajbGu3c]bc3u\*fF9>st`P?;CksL+WVoYpsQs%\Va+_g5$oeY(m_N.Qh:%D-o9,_(PP/Td7[
%g2.,I2#FhDR\Qe1ed'[9H"tWMHCrL5IdMaDkl^W;MJ/`LS+(e8MC:mC9HFqr"=ON]a%&QT.;qAAoMB5G7#^H*A.rl5jGP&d,n&Jl
%TSGk85aEG`:l&DrVQP\$l4`BdZg4;]VFf63HDlY"D`d0V&;PS=/3S*t%1np[H74H>''t5l$8HHS9jA3_JdC8ad$0f41eqeaL][!*
%W1ac\@(2FC$DhptIAM]caejo"oMA"12uc/Q'ht*[9+;W4N/JHdKTqO$W+\NA>\^2cK%"(A.$S1bbXE$WZ+2J<78sse@$i.<^[q<V
%("$RMW8jV.-?[RUeJ(GO"<i+5'N#ImIqpL-U-ub!V21!P."=?/U*9pqDCM;L\`fa`];:]0$BI^Q1Cn6!:.$<[Zd_f"EB3<[L*h%;
%`Dq"V6UatMk+IGqSG#Uekb1hA8ktZnH@%'t<Y%o4SH[VIQ6)Kn$<)uJ5nAZO;nK!%&:.Hu$#1lQ;;IH'H>!B-8\K9WMCA'i9!qcY
%W"qppL6j*QXKuFt.AC#6c&#(*Kp^,9mYWEWUn[jbM"5u/mOt"WA(uZPE6q!UOX0tqdR8$*ka0de)3(WF(I^/,ZD[XL8e]`A<S*h/
%-CP?P/KIhgUfUQGP_1FmEV,/5.QQ%GC:ZusdoKtK1slH'e[@mC3\a?-\gX;Ipsr(K:"CB^XG?(WX-@SfTqWt*rLepd_&.R=dR035
%Ei"s@$8JIgiR1(rT92XV.&'P,$NCTnW7XR)H:njHE$j#4BNIT)I,i\6*]f98r.<t)LZ6(nl@XK26Z9F)^B$2KV<!Z-K,Vms%:J\"
%L<>G1qcO@c2g.BcTspZl\^aLl?;TuY23^[SV=uQ!1oV5YaL`@jH)?s(C+)J+7[>*qa/&P_4VUMpE6YP@)P;\fl_07e0(!eFPa28/
%T%$RkNBk%?*id6`OgOc-g\LeqHK`sG_*6lo-;CXH4DG;n426,r#G128=(&bFONut0?be2i\%=-XBpi<<.Rdl38cpTg5a">m;=-]d
%/h(]%.m=lR['3T-oc,'+nq00X/8I,T!IQ/h;KeM%dKOi]p7Fn@n-(Lk?]-Ag[pm:[p4AT>"Kh1?pMK7bV-R=<S'#Rk[TJiJ5ER?=
%@e0(W!PTiVU"[/*dBHPcR!`MnD!WG/D0n1YQBN%d[T^j+Yui,77"rM-NF6!lpTtHlHPOIpT#pWI?LV,-e_N&t*r=9=SlP(d80Gu.
%"H8MLDh,hQQ&iH'O?C?4?)hP!Enqs`n:aB/Gm[]UWu`ULlO'Ik8J&FrD6/7e;_Ap4G9A.;_`+8-BD((5U*Om;TormabC1&^cM2D.
%U1*YmJiKOLW`$3t0p$5H?9PElm3]cE*b+'bJW*='L_XOn,2.`!K"+h(XQ$LkA1d$%;a#lnKp%[,#LE_g@:1_GFLJ/WHTq7[.S3RN
%*10Qq9$Xa292^@YTKQp%cNF4W4b'lGd-B)lVkJ!O.d$+0'HM"qRH/]t3FUHq72AUNQ.^Y[UirFoXL"Rp,\".$UaV`^@K1RU=^4D*
%H9r0A?8E&3\=;u5"H=Gp,1m$Fok_0H5eQOh<CNaX=sI%J#4=eQF0I62%SQ*cdi`O/5c;n6j:.2i8C4XJjt;Iak/cmt/(K90U^[df
%lG`h!)BH_G7F7`.U#BhS7XA)j7poDRK]-;((/p6.3X4"DD'C3A`j3%<G0B;>m,TI5D%aLuK]L*d2;1&]"D@MKd_'a>^ip]3GC2,?
%"u\6$,_:j)<nVLi^cU[0NbYLh)QHuJTPRfW?8-9H=iUPaHhos>c-<j`eQ2_gIO1.38#q_rWNnL"WfJZV%KFW?K;#35*Rl?bN4T/M
%!.k``>-0=?NIsJ?9Dp<7,XW,B)f\>D7ejfnW`4Oi\$1n*:sgErdX[tn71BhjaWp7S"gn&lLKb5/,.J6^:Uq[b(H(S,(nR&1hL\O"
%c!W^+^NPmPUV_4J5aY$g0FDJ)*3H;+Vb-).IcU<AeL=t)PFt\*<b%-6bC;NDC6&G63aaqc^pU)fA$0bnL2q4#Tdje;1b-6k_@/!]
%,R*9=A0un@*))Ym<H-G7&8P7r8ha"Y.']@-(?>V=fteKkZ!dg(>@(t:Zjo`4=R+hW%nN!\6IJ/--2">p;1<,H:[=IQj_LiJMEu3!
%p9\ht,k:O6S4-!gAD;(."6)Ylo>!F-oln+U^W=fQL9W1!,l8#f%m5Hk>.&_QlB_-T83tGC7@YnT`<8U1"jj7mHLG/R]pCQdM-?oV
%5s_a_L>^sodM=_P[?dB*-59Ql9Bs;!M%d`Kd\7#hW^F)LQL\sSYg2#d=352$\*SI:<"LTjU9o:tLq,<6WhG:5.`>S($b'-k@AmY:
%*`]k31a(aZhR7;p3@oSo5Rb*^rF+F(#g,WOhS-I1O.RfN1'GbgIU1`m+78igW3dR6>asOQdMiM'TSZ/bebQU(T]ZPm]2bHTQ4f.t
%Zg=N_3;O1mX//gM)Y1L]+q,Ip+7>-TPD0K;61`*D\P!Kn>DV<pM8Md,&j1R$VL.IC`0%d"^NZ'Te1d<6LRCfo/c@MK2)e4$RJQ='
%hK8%<@*4t3NR)*S6/gD:<tO1CX/pr6nuW<=ED\m&2]/?P9HB!H0^Noi&$D:1q0_+:PL3C>^8Gm$>&er)2p>ss(MI'QA.PO(ETa;k
%/91bVD_*R?,$mQ5.O0d@%r3$)I)RJ#mprKub?>EUAG%^:p=R#V/2!.VKgY*fiJZ\OQ]n&bZ</aG:b0GL^^>i0?/&F?U=>GK)p(=b
%I5`H@e74p4K_3j;4BrJDRM*\$0%$LPF@nfUV1a#r[%K8?1+8I<_N7e;<`\V=G0SM\C4ep@DE!Z'UP!06QSM`[+/<qHXZi0:l"Z!q
%L=pt<-W+a:#I+UF<2GBf!lM',\E@G)%.@CB[82C"hh;$g-#I;WoF0ZIUth#<PE^D>MJ#**4"?1JLoLSR9s!W#"3+nndO#MP%?QLf
%28q$r`^P83)mp&(1^JZ!:sk#$b"<E7ST(&=XJAEF\BMtH)!"NAOFN9AM##]0RD;a0[93*VSuTgn,:_+S>$hp9,Q6W.l`3,oG9]3W
%]V22?Ou]%:d1>).+\$?=4.3s8<u.`G,@bQ.BU#UZ?A`VYo?df;IGtdV4=T)_.abINo6q>G-d!gnY]/^ZZlnCX:dtFJ&uso[A39ui
%S$SCTca*OI]22/AWtnQPCK(18o5O>4EWuCT+UA0`9aF@F:(i)P*ZP@a>V9c5_I9+"4BW-D"?`)@UjmPEjXn%oM;tNmf#q(RDeF\F
%6VkjErD)"V=\(\ZpP5_N,Mfra#*.rI&]J2PZ4$r0j<hr@j_&_2Ob<'YDmICj<AeGBo#2=gEYS.7HjecF=;?]KZTKN]9'nEa:8p/A
%/-^;#^)-h>a`9DRk=76I&];K\iAS*Gi(:i@_^cH;On`iMgKQf`74_cYSV:&]f'AY!WMiWBl\G=umRn?EF-'/i(B(e3M,qK)8Bhk%
%(e\2AKQ4s:0jC;kWn50@Jt>Z4[C&P<cMWV6&osIVp1KYP^Uns&]_f>@m>laFpYB3Voq-a+B>.;"a74Y7ci3?ns6ka9i#Kn3J*5]L
%rd0"dGQ6VtJ,3O`L#X9&IdQhnHj>ZF"o91k&@h-]^\L+i2to87^OQ8JSGkc.R($@MpNM,ej6tQgAAdH03RCMSrVP>`rZ"jpccmTG
%E,(rNS8b&<R:h^.J)RBgk@ROs2DoH53VURnD>:<4h#)l(<hGjIHf<Ji7%MK:@2^!#-2(\lB)T7HN#0a_l;d[pK;8KAIGl!6=a481
%]MORBfej,daNjUXkOtto#qqMfG7GRK*MAYpdW9b9NeA2UOukF^9Ftt,J*FL,.nIMb--;^YXf?B[pr2FiX=+B.P9i0i!q"!WIJXeP
%PpPsSZD8g5Ac2Cb>C9J9`#":D17!J=r:PogpoGm#0,,^SKa9R6$Epr6X=/oY'I@tsm8p$H`+MM1I%_t!4`8"M<AH]f9%")9aW3,3
%;A8!G^\dH`c[W:X_<!BeDh%NYJ,\WuLVI!,JXO+@LAopl^;OLYbD/;ErV4/*nXnC=rZg/gBkoS[g.tNEjhj<dTCc^jme8sEnS,](
%[iK?=@+fids435QrqYZ.qM2ibma$Ag:YQ`s,UA'=^CeNFnY[K/pt$Vfr55jnW8#S7s7jJ,rcjj7ZhS`oq85Gqpm8`UERf8/J,8aY
%J,Jnf5$7%UcV:AV5hO.[Nn44Pr]$PLm2nNpNEp/qLVm"f'gAPN)nESK,c/B`rq+ZHO!"-2&,Y#YrceD7LS+S:2ePn_mOrX@s!-EI
%i<K;CZ@V<QIJ;2tIf.NAroqJP%nsG1rl:qOroqc/nFYm.r'*FFp)fh(O8lP8Sm6J;a+,qg$G2SS.A@Wm7;d>Y;chE!_,2'F^QpX"
%d&Z"2St;O@+,sUKpD,eER;R7]bj+H`KI3_D3(/fSSI"=,6)+o^4gI9oU@i5jgIM"8Ie,PW2;(*OVpDEgT4OF]#(q--Pd]dkn@4g*
%9C)BXFDW*Yc]aKg*hQNkY6B<pH9E<"Q+"L'C&F=\:X_ISs1CI\nJi>9cI.V'#M;9?O8T%0g]&Apdtn*KBf1C$S9&J6ad4I@<V(i3
%pKoKLUASk&\:[PR$$F^0W(4%H?"/je[9b7V*JS!9F"(\FAp;Fq8fsk;4q9oT@#u"oiV^:U[GZYU)tN%P><4seIet-srUt4%]/9Mh
%Qfn*_%Z=V"c&*?8lf2R`VMM<f[$qfJd3%@ChcEoS-1b<2bDoiTopp@!SOV=Q^&;4rXQ4gd:9*VZ5BJb5)Y'b$j(]<.eRqGlVcBKT
%R-NY6<r#!Fm`OKMVd2F_mWmD;j#hD)AR9#P\u`f+"Y\&B@b=o!s4k`l?iS<YU\!m:HojArEch<0<GnW/YJ"(`EdRPqc[YnCPP/A@
%L$d^rna?GR^UJFeoKUS"q"OLGW=.K_@5P#@Z;OgMHBDX?#nO=cca[1F6J<c2/<eKmBUu<7h/]^qk"V.L-2!Kn.c%E9!RK?::4A1g
%k!)j2apXpI>W7^^p?2qnW=pPl:dhTNP2Z4RNn=Q:"VmQTF!Q(N)+5c:-RpX[L9FUWc\;L<e[n0oMYt%"R6D-sZtt;jelp0nj0N5-
%!\pV8>'*#6*M03MZRjWn"o/(C(%*1no@]nK.RQn\1a&(M6h3F^C,b+XCk2"$bL4lcI-a4s'HgT_?[&Nd`8AL<K3*Tr?jSUWX]qug
%BV++Slk1F&b4%88-"[urHgb:,7j).fU?+<AWY1KW3![t2(pUb(!*5kYjJ,\4<i+0+:U>>F\r`=q/P%oSO[TC+@9?a:lA[]HI00pN
%=c.lg+7HJsj/4)p6*SZ!o6GcA,,*m<U&TjGq\BM:((&N\^CF?8[n,_l8Ed6/U@p/OqCN?V.m%Y+,,*m<Tt`L^jBEo%>9rjuI>`c-
%MhHP;KRSi4rk!*2cu7m5DrI4)OjJ#:kM+D[eO;g>+sQh?O\j)2\:rsQ?E36*enhgu?UWJDIhnIfon3[Q"iL0ki0d=jdV)`;#rnn3
%Mk7>Yfjf^K8qfQP28H7&l:DWH$AJ3SC(Lf%o"_4#ZiYA;@B@>?KF(XL8kTYCZ&`=XWKGnm?%G?n.84.E1SH)X,3"hT7W54"8JmC&
%f*s@f##K+oX-6L=b`?*#)@Y,2UNVoc;1TJiDl:p,AMACE2LLr&/;>OQHd"f^"1/7k3VAt@m:cQl6!Q[s@%t=NMK)]([E:fF=H)[[
%F6cdgW\tOD:I>n:8MHO'kfog">88>MhQ6Ap6T=AQ/<#DamUh&h\pQI+I:!YmT+[D9ZgWUa(n5B],RRU(dTpU&qpb7=[BcS]*r&Q'
%%61>"O")b@Au;nH<ju5cS%uU7#_V^oMS93ImBB(^N><W&]iM[<U:T!(Cq!S(Jf"n_gFA<8$ap/7@g)8;>;p=pCW,.ZO#N,\X3\!D
%h&Tp/BZ3%2[dMe>l=WaU1Y(Vb45$\Fg"I+c,GDpTF.r<G-12FC=7-'[_Q)55G$9mhr<\7rl1VfP4o>g/;"d[S=s%gs>>cEr@*Od%
%$/SIf)3C2ZkK&?J+/[&@bj,7=J^pXX-pP1DP=(A^0P!9q_*`2dYZIP-TE<bQT[%\PD;GO1)!qQT0<1?e3>,aHBOJpd,u_/TMB=Qu
%3kN7,",puik`V!]\+AOOqkf%)?lSWL','r?LcpD!1#%n%e?fn>@VLjV6LQ2p\?/o6#CRaP>[`5_"@&6$%`4c-YZFu<!EIKcd-BVY
%8SgXT#Yj$:.Y)r/bhu!G\7$P<OIrg1b3;I1!(&)PjlQ9A^\(T>73cbPd1^AiM+CYM+D0&2&53ZA`*d?^Gb>P8"4aV"l4a47m>$b:
%1MT<a*#4(/$gBe%GLd)@+h[2![JoI>O_BJ1r/q&qMCTC_[.#cs/VCDp#;Uoe!qJ8NE*#b=%J>U0"\1;WFX51mRMdQp\&YM[T;?'=
%ibjPA!Z\jS9_1'RA7*@p?\.7[V&"_(*bYpo#Ss5s#fN$.U<&UYWfbFjTLf-l$JN=ho7q%VS5!G5J./0dD<,+3;<e$W2'+;/C[tq@
%5P]OcMT=7]ol\WXW&S!^:Ihg1[9F*-Osj;t5,B&&R[R#T2j-Mb![r1*6i<PI1jh++ZP0X8`\&3LUGNXL#$$bW5a'PQ=?(-hfs*U>
%.#T:p6!(2ir<7^AiP*0%.>h#geC9#Y0][J7#&QHB'fg:_-9Z8O$6GX%Uk9'fKG;mhOCA2,J];J1#oFM#[*jAWiA;e"VEj2=?2/i3
%d]FfX^G'6\n1K+1_)U(2FT_jP.@Go)eL-qX\R_?2i/^;M3>I)"QklnaquTu'FO^C$AWm9aG@EU<p_=@iST?R=i!LSsC_"&Aq`Q7#
%oHF.r"T"6d[p@W.L<JE##a<'"]N=@E21<@ET9E&^*r*C]oWTq>[]bCim(mY)e=dZAg5gEfjc'$FI[Yfc"e_+I8/6[Cs4%`/"\:,u
%Cc4mTJLsNh%Gpifa;]pc4&O0r;P'>^[Uu8HWuDh);?hfs[GX2(=?d4XTl`aITabtQ;8&H@R;#[`@@[b`\#u#3C(<7_Hai.A\7;j\
%W>b1\$&8_jVu4df:f[?eciQV`UDlanH8E[a;Eq<F3-_=F1bjXWG*nJe+U*DCXGY@0DjL0>,5cSRn64M0_2L6+e;+Q_FJA8c8;f&c
%[Tno1l?!L:EL;C*ZVrj(9**i!@mJC49l/4c190f`?m+a\3Y17)BJ0s_6;*dKPS>O`A@jNpPDQj/?!;oYrT(Mufc-h82:oY>@Vn<8
%oh`>minGNf';#)&Ue+57>CNa/d$/ZIPbdZn#)HrV,Uq!3O".rFf[\Acmm1HGZl"$U7lMGT*sGOp#(tqV3:W[f94BL(eb@/u@nZ.m
%ii*,lSG(aES"3HWZ/h0\$T:gdHbm7Smu1j*G,'2fU<(a9_q\#W9eFbr0g3o'_WF>Y#i;"Y0GPa4iLH:5="$q>>JbFc:)Tfh$>u!_
%U!3S0\T4_>[L.1UPgjE_$He>`YB$<`WIke"MP;Q$gkArJeh"UY5r("l'T4VTCpiTl)L:%W[+(E.4aJ+oF.(O'8]tBOP;$_P81R.i
%:[h*1rY++q>&I=@\Z,!Rh+?(7eh1h29&+MfVSLV9D>g4t\q%"@;bfaLKj(f?[;Q'@EJ`U<X9L;R2CV/u[$b_7>hcng+-#X"`Bima
%Rn#j'X9R0S)g8C%LKY(F8SYR%!!Kb6qRX,>FR)J/1prGGm<\sDHW?M!Z*R[UfaR8JrQM!9FHMIZilGRd9W`qja^Z/rEiLr(*32]l
%0-"7:^E@P/Q"@<$U=^IY2mNmn2mM<rH7,`-$Q-i`WDJ7r=09k@ar2gZ/Al3@)X$RA?RB/DOMiIN$_P)c<SndFO4bcpri7gUY2?1t
%/Wi`"G7@\S9l8*^#qP6&BTt6@frYJ3_f!hP1D3+"Qjoas1A0th\'%ZIB5:&bWC5B'9%rL'ZJc/k&"A;pC1rB(@RJua*"H4iYZ8_6
%;S79Vf5X;,p$SK<:.kGt7I/E%Yc9csG.2Xg)<Aq#Ra-3glg^Md40;/t[9dCW>7d*T,M#@%+Ok\"e_hcVCS3]]qWn::D2Es/T5K'7
%23!87RR$YLQ"Z3/qjND(Ci,O`g7U\mLM]*^UVS+5H](8?\D\&Dj#0$amm&_;7eN6R5ZK4Mg&%X7c$URpWg8*rN^i8=A\"VrAjaJM
%@2!uZSIJET9=)VL**iThUG#A>n;_ZkVBfUXD)Po^Wp7*a%FH,i8GW>@Pc`b"1Md9N35p#K[>&QA'TtKl@2]E*DX&TT<c!WUV-3H7
%'MI]H]\JBJAT`.LRfrEBZ_j2&?eBPASF)hWpq25^Y>0#,-7S&IYZAF>;AhB>B\)g7cGs&uNDQ^#;WY3<:qAkG8ob[d.^J;Z_p*u#
%daIjG]^=N41HumAO2%\f(?oc&#Qa\HeS:Z`lq08b3#L<81*O:"r!%We?PrGiUh.K.hV(GBNL^7k+7s^EV2Xo4-5/V1X]'#T4c2'q
%Zg&m4>p4eterk!\kGD*.<;g_lq4aI0h@+@jMlR,jd*>3m)"ZAD<\W*5@>?YibNc#bFXmL/-aS:m[tY.iglL<B%Rp,EI=*:RRKG(E
%XBnD98=Z#_!EIZ3<jcb$cHXddpr!>`;p"Y-C7O\EN4$a+.T9YInJ8$V)rJ(B#L<PME_&n<VkeCa_"D(G"8kQ)f6Ui]7<+3W3\ReL
%/`l\W4LO6.R:ucDHqUpZ%/k+uZ^m[%f3`c&Eo<9;os;3=cf`6=QF^2MiR:[,B\T+S`I7DW"&b0/bc-WRlKn\\1<#M8``0tSbu+fH
%M0Ya]gZJ>,\X&[^`u7=7QL<PXlTEC('7c_"X$(NH\>c)S;`)/C8iJNp>3KH@JKW`VlFF02EpGW%g="]QR!KZ5nXA4hCo-/mVRg!/
%c:2((HH2XP7t*A>pNiYNj>sDb6.(.qR.&Qu4XEIf4<)c!F%4H!R!K+!ODle*1*t3.R/6XeGOfZr_1*j4p:L-m[]OCf4S*n6=</rr
%omq7<gr[sW:7-Dg-VR,G+E?tq/`ca!o]-ji+aZqL32Dj0c2.:VXa"G$5fD7$T"o"2P`=Zsra\]IEUKCdML%n=q!H!!q/FVh\u2K#
%l5-ELHLF=+d;Q[(?'.s4]u$M_\PZM:OKV_hk%f1j(Ais?.kZ#]qnnsFg='WIHV[;!R/8Bp\c0Y$.]QjJ9;@7)h8;b59Yb@rH`psK
%@kqZlOAVd;VeNtW\>u)aP6%F1Y8G[<NYoUU1JrD]3.pDfne$T%koCA<4j^"LWESb$Xt5mGdWmG?TqOU^*Vnd_Bcs>"Kdj<gmAN^`
%Ub;a$hPrGNh4/E!2-8o?&MBS*f`$:VEh/CH\/W">7<>q=F/5mRC'B0heR",5(?mO-^Bd!XRqu88+T7IIq'79`K+DX+mo):1"4F_T
%=-mZr"#8;XMTujZ%$mCMpm%eu.9rp.c^0C"88"t_,YC.*D`!(tDlFee2!rc6bEHS^Z.NL:,j'BD$l%p&\$__&:]:6h1,>_Q3>ID<
%q?oNGH@3?ScPE<>Wuc1\9:`!#HG.gRHW0<V$A^`=>:@u`gef>oU=<m\2fFSQ8_h_H3q3&iC=b9\HUa-B;scP]2`f^"g@;Mlgt<7\
%UafV(22rd5o-I#4BBgqVaO9&I9Ek5%;l:Vts-nCA60J"O;idQ1WK6=a^1$<1XM?JWkMjVK0L&il6`pWFAR<2oPm\&dDBB/VYT!*7
%h!"]Z8&-+THKol2;3,#PJ#Rb,DNJ3r4g+BK-D%7gQ7fckI8D4;=$VD9C)>JW/L=sS9Gb"pOsLo\/'IbNX"R>1n#84/qF/QOI.%Hm
%)u\KMJg9OsW&Sj8mO1)i^0]'PYC28%j1fb<FaRT#<d*nId=2r^24\>[#I%ZC:t:c@q0Ga6Gt559rU1FSSd&]$j_V7u@\#KpPMSp:
%(l]BO#EcHsfNr`qZIMl([CP%Z]L:ATB&</Ne&Wn*j+<-nP\7C\a0WA66C;R\CbRehga>lM-f.nF*%'H,Tu[JLDn!I6p?,%YN)6*d
%J]KC]Zts9a=X7E#A(dBd9rM2SnL6],09)ZH%Lh!SjB/PL\ul_q*<C<Cm)8.iMjZU9X06l(bp)=_*nb3ii5g>HpdD04Ufg1,c$oSR
%3d$A0#d/9WM_/;n-su4ZY$!p@:KM#0.\+!@3)<u=ju'NBHeJ]Gk:+nOB1hiW9D[kBlSh#*[o97j\^FjLELn[D(%rU6UXi3@>C;jZ
%H(OQ*VknCn`H7/^C-AB'fH]6(otQp8Gq,#+.XRGfQuQU]IBCPXeEq_(eWGfT2tVaFj]j9ZEN8\lFb7ds%FpP9WV%.3r]+906l<@s
%;kNZknVobKV*(eWLT@8k$[c8qb*Cg_V;D%_o3qVnXS3K.(2s_"RVDGTp]&IeiT>]<.eSu%?`[0&"nG<ceFWAbfp&P:$Pq?(Bb'DW
%/*'*cniX+ljIIR0)kl&uXX]O>>6![(]3fuK8ps4;RFElfDY2enH6_Dc-obf_]NW;%inPqBEqOm4RUa)&CILbC=0"B*)IK]7gtAJ&
%/p-A5IkDZN/+`e9-+8eF\M*Q'm-g0+6r)'5r@'kkMN)>#A$gANB3Z/m8kueToq&Q[Hp,)]!j4$;EFDu?997PLRgcuq1-Au,#PWEY
%2<?1\BcHKOXrK,)TN<"b.<tU;:,Xk$8.c^1kg:"ZYp?gDfg*ZMi/%td-1PLQ"3@Aj:?[qs<)@:uAbjj0I;7q6qNR`O,ob0*FQ-7l
%l3u8%rM-33dBT/D^s^Fha)Fbh'$;s-Ve$5MMWO]":*0>h>f,LlZtea_[%R?+!o*uMGqO#792SKWScmL'E&2+LYR6\"7)SP/!aC7d
%TH9U?*SI@Fg`<s.@tqlK<.nb`-VmNr]i7f!9<,"I]*sK34aT^fO^;+s(J,od$B\$m7'`f^Vda2]@NC]d,k&?OPB!!/CP*g_4.qa*
%"`)D5"HmF?[&4O%A7_WG<K*^S;@,^jA'aaj$)qe2/*h_<J=fi6F%XWW;NR9;dN`JmCAF6_/_X:7W4m[-rU5tM27F#)<0pZM8L*Tt
%R^KdKQAk)KE5O,cX)r"iC2?i.>..o);ubi![3GZ1V8J=0$0,+e:o6!4P7K*l.ZWNZZh:-b__XR@:"iR'>_?=G8gm.)$K]L?o]CL]
%T1P*9B=G<N*Z^--'BsrbKo.af32(Ok"[]RD'rfCj9]b("+!f&Hbrapo="u'$c`S>YMhF@dV5JQ5#DD`f8?:l=F5qGsZQFR3U7kFo
%A`uRiM.*sHo,=KaqtUK3^ZjqZ-MpB26Nj09,Y.WO:5i(9'iS*Fk,hq\'TlEXHf1l]oV(Qgq@hb6n)rBM03@Ik3e;K.@dN6J]FZTT
%iW_A1fq%Esk0^2SY/e<_\p==%aut4CF[>P*?)%!U*kLUA<?B@]hYuU'Aj-U,ciq?60iV1Fe4p+-U/9P4)l-rFQ@M]kDV46.n>%>s
%XXN^e4]JAM3IYKdpb20g:<O>.QZneBA8Cjeq(3tm$H\%/*nc=\5&re69,O4Ymc92fZ`3B"H,a6iPg80HGCD_^O"m_=XH2]Ns!@>M
%^X+n0,qbg`k3MYD:>d]Gc?eP*"oHC6S8>4Tpo-%=YcAS/Doa'OU6NieNT!IsLOBV2S9C/)3"\b'`t'1=QN]SbI9R2RnqF^Ri+7$a
%UKS2qj7_rs9[<6\\$5(_rB1^?DZZc0V]V9b`U,?=SEI_g8p6^h[8S]YIj/Wg%\N</4T+2MWt,<e+$7]f5BT-0VgDm"8[1+KKOiXj
%Jk<mXPmW=(.[JaeMGaOCm/.ACqFCiJ);Vqn)Oa]kManKq:;S:Crl@Pp_M*NY>&!Lrb(NaR?BntVEo2\bX:Jq];sE-;j,<E&!EhkH
%iLtGobYIZbH8'd>32FS>BaoE;H-PYil;j@Y;ZRn)><f:3U?tk]TP<7iQbTGK^KqPG'M=@_-)$8sg?/BGV;K>:TGHLr,_q0/q(i8-
%Id=KhCJ;c+=l\AR]I%ebHWq2L0bZ8\5h^$H<l<o;5'52`RT!1N6&[^=.25TT"X*HZTO'o<;RRe5D6q;,Q).MI?*V4G<Nm-G)CeMO
%[u)'dF&aph@P_0k6@luo8ir&d!B@ppeq6HJXg34YZ/,nAlHg)Yi7h4*hAloV,2`@$23TD9Bc=#A0O;g0.Atu<jEf?m0u;7O=S[`k
%S@#$En3tNN`f/*]1Nop9QnK[,[>m6'50P6;'A;8HZ[K'2Vok:2<oq`/W(LupV43.0;E>AdN23uE\-')i$*%b1D)r<:OdEP)[i\Rs
%OG#ErB(G09%^hn*40#Xb>*&9Lfig:qFLYe8**G>)`)?,ZmPMa5knbkLL[CW>T8Piu845o_9(K3=(BLQo6[1)aabEus<<kA4[M^4j
%L,'(7B:DSbB9Qo#I>hE!PQQWMG(c9KP;ns+-:4`%YtjZjE.D`)j6?`2@l%1.PrBR.#k1*DhsjMl7OU[)ab*PY%T")E%6SA(]a\<^
%MOd=m"S(`d+QlaGdDpYZ".fR;O+'i!ZEcZlQ/P6,JE[[A];^*u>$p"?jqnMkS=1@TCEWt&9A[%9#Hhp_#R-Oq?A,Irch<iEc5m(?
%a<JT>M6A&bkRhc6n@XU=-_VbPc$-C[h$W(kfgSp<BetS?RWq@0W6BdNGS8^Yq9p=_AUMq=9@(<fi$4AA212-%Lmurcdu>hRX?nF9
%H-,:T'<.$#/Q8D*L^Rb36QiKG3Ci2aPMV-sHo=]I;M$?N(#T:f=Y.on&T]j3f/d/9k=2Xu*"Kl>&.$+bV`ddu-FYll:EKk96g1"[
%MEu6^_<ZhFnV::T-d^\O!X+^CZG.')n3N76eI`ILiQ5USS&s7a5A\=d3j-HpK%W2*f8XJ)Br_P^"Lu6E_M'mMRpn7&*U"%G*eqQg
%oON2K']DK+A#X#\@S-L%nu6^3+/o<YJ4Sf;K*gKW"JER.;g!p="maZmi<g^i;R0p:<Iq_@OtU@o\`/M7e[@%GK)uq-KeOnO<6FdD
%8Z4Ne9SU(p4JA3nXd]'aLJm&Hp'jLBVfP'Sa*GpG.</hW/3mk_1XIMK$b9ru30K-SKg=07k;ZHTRMhH[=+D#WjXJ!LQ#X62'91B(
%prRd_Y5s:XCHX*<06a^-;eFtIrDOH8E;-r^asaj[LG:F%.oj3%!sQJ`-sLYE,2m^Kf^ZrAnIuc$=4`H@&BE!(=AWSKE%0L8,`u`s
%D>pMU^F=g!ZlZ,&oBU";5t/Vc3c/%lZIX0]3Jg(`0MF\$$etsIZ1DV:UWoWdK+;)&3s&Y]/bW#XS&uDl1f^jNF?b9i&ZgE6kZ4U>
%*1):6o8gFb`(RBL1<L2[QWQpr(/M)'%&c?H'1\Ka/Qooa!ObNr/oi/)#VT`3>>_O*.q0EbF-kll]H`Si.B8gqD>gb&f?<i+A'3Sm
%h1*+*.T+^28d1ng)[]q?,N7bp*$b&)`C?X4GU,>Tjgg3S7kk&rE7<k?(ChCUQp>W1DODqu.qk]Ak#EUdpO;eAI]Gg)ntgdcWo=/`
%E1@Z)1P1]Mb_iE-n74/X,$cgpOR0:TP_Ao%j/fJmnNiaYFo/4X4"Ch86t)a&()o4SCMHTGJV(XjN$et!$PY%Q:kI5>$ZW*?H]bqQ
%7t[_D,m$l!bGf9@L$tA>>8(5H(DB[!+<s9nJ5?IC>cb"\@p"[jgmgBf%'gYPB!tu2Hd8XV:Lrog$M%^@/qEF*!Z60,rTmoM?0HjB
%(2t:o//]/j,Iec4_[nbpBP,3GOA5*b<WM3tL%om[,Xqk%"T0kZir;]/*k0391?q@WUX(e@B#F=13Am\d(IEeK/co@DP@qO^S:cfM
%j*IbVY]%A/@Hr+FDJY&)`W_-DpRkpP(%Fs`14HFIbe+9fF4@?ON!1R3i.]ECY(\6\;GA/:"OgD:-j*?[$n%"'cr#2Qp,1@(BS6f4
%g62P(FIa"_OpQ]gg1PJY*"SPLiOVA/\gc)"Y,kVkC6GHi-<2lqL@cf8.j,9N$H/aMccp_OA&('OZdt^,8&NVZ;[TQ:1-,+sC*n()
%2>bKK`7ke)XQE]u*O8DIDQ28\DM8%ZChZ+<b5P@;=)^nVd?O8ME6@6h%7VDC%ec_oUcXKB>=iSpE9)WZacT>g"J80q22$uDU9RhF
%p>mVarlFmAj^a$#k>,Pr:%dpRY;8B)-o3Gm@"El'==kktJX2F]]=8N)>rn7-dIM_EUG0ML#os^(pnr7*,Y>(SdW0=JjHpHN$72OL
%Q%pd3YC2&uIb-a"-I-7DX,g]Uj*PWlo`-,gPj*j'J8*5\7WipKGpL/:8p)RIbl!5E@o,RB.4'Vb3)`.GQ_*O:i#Bkh%#S'd*L)DA
%^a(c!@C\X&cM#Io;2keak`Uf3+_IAscnbeM%],=5/Sh+lUND8).T0pXo6<2KfV2YU!WQb0-"9P;:]]U/JqR/"2>__#GrN@>.Dd4=
%00%^6*[ibr5/q"pMA#+4S@LY6:3'SXLcHJW:`&K4Jr:h7n`+53qBc)_h_Rkqjlb:jp%G=K*RQUU,*4,;*5P"fH+%1TTZT64>(jG)
%_nsZbAOc36)X'FL>WjLbY($0,j1X@GHq:G8IJ+Dc=_.s;XD*\A@*V_O\OrI8`mq;-JK-D+"u0?]`#8co_#<QE?JhujJZ`qoI95+(
%M93Yf^Vh$1@KMP%=ht<emHIpP4CdYeb4&!tcK(<I,e(r]NX`2>\drL>KauN++CmWg=9O>*Pe8@f)?uG]b!Ep);s&U8\/^;@3W<'r
%rBW/,6Z.RU"%&5,Nb%.`P)M`.CfQkT-BI:Bp/,,;#$R).L5@oV7Sa]_?hDu!3oIp.:QHt'%13D'U'S>5RRaDo?j@mEf87r>p'miU
%=':X%%u8-dVT8hMF)OS\i2Xaf46_#,MS1s#fJ?IF!urA9f=EsFX9EY5PX<g+0JVU,Pf%43)IF"@;Xmjg;+gmPW!_I,/u`P_M2p0t
%A.IW/]AsU'd[<([!ISCHFF[B]XTZBlc&nFEZ+ClJ=&bJpe86]CIZYUebB3kr0kF[^WdD*i9Y;JqinF;7`s^P&%b!aBobZ__bkB[S
%o*/>ocGH-;J/+%!T5j55/<e"d!KDo?gP-0Ri)e/W0?WG9Loe>Kbs)^t1Eh&CV+0MD-(gq[Vl1nmNALtUQ=I.M"$e=A4YoLJ\5$q%
%XTrobCmL-sJB`[L/f$MimP>GhnS"nIUKl1ZENX+98Y^P36!UZUPcU\(B<2e/V2UH*@YY0Z/QW;<d'd[8#+)4Kk8!*;Z=]Z>VS^j+
%@)Okk[DpH<n%\LBmMSnJPAtES9cZY7N)ic2_NnQCfC!Y[2r2GHg<C/%&_cL8<o(b9KIO!T4-^C(?n)Tp&Pt6.^Vf(T5p.o<-R2,:
%%g?A/fWQDr)?GB^H"0F6^)s1"FB1+fQ/;m*R?8'$8[o(eYB5u!dd3XbJC*r/Yhr&FY[\&ADXtb__qeDdhR%;$CaK3>!g(UiE6@PQ
%$W)d/&&Q<@i,90,?Y[\nnthoUM97@H'$Lb2@l]Qb7m^P`R%lV,Dh$I[;LCJ7q)NeGWngNtS:M=.@J;`i)WCPtJ5DsD^*!V/Zk.6A
%T-&^VK0:RKQ.X<bPBiirn[2LHJ3lQ];V\q4Eka@^=At?%co[aBS#%VD&EI)$nL>k1CUO3-6j9ToLir@$<78)Ee>`RL&[>CYj[lT^
%GX@@D^kq0Hk_2JD_G6>gJZ)Td7T:`1,V$G$%absA+BBBV;_(hki:5YfQnAYjrD2:5i,p`p=q,p,;7,V&*1RrgKOb,uGpn`&5d<rD
%&5%,^d`8Lm57:A"X4@Xi=8H8H>(npV"FEeu!0UG^?We:U3=o]PXdbUGr6@2d"NPfn`*03M&AHP-r+_D26(eQ2!Z9:uBmiNohW06F
%E\l).LD\F&AbRZ>!3q-Y=G^j,,6ZH^X3,4Q;`5$)<-^a9-&JBshPmY[,-q:A3-UDT@b]%7.%h?')#ekmlnsJ"P8TKN$fJ*1q,QfM
%<5a;U1/g.2-$!$;9%'HgUNNo;gLeJ6MX*tJeIuC>MP;WZ826*;;',)C/WH;<ALC-95#ZLW.EN0$Jo5<8d2._J0n5=ue?!FLg(YK4
%!Xfc]1oM"+MjB6^dlIp=:g,%SMBiE-QWjXr/L*(oWfFo/cGUUe9*t'0LSA=/D.3nhqM1FR7mtk3X=@doLF-*@<h&Q+p0)DL_bfCi
%Q=?e-Xoe''>]'[R<PoH&!0sjjG<IfrjA7C6X&=!.3q0+OeO[SQ6p[t=#jZXIYeH]<>++@_qg5@Zr03)7_\NQqpaDW?-7N@H]G'M7
%,R+JnTBsgZJ,"C9NE#eu:$SoMi[9(IaLHe]1+3bWc+u/W&sDgpRn=imc7J@T\@Rc"d=auo-;b:7lb1t,'k!T66mt\,j'Eo:b$e@Q
%,'IjGpLU+Afldk0PZ9+C<IuJ'n/`8`jQHXn3RVVQlZBR6nUN$el.lUW,G>Z#ZY^m<`!SM^;G3b/]+I"LrG3`dM,&7WOH7Y[a,@or
%*P,B)@T)A@GXP"64`et8#kK@a1S4#XfI([>`Hdh!R*LeTAOQX'%(:#l-b[(^8P%(6p4>7^pRQ$/r3scKN$/_l?j\48BG"djYY>Kr
%?M^+-3[!))P>V+oUeZU?3dAN)m7-*@SEHelc\R8fBZYJA3)=J8g"Z^5bJhSC5]4BaL"TkP/l].-V2-BLOZ<h)O@8`:V!;(qjO"F3
%F[!uCQR,Mu2dk:dPX00fr!;.:%dBpF$W_4kl;Xj.'aJd]&>H&,MC9^;P/p(eDKZR!Jk%s*Rr:coP_JEPAH+VZdY%$dAUM--&JtL-
%QiT;u)?!5&]^Crac@jT+?;B3jqVY5A`W^+c1u<"Rch!<5q@mQE1&@\Q1aZ(HX/I;9+T)Nt+DGNn-5jOFRfhO\)DT5tZC,.Ua1c&Z
%PMPZcg[`FV[!M<<;;&&PAX!]WV6-9a,Ch&Gh>;um?MY":@RemBj]D#4lO6[hL-(Y>U75>VBI]:@2"`Wd$;Q7"/^Ys-j>Uu!Bk@-W
%_6aKl\ub3ZHD$U<64NBYY2&BgF`)s-8`q?i!AV8MaD4?brB,.PY/oU-1RI+3SF)b*A'R_;=YiPYgL<4i*9AHbEh'[&B)+5=^E)$t
%cMXS!W>snA/Cg"+Pn\\3P)rZV#>oBR&!G..Sc9f^&M0+l.uu#,;f/Dj1mpPKWb<DH8BNF4eX$cMrs)J0g<s[bR57uh^MDtP^>=n;
%P=H3$7R"YRIX2$_A[`V8We&`LlCQ2825o7V>9JEUJuAnT-,Nnb22[p@Sl-AXp^XEHUi<bF`2<n+;Z=U:GP*)i\G"RU7M5H"`q:Gf
%72_$G(:6//Y!s(U>a2q4]eboe`Yg?pb>h:Gqf[R`=hcE)V_%_^[MI;d>!I'@iI)*o*B:#JM7"Eb8_"t=*]Q^pT-^*i$00:sK**K0
%0@ggJS:n=_fDOX(gTeF@-S`e\9$r?VaFB$*S&IstT@n$Hk9R&d9.D;a_N(b\.WA-\KpP3XihT0U>WX_SU9893(F)e-YJ,uX,EYKi
%jPV71TdQ=Q@#S(8'-SG7l#qM?)^ALY8PiFLe57$nl:81M]6k2:=k7"%flYAE91@]O1OYa.cgh^5N,$'`Lrmss88^tfWHjA$a_dVs
%KQ<`MG:6(LIaHGlTNItFeQkhmin#AL90jV?ZNbi^[rZjT`*/Klh-=?Z7d1Vd]b-7DK0U9j\C&]D<&VHh*Y]&_<96HR&E1(jFF9F.
%PMD2U^JH`kS*Z"(GXY5Gjk_#l9be+$Ls$@"@\NBN==9O>D9Ze.HWURNr-;ipDUrR++27$K92;q+:e4'W6!8%0@Prssa"(UAK)l3C
%Ok'R;]80T>6$K5oE`;jlBJ)9@X'CIZj<;L[O.Iau'i4h:70I"CGF'p+a;9(CW-__Q=2WW7iDJ'TnmKJY=RnsMgV'u%Ed[U:pMOp^
%\*IXb](r(\ZJYIOjl;3]D`jVIK=3d<[[[+\ETRUbXHtXob(CR*2Od.BAMAo-U*6"Z&tmRW//NoASf+bjkj/.k+r7a$2+njM)OsfL
%+j/MAVqBC#4Q+.J8+bVtmiH(9"(KLMRoOgf]s;T/>p7_1qS]BMidk*j6t94PO406IW+7Q\Slq>QK6e_*HIDDIIH@Aep$eFub2UnQ
%n\V71U3!=snln1r>K:\Eo&#(23r!,FE%5L)[bC`KAa51PDjG6seDD`U,*(^KI6>pfI(IcBRh@Ji8,g+/nAqL(<"<`Ebjo^`BJ;(9
%(+su\+C+^65eQUNJ`qJRC/W:G^h\^B4n.]i!=jLW0$2.X0/HsOHG*i*0%Jq$D4-hW!/@JUAR8\:,iYST`?g[n5-@`,jn67(p%n-Z
%[)PE@LYosWcuM96$n078p&*LllZ\2@h]c.9V0`-C'6/GoGi@lX`:_g<Da&JoY0!toam_lV.^OUtb5#*3Gsukeo+)^SoK6LT<8"?D
%3TE/'L-V]l&sjDDb6F>[+Ekq0Z%dTuB-c,_S@,"&(Cpra9d9>;-E,gM]Jg[79Y?T7S-LK]9^(Y*Sqq0D#GM`,826kZ"t=\2WOhsL
%M$gW]E,N_eGS:MaRW8Bp7e)^VT[&??YKj+9.pnHmJNs?qWWD3:m-3S-EqBbS:HFOd"'S:-Uo(3H^gC%6H;s^Y]1X'G^LfCb+l>4i
%RVaLH?h\/Wni0h\TI1;7]qT=J-$uRQmUhos1$,%A/t._oB=@)uEb$`(l,=9G8=l6N$^O:b\MaJT92T=Z:SN^<Li>jkP\Z\s4A!GT
%&:/qb*)[5_,T#-#U0M+*c$k1VRd:eQEo6"V`7)%qY2pK)hIOAk-PRd8LiZ\i6;<b*[ZN5&K%j<k^\`B.9=4A;dRYdX$JYDCOu*;1
%B&s@VABkR9[<T\6Og:]*UXH_d7rP*der&;3Sf/38i@iK+H(n"ZP!LhROJQENnEtHQ:0F9oM]UcWZC<ahppA*(n3r'KBl)CZ)cjaA
%<R8"NN`&ql$l?R4+OLW0HQ%+2..]Js)K8a87?fP#`$X^V&46qJWTRe0J&*TdZ`8koD;;/D,c'3R+0_//8so.e$am1NSa$)?ni#=&
%8M.)'E96)ja2*q%JuYoplF8iJB=1WC\HV3oohMJEKD!$&@+&L]k0QW'&BTY$..A6M1j'GAlr=P1p%:W2`2t*cnR+eBWdn6I[6hig
%]>9Y5:]VuP:jVsj,?:AF&i)mq>tJJbSS3m^hM%8O'GIBdq#&C"4^8(bIC2!KHlhH3+,*^\L2n3d#L-TB*"R+eKQrEqo`2"r?cMsg
%I$7APrR^=`&2DjX3c%-@V[ZW8pM&*K%$/9nP"#:VI\`b`JXnsFYRn#,/;2;MiaE["<Zp47Si5F9AeWO@nurLCpJ_a/:],C`T%r28
%L)XlU\X1G3U1`RX&Zshh$*uncBh[u[b@UK^TM(T"TKH@!;Hq73UeGRIrU:sfk3hd/HV[[7UM5koQcZHZ5>>hqgn5o>Wu%V_=ZGM7
%]elbi>'=?g%RrL,l#qYSGP%0(GP\(@[!#JSZ>QLd<a-tJU+G4_ioL.]^3Q&iH2[JU.0N$'l$V:SNpc<t%^4b9?=&+iALYm83m)LH
%4Z-B;lk?Wp2dkNC4U6iM`Z?`l6$DZ1;[t@ni:7_rNp`eC;b)^on]<=F-^$i2$M4,D4GM+<WRidajiOQkD.)\7bM_!MDW^/\'eP-A
%S*Z,1<[aKlYc3R(%HtE&XnhJZ5?r<M\;%M1QII'jCC:C,j,quMj]Nebjn67(_s8-4'=<m0[0W!%EX#4"R2S!j5ar4Ap'Cl>+p*ea
%k)W"VBm.F2_=U,1R1ouLKFOCscEWs!"'\[;L@U=$WB'k</Bmg]*\E_X$i;%^3@*V4>Y%MYK8A+!*X0S6-\\Z>P]^;4*?Id6?9]fE
%D$8]P"Y%,jR7jdcAn56*700]gA:O,9I,P]*,i.h)M+IJJZ>;ODFO3R97:``&o/,1^BLMV9Pi#3tAJ;rG>'u$Cb.HEq3%:b4O'6[<
%n64XdF?!n*M@C*?Fj"bHmX4P^$a4G.dPZ-?75U<H]`^p=X#dGB36*je68qMk:N53Yc,$e\Gg(h,0"'AY79Z3;)4GQ$;?Wfu_SS91
%SfA7sVrM:*[Z(UFVoU#3lNd"o>HR3PhoCF?YoP3fOMfWZ'K8`i#fjtV(%1nmWGW#@k?e?GFurD1Dt.OroNr%"C50ViH@!db.kb6J
%KR<Rk#OCO1)#Li(pPXg#/%7J"o*fCg1m>gePbI`uQNESlmC\;@%'ueJ\6u[?O&JH+ifZ8qOaNTLVXn<*kOg#A>:3%N)Sd#g%I8dj
%q9hBU=$J*j9p)<Ga2_.(4cGOigX&dpgKX1c;PTG'@r&>3=m&[_*TlsVMXohGm2"$/ALlco^VlsJbPK$pIIftrFU]j)JusR1pS"4h
%B$IOcG'"]G_t0,9nP_]7f6[+Jbq62K?p[I7j"U8W_,tbXLWP_*O3K,.j/5k+dB7q<.fIZ*CLEDOc/\MfcMg#JZKc69O+jr!>J!uO
%<NYG$`:9QamE<;09U^uo5K^H`N^QFXBdm"BI,%4\>5InF$I8Rj?Gu8Nn/MWCD!Hj+m>dZNIm-(DbB<"D,Jao1OegHIqMY`Cj0.jU
%-JJ-8GRRBeiYn"<<13Ea+8tKrbPn6r]&HkQ9DY$G]X]a\SZs^.7i<rid-i,m".5(U=k/29Ei,S$&&]"<]0bfFKrDHC3>uJ-o@&Bp
%N_EdtY"h*X(_h<FCj;S^?N4sgY$]![PNm-52m[`igr:i-8F*=%`Sm[t<";<qdrqn8^W63u5E`c0Cj1f/a/ukOZGY)/_a/%RqJ_.W
%(2G=9VWuWQfZ%Bn[#;!KmC^l10prGfJQZpgLE*!Y4`4OUS4:fp]T6q)Petog,sP@-BG7TQasMJc-^iTJm^u%pg0Uk_?`hV!%?26f
%P%E.D[H/p=YMJ*5OK+k#Jb#HLXp0K2/Z8,jgRH'":3]Np1Oh)3UR\(U)O]/Wb&J_m.(la#"Q0s$]B.M-OCkGML4/*TW&0"]>i+f4
%gb5<mY)jQ_h"'[K=#huMb"baq`OT0i]0=6<ou5rNQKC]*>?D5OP>&qIaRs1pf\XSc,?o4NMu7_.T&uFT1q;`&1gQN_>I$4;FB,63
%j/n?aEGK0I1.TMYc9rjuc2beA()9PR?#%'WK.:9s@V,TdW?VH;=eJ0qf,V+2iYJ%R62'?Uf$Llk)k.M:]N]Yo:_LGWP2O61;,f@C
%?r<,^_Z>lVQ'<kAhrY289-Q!&#/ZTtd9d%6.5#'c`3:M1@su.Y.7<QAVBZCp.13^J.mJO_$AgLR1Rk,W:(fUnTtDlf&Bb_r+>YBX
%=0=qg_Kkj<4&NZ$#l0&QGpOZu%clL,O:d1f:Q^s5[`NoElb,o(6pt/`A5UcqcmZD48`$2^M'tAdob)YG$Vs/74f!dp,&\/>HPseT
%h1\`b")B,;1j>R$;2PgNFOd:&FY1C><$+KthL`\B<D"J[4u4T:Fr#cL6.oVHk^Sn>PWI3KKNfjaKf$7f@if*r&jdUUp))*AVuV5Z
%:hulXe#R3JB#,`)M6L-%H4uHT`-[E:Ll.WI?bd;6/#75GR@h.S&HQsp?XB)jWk]*m;F:&O'>!j?!&Cp>D:Ps>9,jPnIn2F3BJ8JU
%'EdQVTE0qS:?dS/qbqaCDA,hR?N&q2>dGO5,+-9)7O6oMcTiX7&a31c6=V,'%$.Z6s38k6nAV]rZC*2G?87pq^2H=gd]=o6-X5."
%>`Z!?S6;ZqMUl#N_GJ2^ET9qa5$AsiYmu/^dU74R&J5mt!K..NY'%%^M,BL"`G2g0Rir_#EPlubqe;r/6e8Y"W!Tp/=,J,Bkl?VY
%*FulV[3QYV@<2JkeilQM'8nb9<;RLE26AhXnJ*4N]OZQZ(/mu""Gtu*9!Z.T$'A&:T8WfJX+Wl:4!d^l?E>jm7/Fb/X\bdW8sFT`
%s2B.6fXFDN/TPsWNJRQF.^;#T"XdhZl6r[WrhW_N591JjT+]UXD2iSIT'`mS0<FIrn<"$pJb9d\\(lGu(&lssBmC:U.k6"$2Y/(*
%`0]_X[ONgL+&c#1ghYp5LUSAoII`SU#k'9o,4hbJ<,a6Mkj+uV@H77i^Y'hos7&XNQQG!^oB3105!D?hhg`<9ePFIS.%>.f$685E
%[[V<njAI37;mR5eUBXd417&HK(q$rnab3WJ9":0^'s%TSGQBo$SWNm,KqKsL[%iXW1g%YL>mH5>?q-drQV&J/eCOl[_,>]C)HaNi
%#r>b9a)rpJTpPC``(i<$I=DBP.%q>C\=2P-1W\HLBeW0)0AZk%PI+fmrTo*eB^Wcd)$?_^EF6^8FBl/_D&KI6`"W6)1p_TJ;/h5)
%]!!:`D<=Ep7C;Qc4L!eKL4Cr`[,SBE8G7#9KVU_pYqI7Fm5^0D$Js"rD--3?nZCDt9BOYW::/;\W@D/)D'hmV@-Qac#dQ:@/G(FX
%i1TdD;4obcPr(@[%k+JQhb[$7:frFGR,1fkOIIjf!F;UW=rER;0Q!V2NU5KML,k=:2]L=3D%h.uUumYG3PlE?>,!2s21+.Nm^hjU
%ZqB=/%0Jrj^W63*%O7AXgZB#T>6E0ZXj9t\%6f>-&5ujj^03`7=)A[!7CAhn)ABo76Zo-chIN!u(eXRDi3J4dafDSA#4o+&?`*Z#
%l.EKjA`$BXJ]6Ao*Z(FU6/QgMZ%=%l]rHj7BLX<i`rgmFVBUfV``+]RPpb@`(=aV*b"H"SjK=CH*!?t,2*qWC.<k9=ig.'"(hqj"
%72/&A^lh.n<3_'CA+han7Ir:k0&kp.?LCNHU`eiIElcFkU^Sj7#=f@ed_H%BQK).N8k*fEXmh:AXO#US894-dU=K?XMNuj7^(4Jc
%B#$CNh4*)+ERHfXSrOJ)g8"<na>k;J,YMZ:GW(Fd%hrH=)d)?e-ud;OQhFFh=hofH-0e/,TPCa_A/AQfaM]336KcB)9[h\*[Xg;K
%"jn.CV@ao\E>SV0,B,_LG.9$5;]K#_=eVS'D75Wia&%1R;Tm?b.]&T#_M._<77Q],e)n<!UV4:D0eUGi53:QPMA;Re%L$L8.^&a*
%aON-N&*:iik%;U,nn&>jB`U9\k(*3*>4Uok[2r?OKJ^lc>,qiIJrJ4>ipnt=iRSc@W#a'$Rjd_@ZMQhK#IDD0nlohP+%33Bmk(SH
%K;-,j4M\dLrK>D!G?H1Ia4%bg6:i]4Qc"--;VHD#(rdusY^:CW=?Oth=P+EA*8'36hCABeK"Nt`i=pcH`-OE0]"N3*0?31P.QXel
%ng%JQB^Wc,Hk\PI'Dgid9M25;^H[e5M6]n;J`m@5ngQfXQQL=dK0bK],tbI]e38>Z*N&&kk.D<ZQEH%nd$uLT\D&;dQ0#kPlXmC[
%NQuD,!kN@3\tgs;Haq6Or4R!\b8FEkian=?gja8k'YDQTK(ra8^W&(q)S,@f\nWkaGIWbf>\Y'VI<XZ2Fh(cprbr*KcGd@E05&>.
%;ZdB6,IVLGVgGK.N2n4qE6s@[M6"fkZIC5L9It[(WE'^i$DHLYJ<:=G_YRFi]T4KL>YgP97nUOhNH^ZL_9)jP3p8ID7&pBeg(ba,
%d4-*^Feg3Knk,)YZ0t(@Aa6]f,_\o+fcUO5XTV.pf[W'WY?'6_V#hFVZ/eNN1rZA>C\YEN>nl[bTS0c;+cO[oDN&7C$cD+%c"!kG
%9!Ms:&B5n$B./'??kJ+S.O^ZY\5,q!)opa97Bn!*Ac\G#Z"h(LLJM2(rehO7>!sIeLD+Z%Ja^cF\PJF'`27eVC=k4&R<&tJB%MOA
%o37j3YJ^,8D`Dim/VLTU!65oaBf6jWlj7\jiOm:ThG2VZY(\TgLT;t^SSVVp*,(2-HAb=Pi*gSFOi!gW^`h/2ZHB"33erT_!Y$'L
%Sg*4+ccW-rKEem`$f,Qu^oU+.P*JC<R'9/-EcV-7)=QV.<1Z`UpR>c%&&XQ_npE&,rbRZqE52ZcT2[ud8@jZ_]Q!b%&"hU,Y6cO1
%2Y5/onhMb2%'f&a$^-6ZF"JCj[FMitrdqeJ'IBqPC-ZX@m%IO0/Yq=75t`3OcWG$k:-]RRVkR<Wg'S[W4I7>\Dm^q_RfK7JknO:L
%=C%AGZMH8ZL@H5']`Y@)n3dDTe8V<bN"AGK>\eL*XNO[E8,X#nPRl,5e$W>(+*CP$0X4(=Y`>;O73iQ1K%n)8N6XZQOH=VT-V$<l
%a['#A>*q2g`13@rMq#7Y8)*9CTTm#r.r-Fr-GJ<NcNG9NHFK6mrgUfih<P8mb:5t3s"UMdUhNOr9M=,Vi9+&q!L1fC<J)eHeYIGF
%.o;RU@e'UeoW-#$7GGYl*JZkHl'hjuKKl7d/6`6lhJ='Cfc`1XnhZbRSmY_j)JeXP`=+qtD,WKEjK>mQH_X339PO]Z<28#n7+tK4
%HoL:F7Oem+&faAA`#.if@6sIBarR+K]<1`>WB!C]mu\Za[B/h&/cUUPoSB-kpkUR-aEV!(#s#4-PR2CtM>F`\`Gt-#9noI;m$*`f
%\X0s+4J]8*Z"SepL>u:67Rj:Il0aWo?#V**_YO:'Zd%d'>o([r.'':+]Vl:qN[<I[L;6pD1*`b>LM6af\(5l3*<8BPhn*e$<KgMn
%"Ye:m?l2IUS=eWK+;?$1Op_PMC_7gHEFj,55q;Gp6#*'f5\^YN)9M35k*1KR&rkVr]jXW)7)NE^dL.^eZ,k'B;DV4G=SV.KcFkeS
%+cTseDdmZMrApACn\QM>.7#f91D#PB6^F]P&<1Oh2I?MJ%D#<-&qg$g'3Q+V<7KqRfAJt0UNk!lrlt]%[P'p#Zpo4i'.Z7h<J*PE
%?6k^r+:cGr04.s.^(NC!Z##.MbOkrITuPN\Dhnr_2%PD_N3kYEEC8g"W285bnN1'UB_=rQ3mLq]JIP(1D<:X]RR?^%&o[.qQsd.a
%C;LRAPcT9UmHfLh_F31D\D=d+Ae%WNb?@j1od"!RB/MUs(!T[A[;d=96Aj@(8L-Ot%9SFo_-h#,Y\DUsMhs3*[Y@JHA=qQ/3G97>
%+W51"J/(t'`Iid:@8WN_HGdJED\st&e@!Oj(p%#%83*dqk'Wk'QVRkg+ogc[g?`:XnhU0",bS&6Z7?I9DjK]8I-Z^+Y']Uq@cu:4
%fgrbRQSMOK/M&L.8i1\6Wb>=gpZ?*mg!V(t-?E:j:f+?]m.YpgFX`_ql`U!2c,@o4Pma?5p*A;_>K,dQ<]4.+(+LfulAp+[VXj/"
%MS2PkP(bsFdSaTE]3NL0.B[e&1+6X90VrZ+r&:Y#MAl(!Obb=>%dQIL6>b`=ZX+:2IeAX#R'>>BOq2?a/@B(MO/:.QZ!1PN^4:(+
%flcO*M)(nQQ_M*MFP;'2p#b]!SF(Mp31=n_`+JQSpdZ9_q?lc%o.1clC#-J));bT/rp@8]9-(,J`>s,O;]Y^>*Ve_ZHR/*5p#cpq
%Xm993ns4s"fQ$3#GHa_/&h5aa''D["J*[d(WLoCRkZ!hP6`SlbV<Xj3:8A,A2t-2^\sG]TiJ&%!T4?)@B#a#WK2E/V_n/4S:-_Ob
%*HT##]VtDr"[6e!c2(..-$EVjMq"N:]62!(:6d&:$>0H<ellXu]2?d^U^#H)HoEfk<d1@%oWGP4-Z.[2_gVV[o]l&(jMDIn=7flT
%/67mBFAe-7-hYuA]mHELojHKF@?L+Ug+MjfZoCN2@D:D1L0>/c?1-*/;VJ:ngt&Wl%_!K!p,O&'C4A/gnN&,cmuGAdUr7"V@U&H#
%<[$7[[c(_Ng@bal9OB-`[RMK*o#i6M20+-;na8D_4Op*QGrgb!DWU-h+eL)(+5J):%9b2`Rg6\<8s0Oa/j$0dUHU"\lA'XO+7F[Q
%dlBZb)(;\*[eY'oV_=p2:M<=l^5a7bRQ=<F>Or6I-$1NRZq+\HM=eICYh`$J"taTIHu633Xfsc9Qa3Z,Mr3d:<(naa3ub5unf:JM
%E3@k9'H9,h/O;)b]J!U^5`YsEDbc!V[l)CK@A:d5i$%2NOuTthhp1o:A<+H&r5!1SYfK'a;U(+6LTa,l-%!$s0G0$Pl-Rd67+/]#
%?.T#:ZIU33jE.EEGdM/]K;H-5l"]Z/cB'8P23Lk_*.'TDPM\m^f<`<'7Ea57PcX1'-\l(5%h6Fl"@@5KY&\H)B:qtJ-+17,*<$Db
%-!SR4Fc+=NPg.Q_'b?F6K"fLK5:.q(4lu1u+N84[P6L9eV]a2q^KR^#Ad1T-\-MFYf2$#Xi#2s)DQbdolS,Cm0JRoYCUo/ai+#tg
%c9>*(VdtB2HH9LT$"Ls91*PH,=)STJV-/fEkY.*qB3@AL4!rfBQMj)cO5`AZ\f8*&2lmiKK:_X>/]`Nl,N>.]Dt^6RS7eXij%6m>
%ff*21'8(Q!gL`%5,^5526hJql48%"N%?!RZE.HA^8AY.E;-6-ll48&FL)m=AU#mWkd-Bb$h8@-\%%pdp%_+O[0&7DopH'MNQTFjS
%H&:@2=.iKZ;@pEd0aSmJ]77WgfrXd<Z^M8>p0n4=k_hE"2a"8rXuEZo2C9.Y+>i-9&4r/[bd\3*q;*q0H^=kTJsUbHBb66!XSgi3
%555b<q6b?X!u,%Xb*51hQ#(9+75MV"?W1h(aak/N>`ctXCo=.U0>&%uX'#XXCaB+)EN`0M'p<"2+*KYJYH<5:[>7/n.9DH5,)]'L
%!@0+%jg&FIOSh\9VPD:5A4X<$c:(sGDPm0=:8*+/1EQ6gXnX1`Pd3.>!SDOL$>ij3PNVU*4Y,)Y/Tk?u\ZTRtq<%UJ/8A<h*GL%<
%I0"W!W$P]??'^GMLfcEM;5g1XP@@fYI,1*N;8jM5;OJ'$Jp.+-e5$oNFX`W?>-^B&C_ls'Mj,#L:\hW5mHYPd6.]E^l0F8gmq2He
%^YA]W]&27Nn+&a/HZkQf#$lX!h&ndWCKrCBf$;'t_-aCS$=d4)ODN-OjY!ln#cU$:O.\Z"3ZB@N`C\ltU/%ZQh7e%M&@(G2BlGs\
%DN3HBj-=*D`F3<qB3gOFEh''Hq.NYe=[rd]?IKO:SXQWlHK%IrnWTq>0[K\3&pR%jmsauZRQBr#4hRN5k7-->aMtPX7_>K]g)1XR
%SYTHq/&o9)fF'Cme-^85UUcVh>&>%Cdplp,Z7s$+GNj$_AAEF<hXPFbo\A2!ASSHW]\Y</qJ8K4[mU(hcfN^#prjXme69q)I+Wmc
%`1]4QUeFT(fg.3Sr9YsBV)'Vg[28s*6FFG(`Cr08nVS5'm#+]8)o1b5c4rF5CX,Y]lh]9N!RBAs/s)k5R\+Fjd>ZtiD:TP+fICt`
%k4J.Mk"uNbMb[,Bf(^4m.;S7i,WBM49*a)`f$TB3hj":V<BU9cBC!aQ7Dh0UataO(JNiS+9NaSE)EZ5C3nXY^XL2Ua&i#B'+*`g3
%fu]<.]Kl'M84?*4](&>Qqjn&Sa'@fTctN2d?C_gH92;S'Z2RErI=j!liil7V=F!;Gj\\,dS\7naWdMFJ\NIBNJC<D<B.?36i(2F<
%G>_uicf5u,Lt`jFPjUmg0S2ZGpZ@,I7C&`-`Ut,:ptkpuadBqKGD2kG#iSpA-FP4S!HRT<hHuUYYR,cbfI@9aT@Xm`@;F[)kK,if
%4ItjITJAP-.UZ=^N;oN`GMBB5]<9*/%IbJ1O_WoQl[D.;&+65&\?QK#V!\="$pW+\6\@iS8ap2as5#KMQuhYNfK6Dh:F:3PWV@Ud
%)&X#J@U8,bf.iDkorOR\$CXs%m&:0Hh&d7VMfYml,imsa`\`=ec<@nYmHn'h(>_>f+A(Z&6U=R;#3,2B-FH?oobF4Nok?!!Xg^0@
%2X*M=qK?XJ#;iB?;ur]IjFq_qEO)*9F,AgX0Ojq7/<UX^Js`)sS1TUB.6[@7%4jTN[8cV-2H-l(a'dtq)Q6@Y/.JkNA?G_1>*71t
%b?8>7jYe[h2@=*7c6tfOOqm7i[6t^_o/dX`JE[Z1%"lBRS[i$:'LM(>epgKH>p2*E2\;;3;mPD&O4rHu-_#4DWp=14k(BB(HFkq=
%2-Rc4qV'LhH<V$-]BT)a@+ZT>6<B`]oMVm;j@B8Z!kp_]#fdP^ZPH`c"u9U+nTmY7*?`o<&fP-rrEbYmpYcPJW8$CDX/$cck+]=&
%9hqsdj)MuR9\Y7QA9ZuT"-b"<BsCH**A$nhb_MWP$=jN+W::#G<?UDCfjf2edKHkI<h_JCCY%=Sr'F,3i'IH!&2n1Ifc$hEj#+/l
%2jruAPA.Ul%@W:K^7fX5ZaI.#'tU732fAp"9BZ6-(<B\`)&e;iRpK.K57;>Ug[YKSIEnoqUl!C*,4M.s?BL0hJ2XN9^)\7L_pD,[
%B\Hq(9i0\$FDk+TGqLTZ(BZ7#)Pq]\UBpU'o6q)M[KBh^.$Y9fWM<X@GndWt/#ua3FR.dp!ks8A4(%li]CQlrlX5;%T%k#dC/Z^h
%B,MDcN5-bZC!1D)ro7b&E%Z@*S+CfJocdBB)?2m)Y)L5`g,/h@/k:(KgNsQNSIPi^FaZbMmi5%8No4YFZ:\%hQLT:m$CB45q@4%\
%Yu,X5a7r9c0pA%`i,^uMC[)kQM-m&bA/t1J;kn7k1n?a\]@IomhT[joNot$K$oG0FPX`.tZF$Efis&h\+sLW5@oaBIH9T%PfjkF>
%2ir/NH.ei,-/:T,DhSh@<0h4%<'G7F7NNSl]0EWb-tGY1jL8eshNccGHg0VR1pAtQIPrKi4L-SXo9I/'16PN!Nf]!UX9;J(T;Ob3
%5KV3i"#Np\"!q_=a$17Ws+Us-4&^0h'>AdYQNUq57=E$p$o1Ti<A5tuDZKA;5WMLe*hgFoY9m"D<%qmq8gSbGe#K_ON$tto!>Y9a
%N`F>&kt2M<3ugp_l5hSeS=9NDpL/mij=8"$6n&%Jc^(4T0tRU8,RR<Qak[^Waf6G*CF>fCN%f:Rr=(uPRN#)aDE1m684SKTl_R3$
%$?U_BN^VlC_ro0Q2S:pO?snAaXD^soVU3hog)N4K?kR4ra8d05.N`%_%G08Mp/lE1Td!5h*q/)RV*p;?Y$Ht;B=0XW#Z`06&=YF:
%1]nJ<'Q>79O!<Jqm!M@Kjqu%bF;ILi"2a$=\)mA5rRIp[Zc:q&SB1P6r=_SG"Z.nE7->Iq3RKS="[s_>d_hmd2G]RQ1.uUe'I;cV
%!Y)7a1_+j4@LNWU;*P_JOXn@Y&H.+$iah,.G6+I@b>)G#\.Zk;K%:0m/:"0#g/9+c72ZW71OF[>P^8rQ:<A2(PVSPhFDtm]IHdh#
%MK>_'YA!j^S<PS%ik>]`3DYl"D=IBG%ga<ujRJ&Q)A!e'9TqaX:b]=)U@bjd]YjJWm'6XN1lKIR5FcOSF]<YCH'aTj@STE'[bqcJ
%*hNmA]4ASOaOS7%@'LQ%*8"sRB[j_VRl;3a-qtA<i%6OGBXZ^e#SI8*8cF9o9T:U.E-dp*3fMqf[@dm&YdO&l]$R!1K'/a]O5NN?
%?9N`F0YB3Wi$*<;8lG^h*GXos"YkAHEn=&hBdV\Lp#o4WkY6$<163uk"&sm6MVcN-\Y#^?Z^*9=]Crm!*cTW5g!l7f8r..m<CsW>
%"tt>-E&4PY7su--h(Ae\4I?]?0]C"_`BZagHA%8d=sS*/-U`M/!Ag_R=D\B%0G$5-HZ8?D]SlNlC.P^db$K]MP`Tt4"QPGQo@"Pe
%O:qlT%q',r*$TkP.JQ@5gFTW$'D4`+>8rh*#Bb3J3k]9=)]LbkY+GiudS$kBo\2lBS=Ume.s_.li*o'meG`IW[6:`I%c7Ce*+l&7
%^]*qh0<D`,T-OXlN)^L0nO,&r5-)@$D$]oS+QD(.U[YSA6khY?Pik,n@oh;>7kih*G)I'j=BPU-#;9_OPpck?5PdMr$Y2UT.dQ)*
%4!Y_"r'jS:6D?1i6kE+qarYG!UCiUlBLim?JU5#W7\_.F>0h+RTPW>_g,20l3_t.R,S3XQ7@0i""Jh:U.%:ecQKMT`PY,[LB9sbo
%,,B3dYqXq:)e![kK].p6d%a3(dMEYdLSA@GU<NtF(37VZ#\:*]JrgQSaJ8P.U2Hd*(Sb6dAM@OCgX*>O"KI^BLbm=0Mg0`kGLqiL
%7YFn[;QF\G9B?8#MgR8i+h_"-:a#(J4cMf0&tugs<kTHZ^Fc3:j+/HsNmK)&,@?[_].`Gc3jeqV51X:9R&fS3;o<nMnUfdT7sI9Y
%bi<)rrb8qKHoetk\A1QfhLGD#\rbC,J,5fl5("nQJf,.B[4=X#1FbulJaDfIYpk=55u<Y%,!9+#7Yfe%0DBqW97b-j=k_i8ft6)_
%LqQ"_&O!oBL4-(bF?^6@Y)K(W!pbj1Jqkk+MNN.5%ed8hZD?D7W?b.E\eMoL5sGCED9%u/]=k`(;?"GDZHorP.Dq7*c2@n71nB>-
%S4iXJ"PZAiD/D4Uh5f-;3^Wso6J'%rr9B4%`kB,;>!7B5o1q=i+"6E:NgfcQaA!)+fEf88d1I=+U'U5]o094l/UT>C=RLqJ]tp'S
%ZQBt881_4'%h"Qo82%H,Ac#(;mqZ#JW7gHS5:j]6(@6gQqbO;%_*QGbi?08Xr+T80&@4"<YS:2-k@$ZaIQ7k\l17+kTDur9p<3k\
%fls:h:h%\Ug#`@D&K#D_7r3@V!hV(Jl1BWF^bd"?@DYod@S,9RP=\K)-INGBE'#9k3IbIiCk1$VdA]R@;'>bJ/&)f(.GS.#573qs
%8Q"F4M<d.KN=LR`_./>+2]7j!7b6#?+s8R@"*)KNnS0J7/0bZ$>X5e-IG$uE6J/X^JS.Gon:;nO"4<bKjd25/#o4#L>S*(r%PdfH
%6:D)c0aJ@TJ`Qc&"p:@)N#r2)Af<qt-f-\7BY#TsE/t]>POoQ280i><)3Hj)S9QnTgs2r?<n)G712D"I)PQ@a77+!X?H>UF.Aca^
%%N`+(enV95B,MSmGWYQD@)?p#\br8CK65[R>uYp3KZ=0Hff<kWW"ib.>5"Gc@-!6%,NLD(#E]0p`*q`@`DU1f^m)2QC0/Y+/dp(X
%"ZgN3HHbm9:m`30Ub[A]`M*+I?>]ZKkhlXs&O@mq0Y3D&Nn*15iKs;7M]_m#m&i\chp2)_DValH/D:RepYo=O,_7+p/Uk>@a<t95
%^j)_2W0$*Ie/i782<f=d!VKgAClaRc=0uSecie(@PL+]%9@^&36)RuCPu/J,ooEJkIAr?l[+gILFFmU.G;u=>d6%HIZBZ=I'_sh&
%d6draMg&-?b:VL4D^(Bp?"D#(:q[O0VbDDbKJ^%.fY*].bA-qR(N[^5/HJ+h!?V<M0Z[Cg`=g<q5JaXb<C]J)>m7%hhKJL6_FufO
%pb"M#!d^S*@^>f5-F*HFbAG=.UU(C"G@Z2GLbM""!We.R11`KP2K[V+T#mLI=[u[",5hH[Jj-oJ)GOmQ(_tmSE!"MOafPd<c#%1h
%Ur>o5)X5HM`^m!@-ok..hbbWTrOts_c]P4*!l,EB.#Q?m/e4ETn>$W?CegEBSaZbY=Gdp.6`F+B'[p31#'?k+M8YT'B>^h&\\1>!
%IX"+a%7P(OakpnPZ%`ghma7/J[e*\78S\JWPU^5MQF[0TkiI"ZUtY9nm+i_d(q##l&*X\Jf,sY1B9dHlK%k:\mU;n.iO^<R$YdCB
%mgf"=l*S=hd70k("!7.p]7P"/&.,Ncb0ZLcCP"j`[;J>riSMHAeMK:&U06_[R@6KV,M!s2fSkqcBB$4]Cb`0'!I=l_WPSOnb*49F
%EMfN%@>3u[9%r9U]_1PDajglL7<G)6X2RP-=NQM$X&.0O5Xn'C]CWE_K]rc'l7/5NIi<);P1obp7in,a?j!$SOX:X6\1@'CN8%gJ
%-FDJlWp&NX6s`rn,YpVkqlbesD&_s0Xk\,4W$)l'\\ouNVWI9"a+L**CBf34Tt7Jo8P=*4?sbZp!e\Le^di;:8rdUZ5t'9*"G!#T
%NR8$;"4+dS"-OV(>PgQ>m6>XoBDH-r"[M"_lKlI9C_`VpR06\>1CkJ.C_R;Oe_1]MTdZS.*;NJ07-6s&n]YG+&?lZ4&k8;A*!$>t
%He:JuB"P5a5r1J<\7OUl9oXSZWn%@]Y7X`Frd!]<m[>e@/?uBA"Xm!$nBbG,S)^C0E#Z(>4,7E0$#LUbk%A4*`b0<-P(F`?K'_XJ
%.OODd<28_m8XM4:$?27eW(+CLgU80C^k>,6<>>W[Rqdtp-Vaf-6[;5Y/=E\ts1Vo9e&@LJ=L;>D(0,*\i)EcFeh(@;D<D*b;pJ"3
%#l?^oms1Um@fRmhrt%QY0$bf2<BJJq(+BY$ZIA21>Ok8=d9+uSKHRb.0jS5q(e@JL</[%[ZbVI,9^L)71U60t"PTZ"_qGOHZO]Gf
%\o(0>J46RVq)a-ACC)f&`)6YD8@L_uWN,+#4sl^?k'uFg19s'QjGN>f0GUk51"\>lXRmgp4O]iT;?d&R`a[`g6gPf\+G&'*@/6J&
%i]:@.W.jDS!^CjZm'Ue.e9uPZ%M<HQXMGOG#,PXTQ*c1j@A2Z>A<=BYi_a5@UF@`E;k]Ec$$^4;_/t9GpEifgLK&G?8)Jb&@Ed:S
%XH\JsN1E>DWWgZ7S%\)/7,KCL^&@6`LA7+j("WsDUO'S%2`4?RJF`.u</[!A]C1KQ:9KEJG=0QU4I=ZD@oR_I^A?Zp0D;*srD=Te
%QS/`\SKOO>OqPBZoL'j->NEg,]:+F*K#`fe(OInJR"J)5L"bE);7m"f,Y,.12jf!23!+p*i3Flqe"g4$U*lb*FmnL(US.#u#rpY-
%JoPJ/.<ct60?m/ms)WC.heWM"W!ZO(1[)]5a:*e?fKRYg&#j@@Hk2<M?),`TE*LBjq2s+E5;m*mam4K,F^qD+_1ZBaIDB@J7toMf
%8J_JcIQ@n%CpRk0gr5n0qn(`9$6RlI'mnp4-GA3*kf4c,d>tp7(VgUK`[6?f(b^kco/T5E(1&oN$DG@r>*fE$Ho<(s;Bq^p*VMek
%A`G9D\m7P%-%S3"QJCkXJ(fUZi%?A:57?,-g>62Q8EOtf-I*bqkM]=Xg0qIqKp[!`9A*YV#?GQN-S<,`:\S/237XSUSeP#H0_4W:
%*I0D[d.?e5lhBU?2dc@@mVi+rUbDIeqJn@FfDVTX7EB\FDTM@srNbaeqkNijJ+<$qaBSd<f^;U2%+i*u2!"/n]?C-6rD>N2puEkF
%/]^eFi350C^lUu(H%D:a#bS3h5'FEm"g>D-]Qbrpr^U$=Ou'4^D%H>-IhnFC!kUCOA&>]AfC8g'7]'<B4!<;_K$g6,:oku_+>p^"
%\Lf2a]h7-igFIhG;C59]foArRZGGKd+$<U<m+17s^FXjR6$HKh&-W0`!DbYJ,?,5*^e`laC\FMprj*9(eh=C%-NU4N9/^`=>hiaE
%D-rTtaY"^_k)m0<U:G%HHF5p+j"m)S!/@bl8tnQ-r1=]]@Yr4I7%j@V":/D\`PKA4CiPnJKRr^D6nh.W"L3>$=L?n3JeMJNj?6k#
%A7S>c5,cgB7/jpn5tK#`%]k3F:A7a3!FF')2M',U$-"A&OO\lmCf<BOjFqDk6Y,#_9oe%s'D4fHn^(2I90%eR&`kAJ+3<bKAA]]]
%`3S."nCAnOYo$BJAat;`GugX07e;0WG#"!BIRA5[F22"eGCU'Pf?b#FGp3\npN=M7X$*^oWB#Q!D)n=WZ3nqQpn$*T"tkfhi@rK(
%gBG)69RHPN1A_`CAB`lA*IE04,u/Je0pi8iFder*&d-npIfu<*==%>g9+:V)]+JrH'WpNS*i2q,<[,/TG%PS\>ZS.KKEuL!U;:AU
%T)HV"Md9'pCkS6seVMqR6b5`rS+^As8u]qJAh^u/*,=Z\$[Zt,C[$)s@*L(8ekVCe"Y_=u<R.?,/HguanBVc)Ndt+L8/utRVWeN2
%D5]ABGi11k;;Y$5*X$*2CoiF"[PV9gDL]R?P!&_9ft71c5dfj!.?16VE/E<SH$sa\/JM6i\#3u$[N-!]jND`q:s;A=`41aar^;9>
%EKL?(7+N7?o]^S8<pkOh5uk6:n/p(H5D.u'4qQoc_!Y_0iOJc=8"Dj(oW&3*Cp@=IWp6Mp09+#U#E>Y8r;&)R'VX%q:%6KO/`e4+
%H[J#'9:R]tK*8[40Z#53L4`?=Z&g;T#csuWaHHb'"IT/tIQVo:$?F)8-^Y$Lm%_c=6I@%ijQ$:D:UkYr*'m\t#WErh@?"`ca!)*9
%D`0(>:%3tt0IL6mfnKSk1)Nu/Gs/4^:[1J66FHXLCSZFa]kb99&i^@@CbtZAR]Lcg9sK1l-gNDa]+e-5K;*1$A!X85@[YZ*#i+S#
%;X2C]gCTb:Ed3]KN>`2?`e(X+aIce-aG<Y6?hK&-)-1\/e>Ye*4qR%S^B,98J7S-UT_AN2PVO1fX#Q*?^>)\$c],^NDreaE+V?Q@
%)5"(j.cA;0p83gDEs/5H3OGouOR3d>X;ej^3MOXf+G4YGJS&.6h^Jj.:c"q:_&EInE-^4]n[WVPAe^hRnqS3r`K4r.dK=3()&tu\
%V^Q.rd.o.<MQ@qB[LhhEf/lqOcFeld3P;A/9jlda^T#P!/m>>AEY=Q6UX;:k2cAhJB5q:9`tV'U5PJQB[[`;UBN-=\7F@V?k^VYC
%k';N'Kealri+1<oD&2(=U7WL-A?uhefha:,Dle?\1##fk8g\sQB&p3>>C=oFfE?^*.J@%6;0"GLD.*N_%I&VlZuuK)1`*8YKI631
%a:4SmE!l8Z<W5/48h57Y@'s95f@9=G+J3`n8OO%Di@YtL6'mFm[(u#NI.p$\,7#XtOUoinfV=m9/'&';B4Z:2_)0-Y/5_6t%8]n\
%jm#4%DM+%`Y]0tT.@DaS]S^?i,a8$^RJk%33Ml;l<J7:S<69f&@WT8i.?g!:F\Y2`4#^`l+2Mhe_*C,_g]=BXhLN_a;61<P(Br)[
%@(V"$"R6&mq0:>Jh(Ln]gdsMs?LS*'/H9jg=hQ$CLurC[ctb/r,dYn0kfT.EDG1G\@X6i-\DNmL3`XSC=Igf5egf)/g2h<m,"[2F
%>clOIhMQ%ZbuN7oKTie^6'X4"fog6U$8#jcdU![<*J2+"BY*Nb/QSO^@XhH"Pc4Fd]?Mh(RcR,9<KLQu7]RS4m?c(44bN"q.j_`h
%m@#7+X-5'o0O+XdOj-^VjU.e5YAe-c!]<?n9NNEPDn5un/'Zpm-+ItqBY+<Q1RY47itX@*P`rV`?<I@T<Qr]h5ba0@p+)f\$8]<:
%%9V32<&`WH_V2\8VpU5&e698-$o_XLaoX7IQ;AS0C;ligYM$2YOeImm6^AOCC`*>^A8T:f^4;]YS,*B?aJ,`BAPn!6@P`h[/5!->
%/gkG#Fg<Hc\P.(qWbEQXk,^1=VQ6#^DCc98Vjj>U*Q"gh)/ceLGDfM::r[h>i.X&!4+T:ATG!FdJfD*_<IV6T>5lT^k60%5I-`9;
%ElQn;NQfnqAtRMUjf",G8Mmej$+7(1VH47+KkFK9(/X;1=_QOk$Hcc1)7PulfnOF2RQ3N0d;Ls^!=^ruf\*_:QVH]KY0cGVQeCmi
%=h$k04ZU8`6BV7JdZR&pMKVKujUtb:1sK8kGqT8:OuEu8*f`/G$Rjd5WYKJO(G&@'VMC_E$P*1SpPq`B:)<$MdFsS]:"gOn+;.4;
%s'#+K\e1aK\)d<P2#WplU[NlI.3!,>hEc'r@A3)I@,cc=+^AmK4h.)@%1Q^5bh/d\g;CbpjY<(@q'D(M9\ln&Uh#+YWQ3Ii+RCF<
%HY3=SP'HHO$'U48#FE?qOfYl-):@eI\$pkm,6eXH"[%Dp<a?Ip8<QNP]1cW%Lp0V/h?6<mDGI?1RL)Yap6D&]7"up?JL;D_QicV$
%n-"A2E-'Vf>CoiLg]f+R*>sl2=,G0-#,mK:AHX(u1P3Fg27%#sD?L'#%akWSXN5j0)gHs)R/:K."/B1*PrNX`j#]>`H+/?%q-<-h
%hq>dF*J+HRXQ<pb/hQ"<,ROG)eH,qlN*1UA!Af^\)F=h!$1G\=1Uhl^Wm-u8@^LZ2j"bHpasK2jR?d+S0Yq<K6a%UF(:'L+5f1+[
%/7:S)bGekb0ODKak]@27CP"KO/R\(T26L#iJ1%rW)F=gVgEl7o\6?Zj_Wi%=Z[bmqVg[P?0Wu@3gY1d8-]Pl)/79[Lm:<A42!#YT
%d:NFNnPl7="@ct,;OuVH(=f0CgeD23Vut=>i!Hfc/k\+l`b;N1WsMH0e7s.]9jgk'`aq5M?Sm$`jn5Q_!iQR=7Ebn+f&5n0!^lU5
%ZOI>bQ$a*a>a&p2CM3cFAAfh,`(aWi4e$619jiRtp+-[0j(2g(:\ls)^X\XO]F.nsiQ_QQ3#mT`!Mi+R?igujHQi)2P9ri.gR5Z,
%UO@6jH"dFLn;liu7%1rrIX9*H#;_`Th:l'K.B\)<$b8Di;a@pI)f:*P4)=:Z@9O96Q0mqR'5Fs&?ZPjh(VL&Ol.fFU351i%$Vt0D
%Je&"<!jE>0-_;Cik3td$gcW:0$/?fsQOks.EF(+tGW-$ZkuVt?B+EtEiCRc(=Vce#h<<afUmCfgr?MG!@;+,Bc4me(@dn\qbXaKS
%T&0tm+s2[0Bcp7QJ$'DTff.HE][=-?3t/7FW^r*T"pZ<cOY/.-M=Y=`'*O0n6Y0-U[\\\.:1R)c9Hq-W>:K>tk[W:beWFH>b>[Jp
%]TK3u:*KtTgjjPGKFHe_F(ZEDPCj`1;b1t?9@lkHs7S\m*n\pc>ffe>prNHK3A\@<l!RAfpM=Eq3?3lU8Jt8RUF8W\6D3oN+=JR@
%GMSV2b#XqIf_(/5PO/"$1XLE/8`n?u,3L3`&s"nnrkmnEo,BeH-Sr)u-,>>"52D$=O<Z50#F+m_6rN_[*UH6G0J^+X.#"3N:''[p
%fI[=b9PTIkfOE)]_j!H@KM^4+Fhuh"@TG)L634ZN:<#u9P/ef`1i<GJiXcE.Yr]:tCB,Y#6K_k-6^U,21QlUL$8\>H\\shf^\cFH
%o+qXK14`n"Zc)+:DVI!<].HVei-g4a]MkEA7*8FTNfmD$P5lXN]k/8/VDLVKj7.\h2Wf'S-(JQS2b\S-fn3WpfHMLS08;clkI;*M
%0gO;ID5^L<-1Nd,4b=.[8afN7*@5i&g#>oiZ*^"CfN=P=I0VI\"oV3,&D.&.n/^^i+B#F:oS]hc:Mec<>%&)IS.9QO*A0uo%44Wj
%@P8I&!2GMmKM(`K/mEB24[G!;(.Y%)&rDWJ>HC@k(5N_IdhDcLJjH)OLe=J#<ml"6(T6";AmR5u*A2IV<Hp:+^J-g@iD@Y#B_ViC
%9r',:c3-k-O=JSn$s*J=m6.Pn,E?O4:I#fNjU>>d@N@phF+`9PVh:0"fTrf!@UW])=\ts>ot/k'eL57c%m9.0WU9>(-P."s?U3?7
%iia3jB`qQ';;uJp"GXc^iBrLn/`l6lYhu%CNuuV]"*W``.CYCO$0)06C)$LmOV-Rbq?UfC=)$R#ZH<8_MM%]4CRZT]Lt:e_@5o`%
%nkJs[]$r5/88.,Oe?&4:FK1jAc->Us#kn=UNDsK*p=%d0-$[!Wg#/^kUJ4aMEe)@o=<-D7-8Qn[pD]>"dVfZq/st%f8MIk;jCr9r
%=*-]!+b*HWPV`\`0CLb,3eu5Z:\B06l&Uu&lE1C>e=te;k/Uak-<T!%:2DoZL(_G@3a?:)'&?9pEi#fWQWJcNUpcuEm$)hJfbc(C
%P'7iMP6f`*nN9G$UO4140oBPqA5Ij997-6bYCp-J]V9fTq-%S-,5]3`_?`>FSs\lS#bO7Y99:ETE@1'rK$+kpZ$K?S:1K<GMb_9>
%d.oH6KU3e#?=s*gb36A2m8ro2^LR(YG\[A-$;I%-.\='qJY4Eo2#kJr?BOFSmn(",aT@W)1eCT&]i(&jTb/S&(f@/g]`>I3Fq=iZ
%DQpn`FaQ$S$V>2LfWcbEPen9+C%^O%d:+%_E.U$pi-!4SGcVXD23L!TJ2].!\0hW\QNuAbX9>IPKKFKZ,CW)(2l]f]T1!=.RGeIO
%$[A:1O2(O"n7h+5R@Bk&8q,PWWU/>H=+),.-h-=d0.i7o@&,=;e!4Z"Mrr;Q?.L2?Cpptn]Uslnp**P4dHtqc$UL/<#&tVS\<FX2
%m''9s=32HK#m?fV&A9HF*15AL"*l$el@^?*=Y(+N-q:h#(P,Eo9Pb^(.BHu#QH;59FG:eK/*luH)@T^=P<G"dn8)WhJmo(u=D_Bu
%VO\CC4?1l\.sA[/Aa/9rnp@.+ZZ+qM"?T.X8&lho*(,EP5]_!"nt=p?<.l^-&lauC0q@;*hj""I@4S#!pjbh+aTI3a3C70<$j=-j
%YU0H&`Y)*Ae[Y$.Ej<aCcf(W=.;9*)dQl1BO#SOJ1/kRt8;$WSc<aP,guU3,XUV\uaWi8`@:@>7\_M0X..u8[CNrn=5TUf,j$7s!
%f*uu]6%7L!4ktlt*KPGGA0tcI4/2A)b];pVJa,cYD]T"\=;Z9R*r5HJW)bNjs(0idI0H#6rKOdk\CuoUl:N,]C>[7Q`n`[-&:q0a
%CBH(Z^0_P+.C;O%-_cM<2b#:*/L)*4mVKtB6T<bDQ4.2.bcF1&"HlZSKa&9FU/tce.]*O4-io;CW^bO2EdnSNU74f:]B<Mgrn817
%Tf;L7rT1ge+1D-:R7PYu8JGln>""&V$AiQF+(F/kNj6F1?-D^M$3ar__.Ses`Gl+%e"KJHb+1MVD`YZh&p6>2-ljRa]0'cF^_[io
%UFeDTG3N\J!GKV[0]9Rr'T&'qf4<=&R)KH?'eb>W62CZ0Obsm^7(Cb\Z<L=cO!Or"76op_k>g:7.VTs&I&0)dl4nhE7Iu'?A9'F-
%>;_"OllpKeEd9LR2^K?D5YH%8jV^m[%qmAQ1Y@s,&;4]*[n0__-)-C1*7,nQ&85jucl+l+TZ>>9@bV_H6Ik]Opn6^V`0Y<6:!n@-
%Aeb\=Q)Fj#hIT!h0185CTt]qP-Tf^J3=)Gi$"/F,E<s8e65'+@gsf1$?r_jca#EoTK[t'PjQmP[ae"eq6LOS[A!kA_+;#pKK@LKj
%%T"%nI\8t%[Tg3UA8AW(."m\VGC\T^k)u.]hP:?5I2-L!bkfmQP20:")(!e=,F1o\=s(`6&UB5AY[WrQ_4r]9-j9E`HG4Aa^aP=3
%Spn0U.L":)J1AeaBXV(SE%*:R*H<t3K%$Gq->*i%K^\9ha"KuTK%.W?epnFgTBU.=S2j%F$P8+dCYpHjM-h=fPR!dC+])<n`W8]0
%!u)uB>^QQhULu%Ke[(Ph87/qkODHeogG^pH,ER7&6D>T/.ZONIO9!gK<@C+4eH"*FM-udH&OqA]RSSU`cr'kiMZ8L#,]fu@:I9+V
%`AK=\;4KfeSl2u=ZUeBiN7dkH3[LT@fb?FfMjklNS/S0AEN[8-IN1t,2+@!n1u_\4<D\AP\(K2.RT1g(D!&NR"\<G!(P<FEH:UBh
%=lBK/;RCP]`4@W=>q!SkX1o9%WT.h[Ou<\7Es:fh+=1S:lmAtM_mg-K/$p(Id(q3$"M,A*?t@W[8gr;!B+]L.R<0uP4iLJM'1dh'
%4JBD:_V],fdiGAm$FVp3E'"BJ-JT[A?`b<Fe-V\:$`>EUE.YtQ#dRg>B_ke0AV('W#832_gF[83>-C\qPm1t'^i%-o#<`j9FD"_T
%'@eUE%`$"+nXLI\No!J#QP>OjXgu1R+$`/0VM_[P.V:,DCt]LJ%PoXPQ.I-@B?DR2e+3"UkR9lH%DFpMI=3q%U?Z=&JaW-b)BKP'
%`E[td`-GseZC*7U81"',q/p`+j2+2g(=?X'8D+\.=M\'?K0#`LQD"\o!^X-:!\>\?RopN)Cf;pUCb$kuOTC]1Z]<M88C<]W4jIeX
%\WF+_(\n8jY-TArjI)#'E9D#/5'2=9h5B,S"o=B>J9,3;F'_LOLG*EC*e7.X=T]PXTlIg?-a<mT_m0I&9ob";:e<MTn6L[_jOmAK
%c+unMoi2/j(l.%83F0$YT6-X/*Ph\Z/]II?[^<j"/7#Od*N;:s<WO+b-&1Z:)O-Hd1tnd6VOMaC6]S7C2]rB0l8%P6HF$'RW=:cl
%ZhiIsNqMZA@;V=Uf#aAWQYgfP"\N_iD)3il0!067ha-R5:Yf'ZnZ^Q*nf$lTZs4A0T$pL8njA'aLV#2)-T!E*"E,<I0W#jsS;*\b
%13/Y5N!q[@Ahafc[$-i[0")`RqcTgL2H5[-,9H0Z-J@TfJQ@jR'R3Q:Q?]]GpR=*hFZ[:%U]`L#A'UtaTSnNX_AWG7f?K'A&RZB$
%cDMi$9H3rjD@"&":h/;lJL3=(GmJ<FnO(?)k?Rcn'&;jo\l*F_SZ!BL@=On`0r@+FpO^Nk<b0r6A<Y,H6\^5TbmVZ&1jD;JdR_Wb
%H:?RFaaNJ0p##QaoU*oN'aS#g%L-[F\7s?^'N,U<-:Y67)0Mrt+4/E9ZgnmCOuq6)P(,]H30(\.B/Gs)+3gNie)F^#ZAXr-ap3SJ
%ND(.6o*rO4.:`RX?Uf(i-bGC9E]/8>N=\R8&1T=N(.,1021U:#kqO(W7W+$t24/-;%DXS^krp$p8d!jqfRYgS]21h([g!/_Y_O:g
%/lqAH42I<IpBG.$B[:iq^obR$8UP\KE<;m@<D`lK*(8F9>2RqsDA>`(g"R"u"(CITiH.?!3s%T\kbR?ZD*6U1$p?%G`"3@-Sr&n;
%5hi8U_4h"rXqtS5%#RVnKGK/DFY^bZcE6>>Grf/P'B:4=lbcEjJc$a?E)kC$D&o:9^(<I0b0K[)QOMadh:0_=>X6%nUhd$+*,'*7
%^n`5s/s]qcbb2S[XTm?;^c?Nr.!MONq(TNl2HEnY4bNlQI8eLIQr>LS;!/'LU:Q>YL^2Eei.-]E/t'N=J?A;Gc>K(U0rQ76Pg-u(
%%'3!"YjIt2jI.2QDdnJ49<gm"2rc@Vn4^$N)b#pnOjfEdZ9#$bIo&PBP,MBt@1;Z6,3LW'-%JtR";KD/OmL:A;n!.^*IB:-\e^PX
%F$Cl]L=RWepC'JkQn_l;Br!!Sa([CZ=#'%3B4J@ni->B;PP:Ad)PW#+]1/qM2.__=dLhk_`ZCOl,uRBl(![;ZM^k`&,%RreRL8n$
%cHt_\j&m*Y@daOib.n9BZ5"Gij"+eiWd>@jCXga/Ph*Ng57Tt(GX6(9_ks>VBS:f<[@fEPd]UcpWrgmfe2dnNj_hO;S&_2u5H9&[
%:e+b#45nIOI^EDlmuI&`_d%K>32uK&+t5?qf*H*m6HWIu6O&p$e1Fn/(F<pQI8OeZqLaD)&Q`gA$`a9D`?_0pCmo0o@N]c'7sL[/
%Sf$16Kq:ikMn)?k<3Z<_K33/6]U8jCIG%b6#%k3;P\:1`JgTIK\W>Ubi%K!pc%`gO"BI/=N4oE74/f/K8=C4$.WPZE;1WUGT9aS_
%]+6Y^?4/V,F@sdrD<Z7E^u3I7N!a6?0E3'E:"/33j#g?/nuhHhdUp:rN2qm`L2!eKkS132bRqug^#=F(V]F>rO,E2q,]biA@)b$f
%C?4%*SBBQ(?'XEV,eJ`"WX``_7ZRaDZ(mIpgOs/shC#PE2'UL/H&rD5WirV/fODlE`>)6-r3R?9-CX0[6J,r78S]TYA2S`HM%VY)
%>IQ#!jT1EV<K<S::H$n^"5VQ:7n>R8kr\+V(Wt")F0Xn5Tg$de$_Hu*f%,NmIb_7/$MY0k]6a4^]pa7k*L>"AT!f_'hGM^8PWSLN
%fpjr>.&'[Tr0fAPeX(HLfhRilZ!.3!K?>e6=%T;G/>&4A)"LTGqfOj=:n79\'1I^\MRu;N4Y7`k4.7aWK55<1jqQm"gcB\Hh"lJX
%_8]H;rS!'Xg2q@>gT\a1(sX2<IGNQV[-W#:Xd&T7fo8lXmMI4tD76h4%sDkKinVC6M'T`IAbpION^bMGj@/f"0kA]^6^UQ67J]PH
%c'%NVU(st,Ra"E;\b_?[S3Ju)O[F`:;dYd/8fl)]95m9^67PWSc(K-iasL%'p1iKn*@FPcb\5#`>J+tr3Ub*:`ZU3kj('+FH@Xqu
%3o:9G;PYR@^HjK#O[o;<@"4"*HM>E"U$W`lT8"B8]eP'B!#>/%4A\R:&a@FV;3VSm$!\Qr/1ilLpCi5IOJJ$69PtYQM8:-a!8T;O
%!o(;jYK[ER;E9Ve?DJL0RV:!@3BO@BV]-)9h.Tg6$k6sMTtC5Rfae!JS!2p%`O%98a_9n4SH\*T[JX*aF1iL%#s--1]]LYA8S?qI
%?qO"6WWY;J,p=b%fd^S0Um7J'f=,PO9p+Cer3_o@9?u%!r@C!-Ogsgi/$WRjmIc3K")b'2e02.$U-,P+p1Y[k@t`Qqfm9A0M`S%4
%S=o5/;1-&9-.5hpgn6tqV.t2oq:^.')I#GLHQKT,ZYCdopq%oYWA5KS$Bbn7'Tg5@6:SPD'\,$kP,L:<@C:<KT/(ZThUeo<$&mjW
%aU=4fjbbpZr?.ir]<A$dZ!.gR)2:VF=9>MA=$c%K;R3Z?=-9N+'>KKuAc!'7/i[7j.LWR5)=4^M/\MoCL8j8>RX3)rc9)<#c2_u#
%CM3oLkmpd#E4<2^4T.(:^C_b]G;B,S;Zj)+S(.[d;^>7WUX9TegE)Oqm(-$[3/YOjc!5^r`YY\%23n8)U7)o@nJs<p3[:iJ@GZ%P
%q5doA1sP/r9A25)kFt]rPW%?7]pbD8A*57me&"OYPYM7[$[j6J7Es=l&kqJ1`9p*#2ObAn&EN8VnHUu]c?]84pi^Ta0WLd^"E`#3
%I\st8T1rGuW6kUpZhLSpL3u(h[o2LNaunn#Zg6u^N,$[*HXOim771@"9jiUP8Ko^-noQ_0L$hDl&gpB-<$sn@aO:X)DEY:i_%RO5
%YJ[5mG5%2U!Sk2WM8+qS1fkbM'@fq`GGloEU2<G\WKRXfo^HNk"'>GI21a(04QYc^_[V\17DVH90Q/&@7A;t9b@&i?;iDEk$Q[oj
%?0k%S7Qn-9je3N+(t4lOQH_kWNB6&U4gd'8IL'd2CU>jo<=FI?L\;"kCBXoA0ltTO1H1uSQp]B[R&&b:d!"DP@4#2mftC+Un^u(,
%YJ\Zj&c#BQJeG%l1r8(<I4^mtFH$V7hr(+oG7E)j6,e@Ak`/T\^\2$aWFA>''5nl7kXtZ1c>W-[@PRn#`W/FRMGZGSblr[Bg$U24
%%!fMLN_*uOU-k\A2UWFY-K[BfY.1d>f82fUNj5mKl\41P?.*BHHVQVG,;d0EApQ,AjiQJO"7lX9$V!b-,Tb\@QjK3c(qfsDf5SC'
%W])(O0C&K#_8`Gj>DnRXB'*S6;D<W+V;(>^IDq293@=4/5:?iW72,i#k3ri+>4"HU;`ceV(bCp#-;?mS&<[3Ag2>C2n@RJ(Y.XWR
%e>[s^+[qEbH9r^\7"ZAi$e[H:ZIt`7WsYb#kGU9pHJkL)E[pj;>-]A-[OQj_7e!0eAGH=s=QM8/@Dts)2/C;jEp85"^.WfHE\a0A
%f]EhBc_[%3cQJ0mG#d)K_QttWJj9-Nb6+h$00=2XnT,]#phj1DDIE0-X*2;.S>;)hF0!-Ph<[\?UJ&W6Ui%GR<:15B\J8QlId`YF
%q&bp.5SaDiNU1VaPB#3DceWruQu_`bG/l&;%uW1,VI=U8'*ZV":"1<l!Hm'dW-V([.U5fBC8Lp*HQ@en*sG0>6:iD4P%+a5JR>3f
%lqu8-+C?c;bBK5*Tkqt[%a^EF#@iYaE$7%]*Eh]B=(qW?=0s-pUMO!7CZO&m!R2aAlR.pP*jWXMLQF:O\=k>nhL(8?GL2PZpl'`@
%?&2s\0^&FT=3,mc8\'q;U/mJW>AM%,XD^=TZtY`O9KNN0:=j>O,W$e>S!?g8iFP[Bn_STfXB9!Y+#0CtrGImffqV+%Z4)15O^;At
%mJb;bVg_rD-`<D3m"]M[q:fZ`2mAbNS+8T>q:@k.+5.4ZYBGY#ro(!A(^j!tpBIa1OqPY>Pg32FW96p>30#=11/3XIb-Tq[$8'4$
%48<q)<!C>iQ3TKR:,aO,mF%pX"MPm0)lgD;?)9=61Q7VLLda=b\ok$^(sleR[?4=aD=S<!Rk"7$nTJ$FJ-rg/39Y%27]=.3ql%1g
%`)b#3h%lE;*GVnKR%TbaE7I?XCIiE]F>'.USXI`90[97SKIA\'F3nMC.=kRB@K:gfhVB.7@0fh"MPmEY[eJ/P+QFE+4`\?$-a]q[
%k;7IF?V#2(I8e;'54)%?`HXgK/$Pa+-uTs+.$i`jeM1i]MV(?b=.<j:@a[Y%c*e"s8jrr;Uo5g>XQc5>d&;C^R_CCH*&9(=h$1#[
%r]6o!V!K%Lem]:[@Js?D'3/'9iZhF),c7hC"p^MN;jA%o8m7%.&jL)CN'ch7ot`&epoL[EC5dshgrrA5k]fhCA;35PN91`W/EaHR
%qDaG;Vq`'-d8Ti*1)R+cdVXOEeIN<u6Ts@,Z_>ZcfVJal:*W;XPOu'6HZ3Opr*l+V<:OKf8M#e<GH`RsZVXQ&BK:/bAsf<qA-RtB
%0?I\An^5B,kn4F25^:=6HZ90O-g\4#,]?Z9WQ#ABbotb3U039O:!K7Xf[[,XYfs*A-O1s*,:<[r*2SJN+kT\?_4*0,qU-@79_GH5
%(?-]7juJGX'cAFGL<<B:KV3'uS4,obf:+=-UH$F$NS:d/W_0to[D@1!7(>*3#,"?-2XSS+RPnKGZ<7KCE&:a[<mNo6#F)Y!XO=U"
%3)g(f'Z0mVrJW_4^iZ$D%1R7L%(97`kX#I:=VD%<SuX^/Q*K]V;oQI2%7_'jCfYA/hq(_sIqK>-1eW+XHR$53-fC%]OMYuZ6q8#u
%@K]0@OO]Qr#=Y&]>c*./G<:ltd:u<_O?nn:W^a$J@fN_HF`!W$"<tHgj$HfBJ!0$][FeVaP8-kn&Kd^b3Hs!T=b"'!52'&'#+'FO
%5n%*++/_j@aOima,o9mn'c)Z:+)8!-$+W>b$SFuM<.Re,.oeo&DRO+\".:TW67:NJUkHB:N3AjmnAt>u"aEt:g=L+5kW:Sr3Xc>5
%kCmM8A(%O66aJb:$qe60JbH*X$E.Fr:.*m!jqGHb5aa(VK_fMf=Z:McP&A25"T-(j-mOd$Ok[A!j-]LWl:rP.Tmd+RYUBsEBe`:-
%J^mW9;9eb`+uQ(Bmuf(!"NBFub_">OSWN^&@L'84QQC7dTq[+V'r6$VhdhOYXi!fV&K<-aZ3&=A27+c!$\NBCfF*ctBo7EBX\XR=
%WdZW1jpVi=<HX_+BU>EHA^2d-6Z&oRTT84L(%!A@k;5p3(86RQQ93:M96096X7_jo\ZIN03['a/>f<4735e&ahJp+22R7+Nm_V\@
%`W8XI+:Fhi[GiB;/+\FVVV1eA;1.qS_KjCeUcHA8fZfLd2Hg1(:<^_VJCRk[2QZ,Y$Nl7*!0Ko4Z@X(:7=ml:gZlndM;`;I0^4r^
%MoZ.O<tbY!@'F,8Sc-3"@od/`Dd=]8&tXli"bcm[)s;'!NOl)D)hk]+M1$^6.:JT25G:O_6!>P4;!J)'aGj/N8fNB9/;p_Vg7#9g
%0L;fZKQo)B3pg7:IFu4^BlQQjmtAbh#Ufk7'BUdD^qD(%rI?!!'[9gW^R[e7Z?X.be!N$6_6kX0-tr8Tm7MF*bR?a'1eK]]D>+Z7
%Z2o*IRaDb&ASe.:2C)KW6Y((>6!YQ@'TE5t6=1]6Vqmndp3:Pns*.Eq*i7l8KA)O#eR]q[T\81=;2#\u,YSX,<h6e($;>"[5q&E^
%olBf;?`M;N#VLP5QG,CSroi1]Wlnft#W6oYj0U^t5]QJt8o"5o.&dt\=XUl4HlgWeUSDYDMLBC`MdQr915fG\JhUC^D'e)#X?f8A
%4;c<I@^FOJS:Gu+5U-E<Y\(A[mDp?lK\_@):I*Yh@a5*e&n0m^+Pec0hY^4goY"sI_<A3$3L&X3%q5Uf^pKOi(0B*:FC<5^MlBih
%5t#Nj<ff*(N`&+(<Se^B2jJ)8[O1>^-)^,;`Th&%?<:$liOG:PD_o<"(%e4Q:Ho8=&=Y2<S'>/jQ9rh'e5;YIBNANrTP7@7.UCM[
%JJkK8L.)4L4VfoaDF.dW/n-?^4N_:kEqOcl>ZrAH2#*3/KHi#mG0>QI2jTSuNRe4#4M.9jP]td&Zr!Rp`NI7P^A%<lorS=en4OqX
%gs0Y&')9O#%p+>9J?QbW.eY3CqAieu"MY9H`)!DSYo\:/gQG[.;8ns,mtudeP"01uB>:cOKqns1(!S/b.P@;KCTC;=1u->T'bCT'
%79>OY+%\+JPIgk("WniSI-en6k(d"'V-UdVXV?,2LD5)7*RKVYNmX5ro_46;[s\dAJlcWSk02o_bIq!R;E=Cha7:6@jf)>eAUobX
%aN0g!Q'-`c6G=1)f=,dqDd)m3%2R&DW,b0FDmt,"X=JH&K#T_2[@WgY#RP3^/Zl$BUN70n8p\#=9&Ek<mX(tRTiKN=7fG0k#bDd2
%AdVa/_HsC'7>li:!#q)COH_Wde4Z'+"K"XHILQt;de(2UPi0ARm(^h6<Z:N%fb)HUhs8-F2O_QB9>+QL!u9+A%Z]K,]7"Bh@Xa*@
%Ile1\T,Qt_KA,-U.Df&#&"nYPSgqu[P>sE?Q`eC1BdqtNLG,*11J+B/Ana^LM&&*iY*0mRFXcc+gG0=/\[#RkaD]7>@V,&#0[kZE
%o8+\V<C&NRO>KUSIsbu#rC4C[K(XdT6g7WD4il/eBUIB'k'"":/:X8!:-_H4J`dL7Q.r=UgKQQ')4a4a]]_Y,`fcsq6,4OLe$!'B
%b&fY4,tAIIQ"^PeW]K\d;'Yh:9tVoh7;-Ac/dQ6VQ*k>\-PJu:7@%"d7i\TO7cs?iCs]'U.trPe<J8G@qfqke^Eb?t*\i,OPP$/`
%HXL!>rgIa8GPAF%EFV`fAuQVSRr#['2,R:pT>=dZ8OH;rAA*\77]eC'WG$o4f^<B,cAl?4?nQ.=+(?-$rNqE,+[oN^Vg&'%hYFU"
%Hta-'e-kGN6BXo#!8rT$/h3%N,Q0Ql*<0'C-QAPed^JFQ\eb.:[XX"q%tm7'UFp+bCo/Yf/MgHFRSj"5a5Hn&2/h5c*V.'AU*c@o
%8^d1k2g+_s;bMHf;glmC3FMj/HOC8_)OVTXl,4plkWOQ<fG#q@3!2r*b<4O$,t-Zl+WnDB8Nh!\'4/\m>TucrK=dkIl_oCjl'(3J
%1AHEKf#aN>fJ1Jf5QtK`n!+G%R9'X#Ts"59FP'W`8:U$@bd)VJk[i/=Za0d=b+f4':cBhOK5*Z#\FVGH%DRo.\EM1$LE.>d[fYuj
%!@KVFfidT3#MJ/s6ITK%*+"&tVIgs_6W:RE%ERbIQgm0T-io41Z8-`;H9fJL5FLqt(fWn"dssW6jqk+Q+XKYtejnrL\%"WmiEACN
%@YakO:bQGQb]"l8@s-9Bo$RqmFXsa7V\.Q@U;spfgs'";#)gUW!2A*Bq?M,/aDhG4_!KmL(eKLG7bLA1Rhn47B`<6VmB!=?R<dNE
%UG\@fSL$#qj..OO/`O[9Y-HZ+-sKK'Ycu?:fs;!kfR'n:(@<U`CVX:ZaoC,'fNG%\M:^D(k*(L`,E2r/]l3t2aY[mWLC&78qfjdk
%IM=rMP=?D>c"sVG=>PY9CbWH,CFe8Eq7UGZ26$1t3$,WYk]]H.5^7S^g\V`V0Lg+;[;Odr*0"C#86.pII`[37'=epA:fWK3&osMF
%*,4p)oYV0EF.LGCh41@Blb&XJ:V-bRq!P@0laCI5EO@#IhbIG,>RNtd6au+[K7ZJ4h"Rn/H.'AM$3V8o&:Ml@\ej=He/G!F!Dh)t
%[C/4G<A>]-gS3f9W[Je?Ur^jk*r]RhpGf99SSVO&?k6c4-"@Zg@^o#4bA\AG\.:k_`8kIW.Je`5)'RFW6?T4qKDN0'/0aAAVJV%4
%)L)tKe7?Qk-=%.Oh_H\fcH6a*h](ccio21k2,&pm,SA;MO2RW!EtP-He9A@SCI7E0i=?sk_]P:-gs,3"WiR>FVJJcX>8WO[SK3`3
%MT'A`q3r.0jq2A=M]Gfr>u7^,NZfm<Vq"j<qJ)uN_Z9=;/]!*8``cp;<fN7R/QEO,<OlujE/\QO-oF4l>)Z!pEqDkmiY-$<e<YkO
%+"Zf@)E8+/!QGCn)5.X@;46TG*q"FCQ[E0A_\q@s"&"_9&;%S"BhFp@^F^?8!M`pt6Y4a65;XfT?(Nm+eJ.NcA5Z?ZP+Kd3ejPAs
%R-U`1V$,"&/;h@)Cf;lX;95eOLE"t#>oc]HZ.F],C6nTr^68mYDN^R(1,!k/pPW5=RtfH>mJC$&BpE6K6C]jXqP]Nfag/YtP@l;Y
%P(jqJpuT=!rs]R29kR+k#7HRg%RBifn"/=p)Pg\kKhP^RC\gFqc=_;HZDe\URT_o[M2K/''Q(aWP<.de><[9`J&!Q%$;EkaLr79E
%TX]QJ0[!Q\FHMdpe018\d3..7C)9L951\@++8`<YmA%gADKkF<bIdEV47KBepqZ@56`^*]U_u$=T\'Figb`b/QKhEK6bD.kh58FC
%R3",]H&Np;8L+KheVneLc=:5[m^F77mo/91mHXP.C_7#K9f<2<^F;aUTGE`k_a$hGn\oWkirW\Y%]b?*lNgd41I)a2L,q(WgIWN]
%YRM1T6R%Woe&4CI)8sQe:AkL-U0Pr>a3$qJn.EbZ6F80Z'55Y41pXq3KgE$A,Sd>0Z%_6]9\H4C\B^oWekT.qFP'_l"Rgm*>+gIT
%H$M:d'g`gpRrNgUUqLo2Z*H:@@db),[G1dT*^ZSERJ:\E9'<!L=DWqBA:6iN#@'$MQXEW!<l`p.lnl'%@UJ_kfSg_^busWpBV,=A
%F"$XIV?-f\e>:eKV65$AE8[g#;Ap6ko>)CWpA^`4BHoRIEItUPRL8sE)((AQ6Q_G#q>"Ym0:H_L/!W:$"V`9'A>4&Cc5;$"*2.'I
%&&]pKRo>s1R2go<BQ'EX0XPFAQ8!DpH?,^A%fd$$^%dJD/%[.RAikrW%K,//_o@UN(Dst.ge=)G?,\d!AK??Ja"!/UW;<!Y#ZlL6
%"^@i](/;9.*T&jCW=s.2I'l91[:L%>FP?o_gh1\#f4epghE,c_2[,>lF(Z=SGa]b.V+RIJ?CU@:f*283X=\eXTG1F[_F<?;P*r6^
%231`$HSqF'gBP]rW6#>N#@<t8l@Ui?+X;@mL7][#2lZd"AV5;ufs@EkdR4dP#rY)^M'GFr!^^$Z+&n]%I5I:u*M\nP9CsR%C)$B6
%9h_mu1sclVF2Tug#3@s)%&X^8cl%/qWJtEj`SNkNkC/643g[df&_X$;W/='n2rttFh,E3qis+c[g44h2:s"cQYVo$E(1=nSqFt!2
%\7<0Db<bHW5*nemoP@:,ILKAFM7l"gamX\#m_@h88!P(WfU9G*4*MZmVVJF&VH/#UCA;j"9,%f5W-ROI)/Zoc`K,<Nk2(['mBf7j
%]"e&]EkElP^0WnCAT6L*F7AhGELE-D7aYWbh7557:DA/_fE4L!p:u9K#ms1G]:foJQ5eLK=it#NS_eKV/SAP@V.;BN8T$t*p)o4B
%I5S7$,(o%5nEBM0]*H@`CKGbfUqTOU0e)2BVPZkfZR!@L<G^e#W4$A97=PJf@P-E`=GK+<Xeui%-CN>]9I5ZBZ_Q4,=-LgPVdR&^
%?'S`MhNtpC#HHNu4l_RtKcreDR7sM^#EA/Y1V?U;C1-/q@m*^A69T]TW)%2&MD2bLVas\1F1M+-$hH`njP(lspSW2_);/*U6F?)i
%">=dRdH\@OSSSY)G7,`01R%qI.@K%Jk$47bO+#h\K's5!V&qK/pBih'OCXL9HdXpqB;'V^Gb],#DB7JR@8g8`rr<?@`DTCZ5TRCc
%CmbT@Hk%YV!G*dVZF!KQV:hVhQU!:S\p97]dZ&g/S>/[7!cjAaYP>,m'>oArRI<k+j=q>H6X'4\CGHN77d?i_VTgm0THXoE9H."[
%;4Q[B;q\K76W,L^c]_F*(r=Ws-941CV)Z4f=6Koa8t]jUAZK#,J92KaV-DgO5c3E-+0?g3"<+la]$6W/)fgp1XuLjrX!_*O6iH@Y
%mpcHb<#\kg7#($jT32R]>L@>G.3$+QZm==.NQbu+@950CrM1`>[IW7])7hG'dN6&HA3ts4CF-cqRt60ACku,u4%4/1;DO^[Zk=W`
%B!\OQ8;f-UBpP2A18s/kf,W@Z4Uk.nqk9d1mYC`c*@Wkn/hQ!NY=gK[P"BL'%k2@)XNGQ*'pu;nN02(:nm)=YDf?n.,_"2(!E5OE
%d(gX#A2m,6C6ZYI78AdB[c'W=5t`#2W6l`F6ps(f^s.P]=4FXb@i/+Fdi"'5Xd2U],+-ARp<jL/MQ]I^>;i`B"JoOt%GDH_m"90A
%?A[J*]Jk$\#%Z;r&W1Wh&Ri0@'9F#C&J7bN/#8JrN^pZMecR:?Na%8>N3bDgkmY,ZTPRHK0f<AREotlI=(qs3YN=N:10b#U4<u^b
%6^;o:bc[je6)DU:=c0&QKat_6ecf3?%N;lEW[e47h#.VG)i:GX+T#;Qe-Sb8Z7[DO,9!o$*E>-LqqQj6QF)5u(c**[l>lN21-NPA
%3M+NL(l%KQUR`=tks8R;Dbua/H%CU+?BW1EN%h_%(5!TWog*9@:m@4f+$%YkT[eGN@q8dIO]7`*eXPAVMDkTebsu\5\A,hpaSl:c
%[`6I\M>&3PR"o$[;t'!_$ru2>m?(OBPB9oG?OaDE?oa`oU<Q;3g&W40`@gMZ\Bfo\.l([-g'EM9];]+`;F^EAEL3S:gk;5XK-;C+
%icH\-^2Od]#&:do..@7Z<".)i03Hc&iq[4V>YTR<FEQAlctMc3Z;%XP/!2hu;dOo]C'Jb',fubYeEZsC<1#1OLa=jOP$KPAkq/c1
%g.TTc:#,pTfs(j?cEjKZe\kNb9-BD?)'<=hlJ6,#!JqL4Co9um6tNF`$<\*Y87EuE;>%bK,Ci7Dde]l3>D47T\cF"GU7g(h>gBDN
%Zg70=*pBE`+**]8>`?lO#%->O%?r;gLS-qJ<GX/u]d2`-']3]$dpUu91c*[:5"VVk@4k[+6atY='1,?QV._+i`AEl0lZ\F-"*5J]
%(*@ZA75[9DQ-fG5CS@+G8CK!HXfmF/TWjPtICQVV^2T7MD8k!#;N2Q;'G<XTBq1E?;j\nI#,A1'$b]nMAn=\[=I8Bc,-q3"c$p:=
%B,?[c^EI4FR^u:E^QK%1!2,tcT-Yn=UiRF7SPqXsWChWDBhrjT^XZb+S3a`'/mNNQ-W&o!_H<CUfQ>4jG]>&e*dhFK/_h!o;,b3W
%cQ]/;0oZCnBdIBC-KSco&R>hK["uP]R</YB6n^!4N[rY^ZWXX>9$7_%`d/hfBPYl<<d#MhP`s-2:r]H-9##>>it-uAUcOatbjC1g
%SWenTk3mSNdB'o.WiqMSaq.r(pSq5]31jXO"f(m\lC-"&"%afcP7"9nO7p@>MI>b:TkRN`W3Vel&9mbeKAuS<KV/8#/eiG@AB__O
%*2-OUl=<^\@pUQh:V+#ncN5u^.";@FpFDC,bCW9$Jo4F_@[OXE@/M4mUZ??XDC(MNFs8%iI$f(=N@Y8P;=t"hKMWPE5GEPpE7-!p
%bhVqa\TEU6:#<u.OP8(.c\L9n5UAhie85GnMUJb&KX1OhC=#7q4//Q?76&8ZEf%@H8M25Z%MP,`i$b;a)>otMg'(W=MF"lk4YO,&
%j\-pA+AQ8Y%tk[Pi&#M!AR.Q-$mV*HDED\g)Ln]X6n.\s<npuBmLI9<@r3WXFlhR+=Jbj%]L>$KZ;&Xo#(hJXXuI<nj:hc/!Cj0d
%0@VOn;8p;)'pGl_KH$ooHX&rR)7*n3lgsGc0[F`'!\@KFQ>f7+.V<YC\\4I?/?U,oh'W[/Zq1;hWF`c9T\ULdWphL<a$HQ?,/TX_
%SWWs9<]W?k:al\PQ!&DI;iIHlTb%lTSuE`1SuXm=L,P.&&Oij?YNK]U0.`7=SpIsE>@1!FG[&YF%q*_2@5nghT?`6nPpLPn&(QqW
%nQWfZ?!99rqicuZqoeUT/S@^<EJa4Y_ForPMuCg.lDFi"s)T*^UAb;b]3cFnMR@he8XG^!R1uYom(f=5$1b:U84cok/gZSLO)Kn(
%^8Gilb\XI)e)Eq)e^(nWpKOfqqfCAl&o<QDo?/ABeNo?Nn^=LI21&+UMq/T@?l23T,@^1Imr'/5O$4HNM8R2U'E4\$&fFOUC][kR
%n_qbi-o'KI*nkUm:j+dc6ba_<bpGk=EZA-kY3j4qA#kC<jHHI$Y9(i/X4t.E&^f%tEK#,lYij#KN+Ne8l#)I43kaV'(eljR)W`YB
%<>!d1(kJQ``T%f+L12I4s##\@Oh)ef#OYf=4HmY6G+^@?;'j&_J#=!f,//34IKTriH2^5<J@@=\;.stcPD0eQZ:Qs9=i.HUBNBIQ
%i)(CsDiC.-_!SdN'K^usXEr;oasZbuRh=RE%4KA&k@WCj%?uQ,X<aTMqdFA@*Tl`"Y+EM<5HA@t%FhGPS0Bq@(W44nn8$:Y.'jN3
%G*4jF)':nB1\"Ymq>kYqDeK'8Q&9^K/F_5.8b$?LRf!JTG==#a-hSKd3)!iCb$?#ZR%\@*>VOd7NhAe(XDZcH*RaE%>g(5W/V\+U
%[H:HY`DEB,CcI;P5c,l,g^>T,l)u2Fp`q*.9SNjeH*X4f9D1q=.cb"8U3%%,+1YtkkKFC!2C8S:_%mbGO9T*'90NZThW&apM?=KS
%N;,(?MT@[nVR7T'7aa*/d3@,!X\-,\8gMck?RL/7aH!)DGNHHRCQd!s-i<h%%#6ospNY/8j$,6YqT]T:a0HrNOVT^B^^45GlG\U;
%nY[OGgs.i)CCERm@X,HqcmN+$fr:,2\1'5lKNc`kW'%V(Fjj!'[$>;>Drc&NR&8Q;X,fu_I[#:m.@$m/Ki[_9*RUJ<;H?M+(uPpn
%<f#A==SS;UdDDp&1M)6A@Z,N^F#26TTN*-@fQ1Jp,P(1d;kU!Im0To^H>O&P%A1XtFuqdP`>SRin%&Fp^ljZb>pF"aANV`lCSDI]
%.&[Rt@]N$'iM[rc%ao?Sqfn8YE)&CgKglX(2dR;bMTA]-XqP^:B+^=G<<?g-(:"hs+cmS\B<P430dZ=%gFpcX?fD$IS4!3Wl"99B
%6K=%3''A?$aEum830-EWb+p>YQ:T*DM?*qaUm0TLbKDtY$BF7th]N73k&b`c2S_fI\h:=m0GR=Sbt793XS<S/`(#;?NL!V=-KLrK
%N+:Vt6q8TfHR<M0\tErBhLiIh;p1*=/]Fsb#TEjHRE@g^j[[?^2(KIkh7&CWb,sMcg_^MaqKD,T-eaW;eEd0(l8XB;qE^dSN!h%J
%!b(TPS_WJj=p`;7G$%BQB#dE\e_iCl:FWmW8r3]0:<&][6f%J@3B`t0<sBu$TJ.2d8j!]naO%:)NCm<Y`)I%:D@M'm5nC536(,YP
%Q_k>1`,jsk..9,[Q!/kgL^b\_hi$hMeb%9INC#sB](7%^d@q@%Q/[RI'TF+7ZcHKb=hVs<feeGP!tsY+Kl<BXbZA[A!Ghi]Pq'$j
%V4NF:%J'[X4gD50[l90Cb)E-;In0J(1]mq[JFdh,/7&c6I7HWsr:Lc7muAeND6QTNU!PKOWu[?GaL-q>&6(Js%I.^j4=8Lo.m&_u
%ll,/i+!hnQd"imA$6&bD6kZZ<h2o"*UE$t1P,JF2#imC#D^5l[0ep$c&;Ua2mVg&-f!9i+bM5Zm.u<L9ZGE@!WQud;(;3`1l%XF[
%Z@m8VU3X<XEcbEPfqq-`p(0Adc4=eu67%HX;SRbq/sZ[I'f4\kOWbCm9Gresl.e&cblY;7^6q&o%YY&4)*Md,jIU1Pb,0R^-4A<O
%Br6JkO;=QGgsIYW\$-Jn%6lJ>RA&tJ3%]ACY"E#fLW'`]qc9n0O7OO"YDj1D)>.5/>#IcZW6+7-:im2;QIDlhJN#6,H&&,4Z"Q<6
%L5)a[oRS6,<2K)<M4ftB;_Jt"$V:ADW<cX7RJ-S1%oGFu.tNu<Wolj)7EH:/WCgJJm'F[uSs4n*-IUnoK/,N6ns$,.?]VMe`81t\
%N$PaF12dP@Rs@CV1Ynt0)P')+XVH[1nAc?9Qa>D89JT7>Kc'eKj6`HI/Ntk1Pf`DYfh46g>8-quoW7dpqda6&jY:>ni]ej8"fX#B
%D^%WeGR"#$OnUR]_UrJBIY,"j>WE]bnrQP_eO760<I?m7+1lX_e7QCdqhC!:eT=.&.C.`CC^)E3b@Crmq6g]K`14G7WMrVG=JMb$
%d8scmZ=9K->\s:;p\2m6V%'@0(eFqCBbEM20f!\hn%Rh_Y"s4mcfqKO3E^NulDXXu^i5ho5kHe(WiImg++m^]Ui@@VQil]=E>X=B
%pA/Y45e<QMQ\XMm'gHdG5,dmh(MBFg9&86QP/1LK0dn:J'fiq"a29Y6PbpgIG`7@d(X:nRr5+QO$T'P+Ef90g`FVa&2aq7RBnM]r
%/2n*Z6c"_V:U\oV(St`DQ<i"$Wn)laMb#.lW**\M?hPuedqJ'Op=u1?9U;,?-'$G5_5a-Q0`3%`C@l?4.`EIc`F2oYeK]hd*@49N
%j.6p(6!A(B"r4bZWb&$_>@g_.aDsna10-]PA'erXV!HEF;=r[&C1]1Id4l0A]L'4(leh$[9CcEp-\QO%rPp.1VKXBen]+G>=Y:I+
%S5i9mH)nLBk5t(11cSk()C4'kFKq]X*DB_&@TR4"cgRVuWeHj9CLP(K)>\('9_?SdF19.A-?Ne8Xi5NHr1A0&4Sm*&1cc;5F$(OA
%1fK8q^X9]qc()_ONHRbG>jSld08#&,h6ZgV.qCkZ[pIJ#D16n8:lE?lNuIZOJg:!,L&2D0dr%ABaW1?H&(.o>NaiWqppYE2,KBSt
%q`&[;L$OHYl`Q;\6MA%3@6fGo+"n^k.Ji<-3#H`ULNVSTj6UbEhtpq:=RZ%/%0HjGSRb;<`f=Ac..*M*GfB=^pX/:?IWM"CbZZ3F
%[5KU`0QL@DePce]H\O6>XS>g<n5/).5uqm4+Cao3c!d`u(eOdt9/I0.?q(EFMDH;bke$JL[H_i@UKc"Id,MtQS,L.Z,NtOB,'G]q
%8)Bi&9?%TIHX^C_H289"URTnTFW(S&$k+2=k][AC%sC4;-PIE)(i_<8mYW<112Qqm?uA#W:ui(LXcf*pph1=7&mQ.jD]RDlgE%2Y
%Z3r$H+o]EuRKo2qFG&M<(Gq4SO!MJTj?(SMmJ_C/)>O-0,0O`oc&dAfF\O:FS3j/;2QF!N4b5.DL7&u00Q6t7Pni/)EaD7W>%*+!
%ONPcfGhIY)c+'\IQMpg[kl(Ut3@405`\EGIJ6"ZBkn3QoDIs,WV$4P=70qD(,8MLX;MuMQ-R"8AM%7'?>=1bX*,UtTH=K4"hY<kI
%Ad_G,kfSE5Q&:@5E1d3:!%g<t<Qu;H@E0_9e/sfUaU>#589Y48Qq^\XOV0A#B>6O0S/_u"^s\3k^nTD87_rt,+G]Vn]O2*[rS4/L
%6=Wm?rf>IJjsIMtSI$(S_Z3kQYAHR;<=lB>Gj7=M<@1VC[h$),^on\\$+a0-jbrHrn'CaJLVNlHIeW#\TE"`%s5=3pk3(gVhK8W7
%&@e]LT4%2ihu2H)rPIr-rqJ!jcMl_[iU?fqmsk@?(WH?&"T@'A+-:enr870+Dse#e4nAN+h-5ET(r#XWs2Q41A_;3C9aj@t*I,*[
%5MgkP?fTo#9:t_5+-'E&HD0p"gVBipAc!kS[e.uq]_I92[iqKM*T>%a6WEcWrj)IM#JBhee!D6Q&s",8^p%,(:]5"hV([)`&#[[,
%b*MGQ5COOQ@7TgbppU%I-bT50e$j0T#&#rU$PLM"G3"&0g]$6Nc_(43GP@r[c[YPA5D2g^G?8&>Du]`Z?iIp7s69,nT76QBIeRWm
%G5VbghOs%KB@6_L5CNOKVtEB"'`@)H^O,PKm7$"_#bPo_6U'<)_rj73rG2A\T7?OS5OVneq<^.S3rH'6eGThP5Q'rq5Q('#H4=D9
%bmEC#m>)6\o\5<(q.mb@L[-lXqrC!?p=DP,l0f*TlfV'Ys5WQspu?k[SVnN)c/'f^s1Tp5qksGeGMC*Or9a*$0L,"2PA(PM45"sN
%hLF9Ei:h`soDSco%]<Y#++NtLhu73]em*)Ws3imKs+"a1jV7^Y3eb;1If>ZurU=1opm3'45Hq9GmsfTYoC)_S:JZK<mJljs0E9/`
%J,Z)4oDco3pWbV2s&lPqT7=<(!nWG&XK@'5#/i/cB?S"iW/2e5$D<6/J9<2F&&K\c?,d8.K?P2J6(==c11"q?U(c9BF8V\VnrkI+
%r[rG)OXS*Taim(@=H\?,<54<2],=aCd"NVI,ARPs>=FaKmm$kGSTMuuX0?tlBb1pjb(5V,W[QrIdhRocRV3&>,h#a5g"iSCi,>s/
%*A"S-P`>/d:>5te%sNbtGQ3M@r'03@Seo1lqCdUMn86&A[85HTqVT$3f\b>?rKhR:iuc"h8j?q(Kno]@rTjL:YlF/8L55g-iW&[;
%_o&[-[f,_<Fm5%Cj$!@rrp=q8Wf]iiAB0D&%TN-HS<t`"6:sjjFrZ[H_F\(Mj#pr4#Lmm&mLIG%Rn`q-VZ18WgUqs@l+bpDs))]M
%9g8Ugh=Z9f/QP#\d_*]%-dP=P\%gMRM".7BHB^eH9iPt5jO[N,#mPg\3PB1X(KGV]:^qWE*.OnehiPc@2@XF#8?72$lppH>p$i\t
%op`Pic)UdoR2khUQ-&Q7^oIG/2.?M#XSQ"2XIr'#a1NTT/Ma+DU1UJcn=8-Vp95#5QsmLo#7PQ5QXFmj*MU`D7es25raELFhJ/Xs
%]<M<BPECk`(F$%NDZ#TY*_/+:9SY+`*PaQGXk3G/9Dbb(jDU@X2bX%;V>\ZeraomEHonLg&O1cWV2\BC9h3j;gfW!:B`8_tmEq#e
%s)jWN9X/CH@D$>h=4DAQO?6Pk_<1U1QM,K`Qa!$j5M"6eJL'OQ^001I/FC2X_sNqirAQWCIg_QcB7J=-iqpe)4*o?gK%teD,O*&+
%r4eJur*Glc4VmXgMW;SmDPE<0Wt63'8;ga8MJdSdGXZ#+@Q&:S&bPrRGG"`3"j9[#Rjn>kY4k.E]YCQR&H`Fq"fTE((#49W$Lu.E
%R,<;%pV[UAfQTDM^e;98.t`4?hn7>7#B!bg=qKKlrVk!rVgduVIq:>>R)<[DmQ5EE/E[B.56LI7^'NH[Q[@'VcnF-lAhWJPH'<"f
%M9;%J)#SlG1HJB(7/A<njT]mi@pQ;:6c/mn(3+57ZisB6)$hdFQnAi]#d(2C?RY5)80\27J]?mZePK=%dhU-8WrV5W3$ahS*.O=%
%j7s^PRKsMKp%A%@`GF-J3C)nI%]E_2n2PjOmFYOs/D<iE]fA-BjEr"*6Vi>Hk^G)0#'`55N_n%_g5]hmUW2_Akjs>ST&&iRoQYaR
%6SCbr4^8A.G&f@A+#uUPD%<LNHhTN"\D+:!%b_J(pkY[7Ga9/QGb&$G#-pj%au`Fkd9no.OiA!Ti:Ah(l4o:l=abNsa<7>3s!ElK
%oBQuG_&]VfVr-=OA@VYn4gNpT&+YDbO4%+c%Z-/[</t(N]WR7C:^K4DPd()dJFIg-',3cLkE/(MQW!N%"`f)h(0l@;ON6D))0un+
%rH"#$+p#LI-[*l)>n3f>HM9DrZC<T=Z%BmLS$KJK?<.7O#Ksp]+FoERSWGbMc*B[l+b[c4@0LuQiAZTUT&,Lc7Gq!BkdhYF)oO)7
%Ic1:/=#lq$jhoR>>rQ9QH]XJO<aM<%%G"O03-l9DNpbt*$s_V8#mGcIJ&a]5OrY6<0t@1W4<3H/TuY&$3dMB!8ne+Vg%?c6rJqqk
%oeon$htm2VokCl[F$!pe7W//e@KK=--?)1URq)Nn`t:oe[*sQ!!kmaeE#ekF97AkG';<J<S.[spfXcJi%fR[XBYDXkeSFUpBA[kg
%/s"#.*7-dK;sd8HbV`47,<O*S4;LX]$<tkqC-FVpEQgc2[LaJYF7:[n(que[UM+eK$94_A>g!0sIY2;l,7W2)UII?+!plA6Jpa+,
%YgaJ`Bb;*!qJ&t6Al`PDp(k>,,=q@k0GpW'Vg!u7NV%DN)0`o?5cuKqUm;)de.BTKXf3!P>k't&gb,G]R`DckYYs)[ZbP%,.bN#(
%>d!G.+(3ZN_*6Q47odH/N3]qp(OA*7?s4T9I*)@3\[NC&#_o[#)Vk>Dm\BbsqF$KJZ$SDI@V:O5D</(Xap%;8<&U?6]5'XgIDY/o
%Hj?l]aQZBE>_Hh9oVor>XVWhphd:,VnFO<uh#>Sls'Er/,@\icbShTa%<S'JUMG)=f56A#'rl7LBa<IUIm6"uS5'&M@ihU0RVl(A
%De;)5i<l!PDg0QdCXI9uVJ_U77f$#A;QM8/JStW+:XeR]r(.k8i,u[l9);0NkR9V:s4p4`V&(E3(QiZb^B8.Rd)c09K'HLWNadE%
%^HF80!ik(u*+1ikhAsI79t<OCO@(GUF^cgkpL&Xb$+'Qr@'g6_7An+ph1h-#ff7\i/.64CeVk/fd9!-F2SPPcW1<diC(q5cndHTO
%W!7*?ehmNo7h3N`=LIijZL`smAfF_+T#@E2,"q9C^.jRp1.KGke9%CGrJ;g0ST?YMXj1`g-YX=%3o23-Z1?\/iWi6lM!*9@"l8L!
%kDCN^-"?r6?/Wi!G'k-=.:@,fc36qi^>GY3s/3C&J<E(gmRfHfWdk%g<*TsE*PQBP]+6[\s!m77*JuHE)kKkf3_'G`V*5-i<i=0q
%ekn7Pg?*6$g.j[>iWme,&ui(^`ru!@!3ISh._'B;2OV-\IA!\d`C4+MaqaV+GS)p8DkrJnaC-+1!!j_+b(;[d-F!#C.;Jp<F39GN
%eCGTj,7GgOQ:NfqNTcJ<]tK?XTG*3.^#9P\I:52g*<f;'8"lmA"1jLm+^$"oH]-fD6hm?RoLcToGI>TYB[<$V394S=SG@#aDl^.p
%*I?D6gk%MO0)I$O8,#gSNB#W.RpHGI5^BBn6ATRad^Yu`oe*(UdiM`+o+/N\5p%3/:Sl5//9E4OR3d`78^k:Q+pNCG=QT4SQPN1[
%-a_",S5JnZ^&A5Xn=au2?Y2TK?mRbZgn>]Xp)6'K%e<H%>-HgC+FKMGh(!N[pZ7A!"4qHrLLIm?JfaB@ioMfhfgsYBH2K1]:9q(L
%rp^&<a^f>J#r!T)Qb.<$[sgScF0SQGWbopFn$PO9faqNU568`qr8RT^2sBb-$g!^mk275-IlhnZXK@oja:>Mbi=d4pbf1.#03l8s
%7c@q^+7B[)AWbYmF"0(,8<n@**5+-,&8.n23hWN(Cdt3loQ]O@gc)&&)Ra&^GeBZ0kVgFgJ]rp<cKOW=BS6dB1MXLo-eo*Ts4Iku
%Js/qM0\>?fOSu?<lY$kZkl,Qa%/]"-%H>(Q(L.b_5@ZkEk'N's%Mh,$n7eMh#M8PZh/"KYZ2tZr,p;mc]=uXDlsiYgo5J+l0)=>`
%Y)rT7n%GGuXloD=""SOYriSO_H=q`DFlE!Lf&LY^pZY6-PnDo^ITu*<ac2j:SEMm)b4uHf47?"b9!k=0i#VsakB>;Bn(j;:=qg7P
%-)j&IB;&kJ"c2;mR6J2s&cc_i#7)?ZPq]F4g#P'eo<)b\Ghi6#;L:@9lh5s<V94+"X=:JM:RSgJjUi4B,%#tSfBm:A-&F>u]H-'#
%]Xu_Vip$4oqMNT#2q^(_?e`pj:VEKM8.H3ONXrds2U7qUW)(M&7r6ao5P]Hq0cSU@A"1NR8,:h+`2:jWX7!_VXVYAH-fDfF-<S6'
%5!poE4'"Y-:Ir]I1W$!8Zk>;SHB9qe>n2>$o#]:0[-HMJ('Kh\hX,PST.NiC-[H@CHFK2&H.,Ks&V_6\l6dF[i@!QslF/Y_`Ns_O
%5c)3Tr/$inV:Z1Xh*6uq$_b!<")=u#ks'].*Rig.I^Bq[5sKFl`+3.b^jrUPWG)5U*d.&0-X1ZF'l#RG#EmWs(j6HQQFmsgAuf4i
%2l2H'C+/"9f7T*UOdd<8WNBZ<45J[k/'rDW3uKWfWX7CtOl'qoa?(fDZ:DWqA?TFp'tn$U+I(lOGTSorR:-cgl-gc3R_Q8M5SdgP
%a%\3$Q)2[L5VHNU:l)Qk7g6"&VqkOIf[K#XU1K6,ANj`ArGKT.BbQF(lbN\mC\iU*0jK<$Id#@OX)T)a1Ze#lH2=0tRT'9aS6Z`d
%a#"Jac,R^q.K>VZ0H)l`XJUW$X#)f"p&<Y_7bp6%Eqe0l[G64_:7<gF#\!eM3?jAbL[>9K18rdg"#@1VbhZY';[gaZ>A7RH"LXeA
%@;2IJ2%>?Jjbp:LhDf2PC4->\$M8/XAq7Pj@_;$;#9CKq08/[F;Lh*!(e2QC,eIQds-@ne$_`_4RjO)W'\tBXC43g_osZ#cq5F:[
%PalgWdstm+,<%ZQDNuEB5@uu_[U1O3FX?tk4?+Zp^./$KrrM-J?Xi5;LIX]BRr%u$F;hV`G?iibRV-d:I\5pH2AM7sI<TVP?AQ/[
%53Yp*@ENUQm8b;)>0bdoj4)^4l/k)KGL"Y]VtZW$*/`UQOjj*I`.diIrHsr.a(\P<i]S<c.a-)pm,D\#hF3XN3cg1>Ri^VqioSKW
%(W0^TJ$k]i"\r_rT`p'`M:#,]ar\)YftA#6GS[R`,TL&EiURiZ]+H'9GXr=3r$H%gMkr:.]!j?]aM>l5^?2Q?d/i]-Y?]S#D8O9F
%FBqeJm;3cqi/Rg9IM.gM_XQ2<8\DiH%n;j;T\'s.Wp7Pq8^__SB69oMIW#cN2`(SH4[<K%g!!7HYq-3hjC\P"SKB.]LUsrUb4@iD
%LP(ENE)[h,fPMh4jmNUhK;fSFHeO:eYSN^gL`RIfk!B#q]K>;b1"i4AR&k5i&,%Prqc0-!#Vp!WAbsU]H?1"91UVD,JCg1OXTDhY
%ap2QOK3m7L4QrYm#?-_Jq@^"AWk+d!H!e^:`;\_UY/s(5:#+.C:qF3VB-#N&l"%-CP1@Y^\(tol--]t])np,\[\\g.:7HqC7X#uK
%Ao!_c8'0$N4oJ#1eBFr$VF3)!>IKC9_M2A>[!$LF^O^.87BiYEo6$>s1l6C6DhaMQ]))iC\\Mbm:an;%&VlBCDU5Hh'm534)O*9J
%E>eUN6<dfq"O7l*H!RI!#^nS907c%5`8FP]NZ,SlKK.Zeq!6K7g5e,EIu]t3[#N;2iuVsl?(f_OkS0i5>jbA2ec#:'H>2*;GXog(
%:$F(kP\Y[gC$@K71T\p_Lj#f'dIVSI=Bq/%_HX+9fgi@Ve$PFpgC?b8&R2]E=q<t^$>j"Q?\h/WR>huqeb"BUO<0CTi!rq"WT>>N
%:m8<X:@L:7+P)4>N4d5u;X/"HV#CGrKA(0bjQ-X%M;Bc9Y%)Z069/6DW,6s*5Jt*>"aW4Z!X0P.UQEm-P=YDuXC7LSC"+E+ck\$@
%O?d=-9f/pR@\*3,iMc0:SCQ@T9qInpTFPnZ'%<(/OJeSm&L-*@nN:)',cX!]D]q'k$+V3Ch#?2:QuA[#(K?_3H"KQ>/j-I;F_@=$
%p_f1@_8Jo?k-Eg/r?fPn%;Ethmnp)u6(?\(.%AY><2Qth%2.giE^Zhe5b<]fm6Z+)OKJfP=;=DEreR^g&Q>%YYt5%5G."H^7`]pe
%TRCCcqE+#SQ#9V6/84jP9g_U-WccjCqnN$!=Wj5*E$PMM3`OIC*J$2MnO^unk%`bjG>Tgl[Z>p>nu0&;&`a$.eUSZSr4-/T[,/-3
%PE$::6O,K%!"P_bdc0e(=#3QeWtCMOW;oT_g"`<)9kps0i%Tho8Boj/BD?ElifXaX*Q:IqVNBKhpG!r=U;G>E)CoAdZal&iXe.![
%XPFj9EKVeokd6:F*Kjr#OdUn;`8(8\q^gU$)LWt^$:;"XZ8jdZH8]"QPX<JE*O:!mT_5BS;KRn_4aNgX+dC@kkf:A;f*=-EDs#5L
%,$5\W'RO(&[P5/Ko627\]<N6;3a3gj4D@HC(jlHoi,_iM&Ve<AF`"O$)\D_^YSF;L.EMHM[?cGc$#jKAF#<QrabGIU43GPPCURZu
%&/kmrqOk?+.Gh;?i5ihja%Ruj/U<Olkd7'jpQiR:bu5*Us1JKiVRu#i<h5Z2I6g/uA9+?)dY,tj`*-*uWcsYqOR9UhFr^pm6/ri<
%*?EBAOtgd;8lY0[n"$K[F#L4<SAXF,Ad&s(WGIP'FS*tT7IU"c@#3K&ICX^&j\70IP^Bc$cijQRO&@rXZ:<">*A(tFVeGJ>-G8cD
%7bCBn1dAF^'!3N)]"@Mld&Tc%T.:UsmEc]MagZ+]fP(UM5E?D8PX9C8=-In5a(K""k3.F]o/]?Fo@Z\tjYn2C8u!iX7_:I_+1lXo
%.fD2L[MEf%eAjE=+1AP:FVHP5SVB]GB==n%3_<gtG0IE4RYupOmJPgas&/i/D3cdgB$g'4AJK%mbTg4Hqs$8_cT^36`@kcm]WIMG
%<W22C:MU6?Qn1>CLHs""g(+4)B:"pkL4EGkh,4&(^oAnB+3":<P1!06++r<lr6R1nTRN@#9[XK-2;>#j21+X)_!@8T45mQR#"u'.
%AJ?uK<MB;$o.t,;asg4HE)TB)Q..e[BdM!kIPcCTcKfH81?)_U@Cma3Es-]_eEt3QA4o(2HCK9`OIpTqe?KYJ2MKngGtYWL9RAlY
%Y&(JtICTkG4>XCtrV2?OflM403il!FZI&\AN?;gK2b7CLBuST_<C?XU3(!s#d;)#9X8dZr?d`[\P%M0VW;dEu>%V16YZ*hj+LiOG
%U^!qhnN'ZbGYp&u<$h2*jl`/[bg!=q6k43@$W1FL]KCJqh8X@Sj=74q7$#:fV6Xb">X^7s+Uc+Lp&rP1IIH%:Y_01#OHsH6V6R#W
%0p6OVmGQI6s2bK%Wn$-)`KZX^0'sJd4^n*@J,?@[D\&;K&Z.5bXQrG]>hFY@jKG^C@Q0fgUub!ZT?uA/C`LlN.4FsjQQ:P(>3.Mc
%kfqQVT&rOq\p8>3RpB2-R99Sp*>.";Tt7B+g.rC"FV7M46_D7%RMdN,e1t::_\\Mqe.coY!SM0YY10?k*n998D$.&Hg7p#fX5!J/
%-SPAn=bGQ9knp9iqr'RnHeiPIn#-!/ja#)@,iTT04j_4aAY3sHqXY/CoR+QRP9_`"BEnW,bX'UkQ'Iut%t,O5Q5P^)&mZs`n:Xc[
%3=%FioV(=p$3qSaIF%MZ*[dBS@,#?sa7-KcaB:Y7.l=QMhrVa8/slO`qq;cB!rcHk,.LCa')/dQEJ]^i$!aZBm61fOD%b2V!\\NY
%5D5K)!%4YmU3l*'S\bqaV'gqc@5KdX^(do)A)r(Q!eapJP>5dXD*B+u'8XVip;9q]i1820piFka476YY`UUWh]s$!,\G:SkP*b&0
%[NGsr!@g`3Vt(fkmABA8;bS;/U9ZYo(lm2$GTZNhK=O::a'A]($/'Y)*r8nOjJ)<Gc;DiM%J>ImOnp4XaA.@SNuh=T-;S;>)AJ-?
%8X[8l#/fYqd*gR@&Cl$5a[0Qc<"fch:q.\n\g[;heKcA3\8549[G(gkFU\a]3*<G`.lJ1V#"M_prRp"A,_3!In0-&hU4\;qWdnrF
%K7*F4ct6#[BTN@C0MdFUJOiTZOHXklBZo)sEJ"3F+g\g^]>X(r]Eu]+9Z?%Oo84J[%^Ooh*tmmZU3M]'2K$HTL"OVN.TnGCr<-1@
%<p\+n.!24BcS5V*NX(>=)OWMnl4kC(:k^D%9ebQ.$H!Bs%*9V"?UE]o-^.beT&_KF3P]85W6%EUW.'('-!Dud%'/ZY*Z5LIXa>i,
%YdWKF3RJ:cbbqp[WF0eNk3D;=cQ51Pf&!S,OC=d%.b??]Oqo<ADYEee9N](#q#*gjO3&pK'##laWsJD2WK-<=@Al19]2Bi^2stiH
%D,8A)K3$i(nVk[X(Or9]+UZSea;2iS]MR6agj9ON]4t:PkX^3q8.%+%eaeNN/L^9a!`H&;K6DqA@PAZP01#*u),9Xe17DUMS92MJ
%/>Y^E'c)?)%t*?G?M=VN2:71>2"LU#@Y\?Y0*=r*:b99H:i#ppEAQsYNndaVXeRL$U(2hbj"&iuVe4>RkS(&:9GYsOAV)Vn^sqsH
%X$n7M6<3!LE2csL.8e&,e$r>sL<!Og>n`_DV<'6%('6S0I('-`E@^Q^f7eD#Jd/cp5_%G^WlTT]al<'VRD5r_lcK)KShS@!=/U(.
%]bF=jhtY6sH6=3#NO!b=!MoGG,DG![SNX'=T_9Ep4r]uk4PmldH+H/;QRGO&6UWJ]*Db>@Q;-qmYb6%H&Tm>4_G&d=He):/UPK2W
%cjrsY#Y.]-lB?B%T*it\%0W%u3H@'aX:)!!AhpPqmc;4-Ccd]sUp2ZY7Z(?U`%d"FBqVnY(uhTlB7QTQ'"f>D-"5WeqK(V3^Qp9H
%0fmCGYL1qoT`%JQ!lZ_5CWGZlnc=BrpgQ1U<s[JsQ=d(Ol3i3LZ<3!9qP!H\/^C5<L_]LE!j-mHXJ!3=^X4BRA)[Nl>)\(tQsZaI
%^FbE%p$obKS;s5Yh?#F)qD]+.O9S>`H'LK&LJ07s#178O9`YLp@AoE+0GjrK@"cfoP6_gN(mO0#!o^tqA_ob(64X0@8pSAe%nU\%
%h)M!\3ZUWj@6gh>TiS:cGP.ti,d`ud>)N.L)9j?#.\VH>jrOXoRR)h.9EU!AR]P:7#0c4RG[%IUTRt$k7*<kNI8+dn>cArO"+_M'
%/?PE#!EN`Y,0jNSFL,F)/^IfI"T,pt+Jq&]Z]+D!a7ablp(f35nIB.6qZ?[s=jaA>Qn/;H)9(k!jLkLYEZ#FH1<WuMV3V.a9ua+A
%3Ap&)#>cX4F&:^GdGBjUbhq:7qsE&YPR`[^9)l:7c0p\B49Xin<ZVA"/?oS-UlqARhn;mpR+ni&7$TNr:XcIHQ&PP:b&:)S&?lh,
%;u_n;^;9%h;H'%9`'Z>O&]Du4rWT7OBM_"97LI3tW(,]LP8"#(V,7fB+Y+m.-T`K$aG^Bi`HuqiA>rN?noXIJTB:A";"iG80+S-e
%51!N@%&f13!rM?#r[l6l_Eiet2\p#"@$THDc"t/>84?D1cSl^YN&9T_>RPsjqS]Pu"FD[H=?:\0!Ms%[aV<sDJ9lDdhDJl3V*GeQ
%;CVbrJZ+(S.E&%%:+05!=b.Du3s"Ta%nWKrrJnlgXpE7upcpQ2*qgoaZ2g09R&^Pf%>L3J[k'.e[qo[RlK(E1cB,_<;^jF4Q.Ci;
%efh=$5P/M,`PSmrp#*h>F_Al(74O^5h3$UtW53(X#J0t.TAA-*%gp*BP6/;%RP:MqdI-Z:*3^%]`EJ7P2q4%>f0!4T8%([0"r,3B
%_su2fY-2-T?W+MtYPd:H/,n?R'Teu92#i"\9oCa5eKS9#"Yo`:9]hEhaST9e307np#*=BWj9!/+&7<#mQ%]s5lO"eK4fD3HJgS"G
%]6JUf,sF3Z*?iJLe@#VS0%m(!m[_+FrO>d,Qu>'[os5$Pg_5o]TVqlTqCNEW:_qK(U+#0DON^(mUMtNE$.=%\^b(dp5jqTY&,#Sk
%_oD70lg%;ZI.pppMkPj3\Z?0n(kTrG2e9%XikM4D7-BlG0S99*MSoNVhB't[n[:M6+#<e=KRf*P]gEu%V>Wdo.i;"GXYX:#O4kNo
%g\60@!6h@a_40s8Fa3q8)ub:*r]dq&s+OM$CVfG\4'kfG*9fqJk[C0L.7K.t#nSFRgmdVXUa?t:8C3kXZO<X0#*&#tb8X8DYJoU=
%O6md#rUCL:/7'r/Pu_/;Ligm&#A:;aHdppAfY7*crjOcB:ai.MBG8*=d_d:0&6^iIqBOu;e+D0Ci,LNGiZ*._`<mIb#`'?WPZV)1
%:ls43JBULS2GqEmU]$QmU_obV\9Z^34>U[]jTF@Y'bBT6Tja#7&HLq<Qr\mW/O-Ii57FkPF@8TqUC;Tj?.KF>\\l/^1ddO*d0B;1
%5g0]pHdlk^$qt2d$61Ih3/%P>2*1rW"aaH`:+ma_ZNHHBm#354-oU@G9dW2nPp\$1M?fjkV.X$da(*L]6kMg2'\3k\];3-18:h/=
%[4^X;dFK5T/Xr4C6mO]JCi30;EdcK5XYbADFTF[`BV%2LMd_hk:/?4>UuBA#pnL+bR08oJ+eNrm)s3HN"@$na8Z^W*'[GMSXIkJ5
%5'4H'J#Tr9qso^b;!hZC^L#BtS=JK,5DoV;T?Ife#"if&l![>b("puTY8UX7g+*d"Jg1!u<r;[oU8WLbmL]$<.l@LM\:^37BCn(b
%bO"40+iMLOWn%ja"I5Cnd^P8(fD,m.Gb)tJe^9`0X<_pWn*drF<_2&NGpI`&[jp-'OCX<%Y:uaVgj3*$6100_E<jHjW$^'q;1!94
%O^^#d.N"%B;a@mW/0,:#IL$ZH*s#?C<:g>'X:P\o`ZIMQi$F%1.RBBg8sGJ%5S5nBKSE&@#pGUb;C>bLE9i3<jM\E4c\b1\hahRO
%#`)MrAQgI1!!^b+*f]g8&4F().s.;On-gUsH34Ua`^EsO%S5O3+\8T-VV;8`VWGEQC+)]P[(*8PZa)()$tS:tLZc1Jp_(tLG(9S!
%T(Kq94<8oBFfo_:!X.O+aID\BjO(os.BK7oDO!3;%d"2WBH.>3HI3NYlkNs5P-._KZS&6l?D)uB$Vujq1bnj%E@[M]`TWld_6-@^
%=9YWWp<M-2+=DQ0G8J7&hn9jG+d,L"A*SAE'7n3L-WPpF$=Zf<^rAhLUE\2!/J&aW`!Zqb1Koo]TKHpj8QO+A,-h^p)GgL>ZZrU6
%RM6N(OG7u+$P2\0R55<GJ2/+9in%]N>jbS2ZbE],%4qC157;T(",Ju#-R`2@)H!\,@G7/5bNKnk.JA";(kQ/M_mHEhZlg@i:h4g)
%LTD*SFXL/J*,l<KUMQf2oSjM6fVfMd'i<9,MBZ_+j`Mpf*0`/lDS/4H)%Yn4!9Ir!65S.(.d:)1%FB+;g''h#fA>]e.>%pZp!U5P
%"%!9Kds"0S,g>7<8lWA#Y_CSuT'^e3V)#Iq+qA3scUqGca>"*,B?qt<LNEOnW`'qm_:`YCR74S3$@fF<J$a.@R`8!%[$:*#IYs5&
%lZ`EkaD`$nmk)jo6#D3TLs&&>-'[$S])Id!]0`t(KY2fgV\QTK-)>!6A(t)K4<HggpM1hG/&Y.BTlDX@f15!1rj\\Ge?9E:`&X4H
%i`ncUY]FRN)A4No#NpM@;7kJ6>$\<rThYo<TbCLl"GM1D-HY5]K#_.F'2eJJ)AJ-C.^ZM.3C5:<Z4]Qu/W-\Mi?VBK>KA<;<aE4s
%@A5;n2!Hlk4D6mW3[$O-=7QlYfcb_5j:d2=%LY(d>cll;$eGCtBFC6p#uD+@D8sKo24sH)gHD738p#X*4:*`GD<8'brE,KbAB3%,
%S>;4^ZiSQ]HK"9[F',5g88f][ZQUh1MEIMh:_@,@B;r$_I/qD`C7R-&$D#&X'rBDIM!ZsPBETSPnlS;Y-PWl;'r")c#^2J5EW\if
%2[);foNk6HO:\-S0Cg;aZ0`]:ErNJ5;u.bkKtU$V7+2]dR>uHnglQfbck)4oqNMaERZJeU+_q2NN2@j7/`&]7I*AeB4.p*Xas,l8
%Nc?NN\ck?71K=[Oh+oLtmnDVLfm4ok_"uERn&&\*P\omIGKfAkL]0]h(LMb_@&&SVc"[<.7i/TqM_j`R.g$)oX/K2`R=D<8'F$L`
%nDr.J'>?6k_>GZ!YtKJ8C0!?^8\@I"6]2J,E[t(5)Q:&6\jE"][fPT.$n3Cc@7WWsFh*m(`@*]bT:3cDVjs!5g\5lVSr=mWT&m5H
%n?n-e(K'TE4^CIiNF;Mr$$%8*D?SCgj>rmGMmt]#paae`?*)lghcCuW1m4=^^QnT'R__IIfI7_CNT@7QCt+q%4ig+*;4)69eR&:P
%)+EplkI,]o9gRR5O^HQr2i?ihIGO.u)hiO;2LerG?5<""[_CAY^T%4)7Y70c@:OE3R3o@#N/b)P@hIBu:,XGbN?MnPZ+6?I2?ohX
%=Gfj1jlbOW&S#H8A(8M/Flt/ki]IXH"*iT*r-PUr)LFiS!T"Q]p`RfK<S%uu=gH5e*S>=$;2V<o'TV/cO[r()WlQe[%ZlZ/+BX7E
%R1-F'*7$^H[D5e]\MD5;&/uhG;.Ms:U02jHeM&hb!a["EI&t_%(Qc:Cf-_N0/dMj:%ok4bO@,pMk0YG/j,B/fG4cEKS-7E7FhMS]
%p:DL^+;?koi@Jd&qB/[m0q(@M-76hb/A=3R=Yk[(B$C[uRe&6(_r"$a/UPUdU5m"uGqY]dlF9qS@$F/+XXHc!6$k.=f\%`Wat_?\
%3A34'0WL"oU4!0DTU,bsfVHRn`+oK(j_0_Gp@;?S?R8&A$Gf$h#uOueObG(A8I.'V8^PuFH(o'SMQc`9m4Y,>+Duo?WZ^dKg!>$]
%[;eQ:Is=Lq3D6(cYIb0We1\W([!jns&'F8mPOS2e4j=b@EcpQNa<fgDZ?UmlcIYL^XdY)NF#2b)E_P&P>6_$.#O$5Il2K,\`Z_"G
%,.k9'Q.#rA*iVR1*+oe^;[g4-#8@F_,@(d7PUT-&n3$6jY<8*)EA%=BXA7:.r;ipCgj.;?3X)/9EZG/iYL[u;WFN=IQO>D^%lKJ8
%"t8b<H6sDR!OPE!*/"KiIV)B@8U_jmX0QWn8Z.).gIfjL+K9$"7e?Zq(S@WNcmBcKOARD9NWQVNg7*OGFd&:=Z;F]sHHcUfq>#5Y
%`0ekP<2Z:=[F`>T.be74gZs>J4`R5jIRWSXW2DQpG,sor<8qgFcDu\Jf>MmuqD\*D`;jj5'C>)m>JnA73jH/'grpd_UWD;<neEt(
%[u<&BeRi=Jfbf:3X@;jL`iO8<54,IOHZRcXkd@gYD9QZ4A)!2IcKOQ5I!<'iIDltH2&L4)MGL\$@CP#/.6"-J^!1V.*8QuY0;d<Y
%g%Ss=rJ':^o]`8d:%s)RR^L56U_@3iL8i=&TqV&k<Artn%U:0G&6A#%2%Yam2+h+*lni!aN:+UQ44.cH:M$r$!/W?*`O,3EodN#3
%`gMTbHsU,V=6a?QU;/AY@dZo:>(S@\6(;>emt4M;dqW%$:6Zro)K@!I=&`6@Y5T)/V&Kb!]+2^9M`EF>J<2IpTsX."K.m]Y%0B@:
%Tn*,&$j50#'e$UNZSP-?A.!H?4cmpLb8p7lB?7DbDV8NiLaXqNF:C6r%J(!7#\Ht+A-BQed4@+,pi/m'8LjLA`uV9o[UK+ahGO'F
%<X<oVSsGm1CdS@01M'OcFkkBuT:c7C4O%"CY'<O-RDL:MC:QYnPP'#C%^[GbA;*&hQ-R_(-"M-&<YW9C<^3.]OG>:'$P^O:::FT=
%gPB%&.tip3(7=bM\)3YYW=7hMGo*OC`pma]F26M(7Df8`3C7RfA+-HM?<%:Dc&I--O*ukdo7MbCNi"LP)&.!SrNYXCc;lJQ-@_?=
%'A?2?k2;>u_3tTQgd.pcp=7TcRD"t,(.`VJS)=K>hNe).S_",fJ(:6u-!#3,m44-NlRHkNQlGO>B,R()S<_HS)V98\)@I&Y7^SS;
%'*WC&.ud\a=Yp9W_+jS^Yf3]O$+-pZR:FR9.YuXpL;O04bL#1kjDn)Z4J%g_M:aaFV?Q%ROg(D%Ug6,4f7kGmPcd<7)G1Q#YA@dr
%i]Q/I:dg_T4s=.i<'sned040T#Z^LPZc<@t]&'NX4_kJID?lT*bC6=70?:X!C^-_'`sDh"NRWnR-[H%bp$%5\B:7(LU@O)ZXR.i6
%<L0KCZbomWRM7e"L)eF51sAm!=B0OG+o=&;O\d(L3$2h_^Hf2]q<Ws\''cUc+GG:edPGuKc[pReL./Wrj/3GGe^T=r/r)WMRq^LT
%=TqF;6T9sZ`?(!j%O7`;r5fkVNIWop_`]13T7N6i7mjD5()bh7.&G1g0fdoO6.P65X=3XYS6o?NaoM/n5`RKb)<h$X=:1oLoN'4A
%S?e"NY3'.Y^9IAk$aX?PiH42[<"iA[C@ZhR#r6B,jtAS8QRhZo!q=/*0Ap7:<!p:F)rplp$5Uo_PsG!/AGd)?bJO!"kN=#OkLtYe
%hl_?66@GDb#SY,+np9kT$2&GP2.geq2<nt)T<`baU&b#'@Q``9R!`8HH1;:"QQY/U_Y7-qjSP+b2)XFk'J6qM(ZYBoB^gGE`^5XQ
%?Qo"='fu0i'd_aE+n>O&ZRap?;<.Q:/107]Tp+r7SLQ7>It`jMYL(Dc^Cjn[M8FNFf6K.[>]3DHY=+XKDQKId)Pdnp:P])<b5-[p
%)"PfF@Auo&XK3M*)JcOX+/h+!9<94RCV>sdo`If5'VE#[W0_^?n:"IZF7-s-'mX/JPrcQcKD3ir=i/&Q@Jak8SgWRsSu1sujo$m0
%qCD%/I]/KppNs)cO"9\nE+79;3dJJaT4QQFXPY8LBLi5hom;q<aa%Ir*i8F*?!4pdQLfQ6rJ4Wi)iU!THhn'6b5@<W'fS\=@/`1h
%0jT6Q*%JD4)pBB,o+1p"Q2/m..=K<_5Kl=:\M/:nJ'pZoo):.3hLC7#q[(@TGHu[H+if<.e*JG0al**&"NGUrrA+9GQ1YdtIGt**
%`#/LhUp5_f^etr^rreks7.CUor'Yj<)8E8'V-b+TXFRu9S=bNtQP[Y;,_TS01r_0NT,ZcT[IKiMpWn@EIMi/j=;\f3H]eMknR&!+
%pfGr^s0<o&n^H>B=3/8RM>CW`Cj'c<EPi,co8$thYkPW74ko9@H?^361uANf$nF+=<AJZDf\g%<0'^^cW$O8HE3O?m#E,WPOA@\L
%<O72-G?@N)L0hW4ern^?mT9%]5a=0`R1VT9Rn?mG1kb?Kb)dY^:'nb)!6C?H72@8N6d#b#G3=Yg^.t7X19r!^l]"58JP_K\3u'dL
%c22[g0E.'`jS:m[8jk_iCI$_Gg*?VPN0o?3a^RLc$EC%2(Mu2>?h8S%`g"NI65]!IRAU]%-;R@bUTiX\nu*7*:$7d_4JQ&_O&Pq?
%aIhEmUZ`10#KMeKm%"b<hFljn;%MJWmF00Z"10e;"*^jR$*HfB%;^O1+4UrG!#K`2Yj`=i:r(lePbO>GdX6Hs-Q$ZWSuMco1-oFS
%<99?V)[$^CBSKL@1Rl#KZ*h"AW1;/!h<8t+@e%/T<N8ZXX]6fX\.D]Z%^c_h*KIR,@-Pbo2[;0;^TpV&:*Vl\fhCD((ZbGcGA&!N
%]U=)8Vn\ohI29@rSbhms*stjoJSrcm@!jRjch7?SB;!UV'b=dpq<_EK%mB]5NBP?Y=SIDD/'E[p>:L0)ZEZZ)*A?I[TL:SCenG%Q
%"WoM1jZ%fg+1sQbkDk-nVM[H1-U"Sco$MK:JOVXna*G_3S[HN#Xe<0M0?/$\./Q$qY]7uC^nqs-E>pq#i1I/(d)l]1o7$;aG`i(+
%4-Q==;?<".D^J%!=j/($7X/&1``)'8:akCPpONfP(/oK*GZVcWAgZd2:@!Ru9U#m)]B^]D1KNVu+VV*7:'IaXb]e.4TjW^#EHJqb
%m+N/\GO0n#1);1incV!hkt@Z`PYeO)%t`Ot9a/X"AqQb!R3E9fh6ah\cOuNVJf@4%':V?GIDR)H;)+XS%2/0hQm>A3n=AV=75T^S
%hLp/+!Nbui\Vp39H)VUqjctPKlS0SRS?i@]4)3?XZp=XJD0Q0UpE*/oHlXb>DmtdDI^jr6N3>9m=':7tLRi@fO57rSM'\7$-HK=r
%p.][f^]AHeRi%nEDAq$IMq9IH\;NC5<.%fVXc10R4gTPe4JQ5<WdD(2G1H$C<U]:T!aR33'*+IO]'*JJ>R>Q,6QPGh(TC'+k2#g2
%o0^MG$n$"B3#dm]*eKgM2)qeLe-YB]<Ks7.hBT;uE8i,mHsN8EM6pZ!1:;ZA.7a\I0kI89RYFNe=/(O9#>MJ6g8ttP'kgR+N`(t(
%g^mXIW*<o;c'Ed:*gB</WoKsf0-N8t`^hJSD'S)5Q/F(iU.REEY]F9'-tJeFRZ(k_FRAuM<4T9*4UtJ`):X1*G_dE`[-[_9BtZQ$
%4gNtW9MV0%^[rsA<<^_rK\NJ&.:kg.%<]dGUJ*=qfH/it[kYUH]4o/+eK%o^Q_kj?[UR9j6_DM'K>:F(3WbO'dJKD7+f!6n%F/?;
%F?\k9g2;?L[4hWMI8^\]O?X1J>+Ue[QjE'#_nFQ1XNt4,M\Z1[QT@1?3X^`o/7\p?nN++qisVf*m3U#;ENnT"K]Au@rleOe]#hd+
%IS17uWuhX+Q,kQ(d3P_a4)5eX5;H%U&]r@l1h'B`Ie*YUH'm"D9t-s08`,;s$FRt]E9u]s.MB*#L;=c0ln`;F*]qiaBo#cO\/^J#
%g1D5&JY<IMMK"8\baZ_Vg*fKhOpO:P%ec6%Yd'$#CV_KX$e?@PNg_LAcQF0@Q_H01)l]CFo5Oo7e$sgTA;,UQ-Z@r'$<"1YgrD]N
%I$54S@i:@7ni#oe5)e]pBKRA$QXP@(H+DdTCO"0Cs/T\L,TlnMaCIBVr^t7FN0N"*&2IA"9H,%+9I@r/V.5a)4C.po*M`8`;Hr?%
%e;+ac9#ihWHmp)rAD'IdV.146=l<m)1+EkC`#OF=:bD*lOATCsf7Z`:(n2D`S[:)IZ'^`:0ehZ\a8iL2`_"6b4_CDbQ&nijYqHq;
%P<HM?Kog-uqeo!G^8Ib'1!ZjM1_@-.eH`>HC^pHF]2nT5<,t8!-">!ubSJ1_;5gnT]jeq7n%Va(@e995lt$(N"uBH$AR4cs,h\^r
%LaKB#UI4R53dsnKb>NA^N"6#;neQ4b.+NJ(j'>Y^]$1[#WV^E_R[C0-8la+P6:41.WV;V^8i$IiaX#+pZ.H48/&^1oUcJS;,23FF
%k<lR3Ju3%e7,QcKV6[)57>)p:TMLQS7sd-SHMH,beQbYMnc6!XnOO9FUO3LD9NW?jr?;sk9,Eba6d<)JQ's;k(QJ_nqnd&Dh3lpV
%s5<]dT/PHq^7%ZDSIP,'k$Q+7kegWe7hT2MmBWGDJ1s1ZL-nuupJL>/+;hJAV&OCfOpdS8X\)HNFWKRiE79ScXN(a><gRktD-(`+
%Tm03FB=2,R[?)rOY#O`Oin:6YK'g3((5q%hIaf(@#OQBc[H9>`^JKNInJ:aPU8?]_.1qU-Y%1F3"(N`t9``9DX\k:($eF717:'Cs
%h&<:%"S,KNL]pI"#k84,?-Os5cW9fY'Q,ur:kO$<k=GB^U6rrAe.87$ljZ,HW/]BVLdnHO&udk<]psmI^GL(.1sdM2k/6a@.m.sh
%IUKL0DhH^<=-YLP'TX?@>u`/2;lb?bhM83uY$mkS;?L%dmp$PF^</3CaR]"#1]o'%Z-XRZ)52E5&LS7FgpSWc_F2TNj=Nhmi.kI4
%jeuIFbK/nR&)`h#3M=A_bg7;/Uje:!6R]j<Q5tf_DZ/A!kN.%L[tanPr.g^iS?^lo^(?B?Q&;:uMs,SBQD83X<%Up$U:;HF:/t@3
%#]%d`"tNu/Lu*fe?!`lJ*GU%hO(NY.ZZp7S0-%XLob#4&BZ,[Q2Xm:JLsI8\,/q_9fd3@u?M?;0pNm(A(S';H<dmc(#"S<#;6r^t
%U01uPNn.L`o5:.<h-no;h\QntqI2+EE&5$&4P&]ik^:3rs(3umAth@F$?P8nkb+`c2:a8!Qm^m>@J)YEU_r6\'g;3/c_FT,)Np2]
%D8H&GA,B<-1^4Rb'Ct7+'1EN4']i5'6u-GClRdGYi;L@cTX>2QRbrrk3ma\(U;C(XiSL?qX#KLT%lOOjKVo\?-qFpif+7D`6THZ(
%7Fr(,heO<%f/5B-]mfH=dB0FK<'Mjt(7%el$G(]Ura("lesQZ;nP%2d'e(M.+P8gX?B#&@:F2$aG.k319snjV%oKN_jRP]iMiNr/
%&On&FQ;L5!C]dlh*@Qj$gT%Jr&Sd[LKRI!#4:ETIkkK##Wi'6YOWL^IY1-50$2n(BmU7'SM*c%=)iugU;B9FJ_=5U'(*buD#hq2m
%%/UMN'm^KcYZGAZfdrL[a'K&enNU1sI_lad(ii7/"n[em$=1V)Zs_hm)Iu>qqHshIp0_K&+?,l^`!)MjciOH,%9E'%k=?q/TbTUe
%T2=<%U04PAehc1`pTJ.H0Aq!2)mH5gLf@A3rRmlCI;dd.<ZQl2$Y=!=WCsr*h)A`f0Jp$P3*mQZW-K3lO]=6neuU\2c5h7$2.duV
%'36k-8$sU0U7F"2>=1%oAdgi2#Bqj&*c#Ee[dg4^enJ'E@R^O8)IU1t;RiYIAp)_"e3d8s9#V7;m9PY<@Lh*MG,PRDd/9)Sc:2W[
%pIWCH4fD*16@L7SmoRI&^aQBuU-]c_H'/C)M5_=^0rY5W*;1Sn5(I_Xp7#f&UC1bh\XDg]/3<Z6'i-Li[\h!9;RV1;R"]2GHci"c
%KgMM-m*&;<b)p-Z6=u961bc74m`I4EgL#\_=/P1>5ma=k2o"Kklee2@V*OSh]B8%=_=*"6$V^94l=>]:eot7a9-\u"_Ql+D,pBW'
%HP.21&tuMEdCu%8q_Vo4Il1bYNFLlqRL((ZT`YTW"H<bUWb4MEA'[$V*_(RB^C>"`$e7.4A$&?A>0ruR4G1SXX*g_"K2uNKIBZq@
%kT<;&#5/0e3/#h1]oR+NF(e>-!@q0<Y$ZpgP#N5E[r,J;TfFh\R;M&,0Uq:t$U29Rr7nn&r"c=73-&#//(jF!oo-i6,l,Xf=t->:
%=<j1`_Z&##</C39,oH??"qa"??+:U9;-1/EG[YXR#MCrdO578eh_H=K#:qn<rpgh?^\q>GBIpimaWfu8`Q+**:QetF?rX8$GbL(t
%]@2+cA%@i6cF)p-Za3/je!-hhZL:ts>#n%`eaR;En[DRPb[tNq^,?F#P@sp(RT+-SdpOiaTJs*?LS=(j)frFl2+Wko3KMYI5Ae.5
%ijml7p>p(r@$ekSCrT?>XDi\o)$ee=(=oAFeZU\p(%"-\S[FE,1c25gI/Ba]qeiMF?0jmgS"bj<C7T*G6^Hro2,*'.hQErRa/qs[
%6QCODmdGSg9tpK]frPl$5=eKqC[oH!`cRb)#bQ'L7>RV^q]BQ\MP:Hok1gQ\b:_P*%s?pl+W(U-Uql:;WRQIA=mIS-plS%?QR=lu
%O6q;/\Ip=eNI!\$fZ!L7mrX;+ctUFR@AFbfoKh(kASCb078p]'TsY3$WJQ]Qi4>aT+9Ye5lG;DY1QsR.*h#QLZN"7+iff&BEJlm8
%:cS*:A.cCdNPRHh6TdRY$u81s8#\J@)64+c1]7JR7:?fo+i3:AW$BpP9tM3dF)a@<=i(3F@M`/aghuJ'T;88\:Mb\6_\ri,B5J)r
%9DHa`5)sCBe[8bj_rOE)N].e4%UN@uKboS=B%2@0(aqVC'aLOXCaLG&b[mIB'@[j3&iR'k8=PJq1m)ksUPD):@8@Y&gk"<jQ\Q`Q
%]tIoVX=Gi`eZ0_enJN<$A9OUS:7r@(<?%)QTHQe$cg9W1B9/UVSHg2%4,u!ZbE`@d0KaZNh)D=tY?g<mR.H>,c'8>hGW.`3g]6CU
%Gca;kC8se3K/kbjY$rk%<7Yf;'DVXl-kh\R&@MEFT7em?Z@5d7^u63+S%Z:L1L:b;p-ni]:E95jgdh/!7>*df.GJLm(a@TOC)#U@
%\CT<>gj'UHOTUt[R$7<K21utRp3.RH@NcYk@$5YKGS.r10f^>r-FZ9W@.^<_K/uN9W)[o(#nQLs#-j:P7<\tkj_anbQepimlD2AS
%[*-s\#0sQ/5\P$iX=7HB-Fq;kQO!J6O]'(h3Rh`hI>>)9:`=[8@o)LJH7ji2-Sm>C1k<R)<tTT)04LiC`Y)=oDQJ!K\W-*TMmm_T
%>#r:8>?CobeBs$!D+;4iECs]'%1^,F/3+Jk>3_]8f&#=)O6p^i3X(sn]F6laV1\,N2g--qS^$_+@JjSu(D+Gu5!bV@V!(,s72WjN
%pX0k=)4D`g$f`-_3I[^F)auQh,[5%d3Ro,eAq"+,C$_6^0%D-#0(828Y8oP!G[`kDRsCdJ=<XCmMjgae=+X^?,"k1DWH#.LZ?%cr
%'`pTAgUFnAeBFMkYN@\&:t,c7KuOX(J]_k]%(r;jOHDr\*%T]9RYQ\Cn`Ki%(R)8qVYX\[9nX>Y.3WE^n:V62YB=OqUhTI^'O6VO
%L%65*rX/6Sk/LHB(6bt!VDK+27GYHZR5rIp/]gOeE+>;S"+0RdID=84%jgl\golN='K\*F*E#`C@aGj[,R4(K-[$P'4\D.QWo@XR
%n>Eb0p8"HmVC/?N^Acc)"H@`V4C#<K/FYRc/Lk$pRgN']M_(W2GGF-mmBnShG%3'<]E;s\qo+R@djLgupgc-<fkQgB(rA;KP%]/T
%->YfQYC5rF,7M@Vqd/2%[:,E;SO[M(\YjtHTpM$OCbk4F`)m6u8L>6:[dX/Rj8"1QKqGrF>4Vi#?2H'=7;g3ITkcWTZO[0F_MCE\
%+F&;cHY0!7DH3!_(!UL)/'dA'iIFmI3k[qsWVTe9"(QO'IPpskog=hk-V2^Rd$r_lX.8lO+$p&c2^\srd(SEPPaL==NeVCu><N4n
%7_pr61Ku#,Ji>Ot(-7fJECF_Mfs]PVmAn2jV_O:Bh8YlKl36gddFB,1eouq0?R/Y%;HB%AQ+7Df/>AE@=CDfU`#:gs,%N_q72mQX
%+C4k,&][UALn+FIIm6*2i:P7THDhE=la*,IMSk_;OIke<2uF.Dh9_L:8dl%9ES4'>![uN>6LW[HnF7L(('D,tZKcA+N,tMba<QMV
%P6B:1%UnPr%l*FN(sM"ZW0(8\1Z8o*l@O&FRF_TCS4k26+Pa#0m8aH!6=*>f`U"IX\-;'e*uE;<KB6q=Pb+YDKsSe35k!ILI+Z\;
%.("hB3>ceuKoCfHaZ*o$*R&/P>9<edk/cb\`JZ"K(&r;C%jkh!=H(ocitf#b+5=7gXJIKG`]7b>*DHLq*+2J%"DPhDM&m]d,bA6@
%?S,<)U2VBXEU=K^:l4?3kI-o@R*`Hm%#M"(!'e]*;Z2L$&LSO^pr!o1J`t&7Qp71i+s3C?0W.,?16M=ug3n>pE0*R8QZ9ZGZ*Enl
%POAn%/)Z9rc\Ug!3DO@oZ9]j_DC5t]$oQb4p4A>UC*-',Q7c_d%B]MFr//kuFtt/;cas=G]0hZP`6$>cm3*(o?H%*m4a?s9>3!FK
%8^3D_O8k%\7iZ)f==4)qjq&7nYqp'S%'i#o'(GJ0$jA=903\I+F6r<_*Rj]EbAa<sd]Um!:<86RL3NIP3<accD6Aa:^ec8F,cloC
%7?;H[\?\<7S/\GU%+dAPkmTT&bO5N+g+VnuJMEH@b!DXQRo>du?'jIhguWbC"RL!7RI6eCIg[,WcD]pSTK6[5j1\NX1-\XTqdkCB
%&cf(r)\mVdki7OIjmK5m@A\f&)iPqY\q-I8UP[]A%CN9N@c^m4WdSB2c67)Pa"tjUXrjok=@ZlJgMR`2f9geKd>$E@)S.Os;83!O
%*IDZ!^:H]ScY,\ZT'I0CfZU29+KJK\]$?)pe*7it>onIT$B63Hd&5F%)6P'dF]_.Dd+`FQDl[*)V3dcTf?eYc&E]PTdt5%MDl[[;
%iu+u<k>0\]/32ffQU)70>$XLf<nG^ao'dT"BFJm55-;!4E;bTp_`A]ghKGspfMIn&<MgpWa@?L09KW!+"o_8]i>,*TTIYR.&N^nJ
%,R`J1W$(YCjof$cgMi91!?.hG;ghUb!]:\JM"(&Y[eUdtZ\hi>Bk(T'b_Msf:)i#_7!`f^)TUM'5$4Y^Khsh]oO_rF`EIkg_i;#S
%!L^U/e"as??[bK_Pp)j]AY_i$q<M)qe"LP:8&pNjH<@$E-taEkcNVso,8>dlM!"8ZOI"u(ZH*eiPchVa0=MlfjL.p+11.rSgtO9f
%VduoZ5Q9X9^\bp`q[`M;rSsOMq=2N*oA`V2r,;XcpeQD;duXP)Va(1(a,`I`rc`kgb9-cXj/5-@q9Q8PrV/U<s7GPO5Q1ADs7NQ[
%rV5V1s5RJd2\8).+8E_qrp`5PqqqGArrRbUf=V~>
%AI9_PrivateDataEnd
